var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/components/AboutComponent.html",[0,0.299,1,0.872]],["body/components/AboutComponent.html",[0,0.496,1,1.535,2,1.469,3,0.201,4,0.136,5,1.151,6,1.151,7,1.151,8,1.151,9,0.106,10,3.991,11,0.136,12,3.265,13,1.846,14,0.721,15,1.209,16,3.432,17,2.979,18,1.619,19,1.754,20,1.078,21,2.165,22,2.03,23,1.518,24,6.748,25,1.518,26,6.03,27,0.167,28,0.568,29,2.125,30,0.183,31,4.572,32,3.834,33,3.619,34,1.644,35,2.267,36,0.411,37,0.013,38,1.568,39,0.284,40,0.672,41,1.333,42,1.469,43,3.096,44,3.609,45,0.136,46,0.203,47,6.03,48,5.265,49,1.078,50,1.469,51,1.423,52,1.151,53,1.806,54,1.151,55,0.284,56,1.151,57,1.011,58,1.151,59,1.011,60,0.672,61,1.877,62,1.011,63,1.151,64,1.518,65,0.978,66,1.518,67,0.978,68,1.518,69,0.978,70,0.952,71,1.011,72,0.756,73,1.011,74,1.151,75,0.978,76,1.151,77,1.011,78,1.151,79,0.978,80,1.151,81,1.011,82,1.056,83,1.151,84,1.011,85,1.518,86,1.011,87,1.114,88,1.151,89,0.978,90,1.151,91,0.978,92,1.151,93,0.978,94,1.151,95,1.011,96,0.978,97,0.829,98,0.978,99,1.151,100,0.978,101,1.114,102,1.151,103,1.011,104,1.011,105,1.151,106,1.011,107,0.956,108,1.011,109,0.978,110,1.151,111,0.978,112,1.151,113,0.978,114,1.469,115,1.011,116,1.011,117,1.151,118,1.151,119,0.007,120,0.009,121,0.007]],["title/components/AppComponent.html",[0,0.299,57,0.901]],["body/components/AppComponent.html",[0,0.501,1,1.001,2,1.492,3,0.14,4,0.14,5,1.178,6,1.178,7,1.178,8,1.178,9,0.109,11,0.14,14,0.682,15,1.143,20,1.104,21,2.168,22,2.036,23,1.541,25,1.541,27,0.171,30,0.187,34,1.14,37,0.013,39,0.22,40,0.687,41,1.034,42,1.14,45,0.14,46,0.208,49,1.104,50,1.492,51,1.444,52,1.178,53,1.822,54,1.178,55,0.288,56,1.178,57,1.601,58,1.178,59,1.034,60,0.687,61,1.891,62,1.034,63,1.178,64,1.541,65,1.001,66,1.541,67,1.001,68,1.541,69,1.001,70,0.966,71,1.034,72,0.765,73,1.034,74,1.178,75,1.001,76,1.178,77,1.034,78,1.178,79,1.001,80,1.178,81,1.034,82,1.073,83,1.178,84,1.034,85,1.541,86,1.034,87,1.14,88,1.178,89,1.001,90,1.178,91,1.001,92,1.178,93,1.001,94,1.178,95,1.034,96,1.001,97,0.848,98,1.001,99,1.178,100,1.001,101,1.14,102,1.178,103,1.034,104,1.034,105,1.178,106,1.034,107,0.967,108,1.034,109,1.001,110,1.178,111,1.001,112,1.178,113,1.001,114,1.492,115,1.034,116,1.034,117,1.178,118,1.178,119,0.007,120,0.009,121,0.007,122,4.085,123,6.123,124,3.675,125,3.893,126,2.781,127,6.825,128,6.123,129,0.525,130,5.933,131,0.254,132,0.591,133,1.256,134,1.216,135,4.452,136,4.679,137,2.571]],["title/modules/AppModule.html",[138,2.962,139,2.962]],["body/modules/AppModule.html",[1,1.488,3,0.1,4,0.1,9,0.078,14,0.458,22,0.791,37,0.013,39,0.403,40,0.492,41,1.537,43,2.27,44,2.646,45,0.1,46,0.149,49,0.791,57,1.722,59,1.537,62,1.537,65,1.602,67,1.488,69,1.488,70,0.768,71,1.537,72,0.704,73,1.537,75,1.488,77,1.537,79,1.488,81,1.537,84,1.537,86,1.537,89,1.488,91,1.488,93,1.488,95,1.537,96,0.717,97,0.881,98,1.488,100,1.488,103,1.537,106,1.537,108,1.537,109,1.488,111,1.488,113,1.488,115,1.537,116,1.537,119,0.005,120,0.007,121,0.005,138,2.437,139,6.297,140,2.27,141,2.27,142,4.997,143,2.74,144,4.246,145,2.646,146,2.926,147,2.926,148,2.926,149,2.926,150,4.709,151,4.709,152,4.709,153,4.246,154,2.27,155,3.352,156,4.246,157,4.863,158,4.246,159,2.27,160,4.246,161,3.352,162,3.352,163,2.926,164,2.437,165,5.82,166,2.926,167,2.926,168,2.926,169,2.926,170,2.437,171,2.926,172,4.863,173,4.863,174,2.131,175,3.352,176,2.926,177,2.437,178,2.926,179,2.926,180,3.638,181,3.638,182,2.926,183,4.863,184,1.216,185,3.352,186,2.926,187,2.437,188,2.926,189,4.863,190,2.646,191,4.246,192,3.352,193,2.646,194,3.352,195,3.352,196,2.437,197,3.839,198,3.352,199,2.926,200,4.863,201,1.407,202,1.586,203,2.926,204,1.907,205,1.731,206,1.907,207,3.352,208,3.352,209,4.863,210,2.926,211,2.926,212,3.352,213,2.646,214,3.352,215,2.437,216,2.926,217,4.863,218,3.352,219,4.863,220,3.352,221,4.863,222,3.352,223,4.863,224,3.352,225,3.352,226,4.863,227,3.352,228,4.863,229,3.352,230,2.926,231,2.926,232,3.536,233,4.863,234,3.352,235,4.863,236,3.352,237,1.174,238,2.926,239,2.437,240,2.926,241,3.352,242,2.646,243,2.926,244,2.437,245,3.839,246,2.926,247,2.437,248,3.352,249,2.926]],["title/classes/AppPage.html",[46,0.181,250,3.217]],["body/classes/AppPage.html",[3,0.191,4,0.191,9,0.149,11,0.191,17,3.673,37,0.013,39,0.302,45,0.191,46,0.285,51,1.512,119,0.01,120,0.011,121,0.01,137,3.122,159,4.34,250,5.87,251,1.613,252,5.595,253,7.436,254,5.036,255,6.408]],["title/modules/AppRoutingModule.html",[138,2.962,152,2.759]],["body/modules/AppRoutingModule.html",[0,0.618,1,1.381,3,0.151,4,0.151,9,0.118,14,0.478,37,0.013,39,0.399,40,0.746,45,0.151,46,0.226,65,1.518,67,1.381,69,1.086,75,1.381,79,1.381,89,1.381,91,1.381,93,1.381,98,1.381,100,1.381,101,1.237,107,0.719,109,1.381,111,1.381,113,1.381,114,1.237,119,0.008,120,0.01,121,0.008,140,3.437,145,4.007,152,4.37,156,4.431,160,5.633,163,4.431,164,3.69,165,4.431,166,4.431,167,4.431,168,4.431,169,4.431,170,3.69,171,4.431,176,4.431,177,3.69,178,4.431,179,4.431,180,3.226,181,3.226,182,4.431,186,4.431,187,3.69,188,4.431,199,4.431,203,4.431,230,4.431,231,4.431,237,1.778,238,4.431,239,3.69,240,4.431,256,5.075,257,5.075,258,2.816,259,6.452,260,1.778,261,5.604,262,5.075,263,5.075,264,1.718,265,5.075,266,8.437,267,4.37,268,5.075,269,5.075,270,4.007,271,5.075,272,5.075,273,5.075,274,6.518,275,5.075,276,5.075,277,5.075,278,2.622,279,2.507,280,3.69,281,5.075]],["title/classes/Artifact.html",[46,0.181,282,1.207]],["body/classes/Artifact.html",[3,0.161,4,0.161,9,0.125,11,0.228,12,2.924,13,2.054,14,0.779,15,0.852,27,0.198,30,0.325,37,0.013,39,0.316,45,0.161,46,0.24,55,0.344,72,0.897,82,0.946,119,0.008,120,0.01,121,0.008,129,0.575,131,0.441,132,0.965,237,2.351,251,1.359,282,2.37,283,4.716,284,3.772,285,3.315,286,3.466,287,2.45,288,4.64,289,3.606,290,3.315,291,1.96,292,3.05,293,5.401,294,4.345,295,5.401,296,4.251,297,4.264,298,4.264,299,1.6,300,2.357,301,4.264,302,3.927,303,2.928,304,3.927,305,1.6,306,3.927,307,3.927,308,2.668]],["title/classes/ArtifactBuilder.html",[46,0.181,309,2.759]],["body/classes/ArtifactBuilder.html",[3,0.158,4,0.113,9,0.088,11,0.239,14,0.726,15,1.102,27,0.138,28,0.499,30,0.325,32,3.371,36,0.726,37,0.013,39,0.288,45,0.113,46,0.168,55,0.375,60,0.899,72,0.906,82,0.663,119,0.006,120,0.008,121,0.006,129,0.454,131,0.419,132,0.987,251,0.952,282,2.42,284,2.62,286,3.608,287,2.03,288,3.371,289,3.277,290,3.277,291,1.781,292,2.794,294,3.775,296,4.274,299,1.121,305,1.57,308,1.869,309,4.902,310,6.098,311,2.154,312,3.168,313,1.399,314,4.228,315,3.591,316,2.13,317,3.476,318,4.602,319,0.744,320,2.988,321,2.51,322,4.146,323,4.12,324,2.752,325,1.869,326,3.784,327,2.314,328,5.303,329,3.784,330,3.747,331,0.714,332,0.65,333,4.12,334,4.63,335,3.304,336,3.591,337,2.988,338,2.752,339,2.752,340,2.988,341,4.9,342,2.752,343,2.988,344,2.752,345,2.988,346,2.988,347,2.752,348,2.988,349,3.183,350,2.406,351,2.752,352,2.406,353,2.752,354,2.563,355,2.752,356,2.752,357,1.243,358,3.784,359,0.522,360,3.304,361,5.345,362,2.752]],["title/injectables/ArtifactService.html",[363,1.333,364,2.445]],["body/injectables/ArtifactService.html",[3,0.183,4,0.114,9,0.089,11,0.209,13,1.631,14,0.359,27,0.139,28,0.502,30,0.29,36,0.552,37,0.013,39,0.372,40,0.56,45,0.114,46,0.17,55,0.313,60,0.56,70,0.602,97,0.691,107,0.87,119,0.006,120,0.008,121,0.006,126,1.731,129,0.457,131,0.394,132,0.961,133,1.023,134,0.991,137,2.237,180,2.423,184,1.383,264,1.804,282,2.512,291,2.123,299,2.316,305,2.149,313,0.764,316,1.943,319,0.747,325,2.632,331,0.627,332,0.57,357,1.152,359,0.749,363,1.744,364,3.198,365,1.883,366,5.415,367,3.328,368,4.354,369,4.207,370,4.207,371,1.943,372,2.632,373,2.933,374,5.329,375,5.329,376,5.329,377,3.009,378,4.032,379,4.612,380,3.994,381,3.19,382,3.316,383,5.329,384,4.506,385,4.653,386,4.653,387,1.846,388,3.033,389,5.329,390,5.329,391,4.18,392,3.811,393,4.207,394,4.653,395,4.161,396,3.609,397,3.437,398,5.329,399,3.811,400,3.497,401,5.329,402,3.811,403,3.688,404,2.326,405,3.811,406,2.011,407,2.423,408,2.237,409,2.169,410,1.804,411,1.335,412,1.969,413,1.883,414,1.433,415,1.335,416,3.009,417,3.328,418,1.804,419,1.883,420,0.991,421,4.468,422,3.811,423,2.287,424,2.287,425,3.009,426,5.329,427,1.541,428,3.811,429,3.811,430,2.423,431,2.423,432,5.329,433,3.811,434,3.811,435,3.811,436,3.009,437,2.581,438,5.329,439,2.885,440,3.811,441,3.811,442,3.811]],["title/classes/BasicEntry.html",[46,0.181,292,1.531]],["body/classes/BasicEntry.html",[3,0.166,4,0.166,9,0.129,11,0.204,13,1.702,27,0.203,30,0.296,37,0.013,45,0.166,46,0.247,55,0.396,72,0.931,119,0.008,120,0.01,121,0.008,129,0.585,131,0.402,132,1.042,251,1.399,291,2.274,292,2.568,305,2.387,319,0.899,331,0.524,332,0.476,359,0.673,443,6.089,444,4.39,445,5.56,446,5.393,447,6.831,448,3.374,449,5.56,450,4.854,451,4.042,452,4.854,453,4.854,454,3.765]],["title/classes/BasicEntryBuilder.html",[46,0.181,323,2.318]],["body/classes/BasicEntryBuilder.html",[3,0.128,4,0.128,9,0.1,11,0.208,27,0.157,28,0.544,30,0.301,36,0.628,37,0.013,39,0.202,45,0.128,46,0.191,55,0.377,72,0.949,119,0.006,120,0.009,121,0.006,129,0.495,131,0.439,132,0.951,251,1.079,286,3.375,291,2.098,292,2.456,305,2.071,308,3.228,311,2.439,312,3.207,313,1.157,315,4.425,316,2.047,317,3.41,318,4.445,319,0.521,321,2.734,322,5.292,323,3.979,325,3.454,330,3.454,331,0.615,332,0.56,333,3.979,341,5.132,349,3.467,352,3.672,354,3.912,357,1.41,359,0.644,362,4.751,448,2.117,452,3.743,453,3.743,454,2.903,455,6.71,456,5.777,457,4.561,458,5.777,459,5.777,460,4.2,461,4.445,462,5.777,463,6.992,464,5.044,465,5.044,466,5.044,467,4.561,468,5.777,469,5.044,470,4.286,471,4.286,472,4.286,473,4.286,474,1.602,475,4.286,476,5.044,477,4.286,478,3.384]],["title/classes/BasicUserInfo.html",[46,0.181,479,2.206]],["body/classes/BasicUserInfo.html",[3,0.231,4,0.154,9,0.12,11,0.195,27,0.189,30,0.286,37,0.013,39,0.243,45,0.154,46,0.23,55,0.243,97,1.532,107,1.151,119,0.008,120,0.01,121,0.008,129,0.559,131,0.389,132,1.057,251,1.3,278,3.37,308,3.223,319,0.628,327,2.847,331,0.486,332,0.442,359,0.643,427,3.342,443,5.932,448,3.223,474,1.81,479,3.533,480,4.509,481,5.697,482,4.744,483,5.697,484,6.525,485,4.419,486,5.463,487,6.009,488,5.697,489,5.151,490,7.152,491,6.525,492,5.697,493,4.419,494,4.744,495,5.165,496,5.697,497,3.755,498,5.165,499,5.165,500,4.078,501,5.165,502,5.697,503,5.165]],["title/classes/Collection.html",[46,0.181,60,0.599]],["body/classes/Collection.html",[3,0.146,4,0.146,9,0.113,11,0.237,12,2.645,13,1.927,14,0.788,15,0.771,27,0.179,30,0.322,37,0.013,39,0.296,45,0.146,46,0.217,55,0.367,60,1.23,72,0.874,82,0.856,104,1.392,119,0.007,120,0.009,121,0.007,129,0.539,131,0.437,132,0.93,251,1.229,286,3.253,287,2.524,289,3.442,290,3.11,291,2.045,292,3.022,294,4.188,296,4.124,297,3.856,298,3.856,299,1.447,300,2.132,301,3.856,302,3.551,303,2.748,304,3.551,305,1.447,306,3.551,307,3.551,308,3.442,313,1.475,318,4.003,319,0.594,327,2.748,331,0.46,332,0.418,359,0.62,448,3.11,504,4.265,505,4.971,506,4.572,507,6.296,508,6.296,509,3.409,510,6.296,511,5.497,512,4.885,513,4.885,514,4.885,515,4.885,516,4.885,517,4.885,518,4.265,519,4.885]],["title/classes/CollectionBuilder.html",[46,0.181,520,2.445]],["body/classes/CollectionBuilder.html",[3,0.161,4,0.116,9,0.091,11,0.241,14,0.731,15,1.153,27,0.143,28,0.51,30,0.325,36,0.725,37,0.013,39,0.316,45,0.116,46,0.277,55,0.377,60,1.154,72,0.923,82,0.683,119,0.006,120,0.008,121,0.006,129,0.464,131,0.422,132,0.993,251,0.981,282,1.603,286,3.647,287,2.339,289,3.319,290,3.319,291,1.804,292,2.526,294,3.08,296,4.298,299,1.154,305,1.603,308,1.925,311,2.218,312,3.211,313,0.781,314,4.254,315,3.666,316,2.096,317,3.334,318,4.645,319,0.756,321,2.562,322,4.212,323,4.158,324,2.834,325,1.925,330,3.881,331,0.719,332,0.655,333,3.08,334,4.726,337,3.077,338,2.834,339,2.834,340,3.077,341,4.933,342,2.834,343,3.077,344,2.834,345,3.077,346,3.077,347,2.834,348,3.077,349,3.249,350,2.478,351,2.834,352,2.478,353,2.834,354,2.64,355,2.834,356,2.834,357,1.166,359,0.533,360,3.403,506,4.498,520,4.385,521,5.866,522,3.898,523,5.312,524,5.413,525,3.898,526,3.441,527,4.274,528,3.403,529,3.898,530,3.898]],["title/components/CollectionListComponent.html",[0,0.299,59,0.901]],["body/components/CollectionListComponent.html",[0,0.471,1,0.884,2,1.373,3,0.123,4,0.123,5,1.04,6,1.04,7,1.04,8,1.04,9,0.096,11,0.123,14,0.531,15,0.889,16,3.207,18,1.513,19,1.667,20,0.975,21,2.152,22,2.021,23,1.418,25,1.418,27,0.151,28,0.531,29,2.04,30,0.257,34,1.007,36,0.371,37,0.013,38,1.465,39,0.302,40,0.607,41,0.913,42,1.007,45,0.123,46,0.184,49,0.975,50,1.373,51,1.329,52,1.04,53,1.733,54,1.04,55,0.324,56,1.04,57,0.913,58,1.04,59,1.523,60,1.188,61,1.814,62,0.913,63,1.04,64,1.418,65,0.884,66,1.418,67,0.884,68,1.418,69,0.884,70,0.889,71,0.913,72,0.772,73,0.913,74,1.04,75,0.884,76,1.04,77,0.913,78,1.04,79,0.884,80,1.04,81,0.913,82,0.987,83,1.04,84,0.913,85,1.418,86,0.913,87,1.007,88,1.04,89,0.884,90,1.04,91,0.884,92,1.04,93,0.884,94,1.04,95,0.913,96,0.884,97,0.749,98,0.884,99,1.04,100,0.884,101,1.007,102,1.04,103,0.913,104,1.417,105,1.04,106,0.913,107,0.908,108,0.913,109,0.884,110,1.04,111,0.884,112,1.04,113,0.884,114,1.373,115,0.913,116,0.913,117,1.04,118,1.04,119,0.006,120,0.008,121,0.006,124,4.134,129,0.483,131,0.306,132,0.871,237,2.715,242,5.438,282,2.295,284,3.674,288,2.627,292,1.553,300,3.006,303,2.459,412,2.134,485,3.816,531,6.013,532,2.627,533,3.382,534,5.635,535,5.635,536,4.097,537,4.92,538,4.449,539,4.662,540,3.816,541,3.411,542,2.559,543,4.132,544,4.449,545,3.004,546,3.608,547,2.459,548,1.956,549,4.132,550,4.132,551,2.351,552,4.132,553,3.608,554,4.132,555,3.004,556,4.132]],["title/injectables/CollectionService.html",[363,1.333,557,2.59]],["body/injectables/CollectionService.html",[3,0.197,4,0.13,9,0.102,11,0.21,13,1.792,14,0.412,27,0.16,28,0.551,30,0.282,36,0.526,37,0.013,39,0.378,40,0.642,45,0.13,46,0.194,55,0.311,60,1.245,70,0.69,107,1.041,119,0.006,120,0.009,121,0.006,126,1.985,129,0.501,131,0.383,132,0.834,133,1.174,134,1.136,180,2.779,184,1.586,291,2.031,299,2.087,305,1.954,313,0.876,316,1.903,319,0.802,331,0.621,332,0.565,357,1.097,359,0.745,363,1.915,365,2.159,366,5.342,368,3.513,369,4.621,370,4.621,371,1.849,372,2.394,377,3.451,378,4.182,379,4.808,380,4.23,381,3.295,384,4.773,385,5.11,386,5.11,387,1.624,391,4.304,393,4.621,394,5.11,395,4.469,397,3.023,403,3.96,406,2.159,407,2.779,408,1.835,409,2.487,411,1.531,413,2.159,414,1.643,415,1.531,416,3.451,419,2.159,420,1.136,430,2.779,431,2.779,436,3.451,557,3.721,558,3.816,559,4.808,560,5.853,561,5.853,562,5.853,563,4.621,564,5.853,565,4.371,566,5.853,567,5.853,568,5.853,569,4.371,570,3.331,571,2.623,572,3.816,573,2.258,574,3.816,575,4.371,576,4.621,577,4.371,578,4.371,579,4.371,580,4.371]],["title/components/ConfirmationModalComponent.html",[0,0.299,62,0.901]],["body/components/ConfirmationModalComponent.html",[0,0.529,1,0.882,2,1.371,3,0.123,4,0.123,5,1.038,6,1.038,7,1.038,8,1.038,9,0.096,11,0.123,13,1.722,14,0.53,15,0.888,19,1.072,20,0.973,21,2.152,22,2.017,23,1.416,25,1.416,27,0.151,30,0.275,34,1.005,37,0.013,39,0.265,40,0.606,41,0.911,42,1.005,45,0.123,46,0.285,49,0.973,50,1.371,51,1.327,52,1.038,53,1.732,54,1.038,55,0.265,56,1.038,57,0.911,58,1.038,59,0.911,60,0.606,61,1.813,62,1.521,63,1.949,64,1.416,65,0.882,66,1.416,67,0.882,68,1.416,69,0.882,70,0.888,71,0.911,72,0.718,73,0.911,74,1.038,75,0.882,76,1.038,77,0.911,78,1.038,79,0.882,80,1.038,81,0.911,82,0.986,83,1.038,84,0.911,85,1.416,86,0.911,87,2.013,88,1.038,89,0.882,90,1.038,91,0.882,92,1.038,93,0.882,94,1.038,95,0.911,96,0.882,97,0.747,98,0.882,99,1.038,100,0.882,101,1.005,102,1.038,103,0.911,104,0.911,105,1.038,106,0.911,107,1.077,108,0.911,109,0.882,110,1.038,111,0.882,112,1.038,113,0.882,114,1.371,115,0.911,116,0.911,117,1.038,118,1.038,119,0.006,120,0.008,121,0.006,124,3.377,129,0.482,130,6.007,131,0.348,132,0.87,143,1.799,201,1.731,202,1.951,244,5.237,300,2.455,319,0.875,448,2.779,547,1.799,581,6.288,582,3.255,583,4.912,584,4.912,585,3.81,586,5.626,587,5.626,588,5.626,589,5.592,590,4.912,591,4.119,592,4.912,593,4.912,594,5.626,595,5.626,596,5.626,597,4.123,598,5.057,599,4.442,600,3.577,601,5.626,602,4.912,603,4.123,604,4.442,605,2.998,606,3.255,607,4.442,608,3.255,609,3.6]],["title/components/CreateComponent.html",[0,0.299,65,0.872]],["body/components/CreateComponent.html",[0,0.463,1,0.856,2,1.343,3,0.119,4,0.119,5,1.007,6,1.007,7,1.007,8,1.007,9,0.093,11,0.164,13,1.687,14,0.735,15,0.87,18,1.48,19,1.639,20,0.944,21,2.147,22,2.017,23,1.387,25,1.387,27,0.146,28,0.519,29,2.012,30,0.285,34,0.975,36,0.36,37,0.013,38,1.433,39,0.297,40,0.588,41,0.884,42,0.975,45,0.119,46,0.178,49,0.944,50,1.343,51,1.3,52,1.007,53,1.71,54,1.007,55,0.297,56,1.007,57,0.884,58,1.007,59,0.884,60,0.588,61,1.793,62,0.884,63,1.007,64,1.387,65,1.454,66,1.387,67,0.856,68,1.387,69,0.856,70,1.072,71,0.884,72,0.707,73,0.884,74,1.007,75,0.856,76,1.007,77,0.884,78,1.007,79,0.856,80,1.007,81,0.884,82,0.965,83,1.007,84,0.884,85,1.387,86,0.884,87,0.975,88,1.007,89,0.856,90,1.007,91,0.856,92,1.007,93,0.856,94,1.007,95,0.884,96,0.856,97,0.725,98,0.856,99,1.007,100,0.856,101,0.975,102,1.007,103,0.884,104,0.884,105,1.007,106,0.884,107,0.893,108,0.884,109,0.856,110,1.007,111,0.856,112,1.007,113,0.856,114,1.343,115,0.884,116,0.884,117,1.007,118,1.007,119,0.006,120,0.008,121,0.006,129,0.472,131,0.343,132,0.859,133,1.074,134,1.04,260,1.402,291,1.824,299,2.012,313,1.361,319,0.766,327,3.481,331,0.594,332,0.343,359,0.394,372,2.288,391,3.679,395,3.733,420,1.04,474,1.885,511,4.812,570,3.137,610,3.493,611,4.007,612,5.505,613,4.812,614,3.276,615,4.27,616,2.709,617,4.319,618,5.512,619,3.257,620,2.072,621,4.001,622,4.351,623,2.723,624,4.001,625,3.733,626,4.351,627,4.001,628,3.504,629,3.493,630,3.504,631,3.493,632,2.909,633,4.001]],["title/classes/Edit.html",[46,0.181,70,0.643]],["body/classes/Edit.html",[3,0.136,4,0.136,9,0.106,11,0.136,14,0.769,27,0.167,30,0.321,37,0.013,39,0.318,45,0.136,46,0.204,60,1.199,70,1.31,119,0.007,120,0.009,121,0.007,129,0.517,131,0.451,132,1.024,251,1.152,282,2.417,291,2.003,305,1.787,313,1.623,387,1.674,400,3.434,427,2.44,431,3.837,493,5.189,614,3.132,634,3.996,635,6.035,636,4.388,637,5.219,638,4.087,639,4.909,640,5.68,641,5.331,642,4.577,643,4.563,644,4.388,645,4.087,646,3.622,647,4.577,648,4.931,649,6.049,650,3.958,651,4.577,652,6.035,653,4.577,654,4.577,655,4.388,656,6.035,657,5.269,658,6.035,659,6.035,660,4.577,661,4.577,662,4.577,663,6.035,664,4.765,665,5.269,666,4.577,667,5.269,668,4.388]],["title/classes/EditBuilder.html",[46,0.181,669,2.962]],["body/classes/EditBuilder.html",[3,0.106,4,0.106,9,0.083,11,0.23,14,0.735,27,0.13,28,0.479,30,0.315,36,0.693,37,0.013,39,0.304,45,0.106,46,0.264,55,0.358,60,1.146,70,1.309,119,0.005,120,0.008,121,0.005,129,0.435,131,0.446,132,1.019,134,2.135,251,0.897,282,2.311,291,2.041,305,1.754,311,2.028,312,3.233,313,1.294,317,2.818,319,0.72,321,2.405,327,2.218,330,4.041,331,0.716,332,0.651,352,3.231,357,1.445,359,0.749,427,2.611,466,4.437,474,0.988,544,4.012,614,3.191,639,3.695,640,5.161,641,4.012,669,5.994,670,6.939,671,3.442,672,5.082,673,5.082,674,3.563,675,6.458,676,3.497,677,5.082,678,3.563,679,3.563,680,5.082,681,3.563,682,5.082,683,3.563,684,5.082,685,3.563,686,3.563,687,5.082,688,3.563,689,5.082,690,3.563,691,5.638,692,5.082,693,3.563,694,4.437,695,3.563,696,3.563,697,3.111,698,3.563,699,3.563,700,3.563,701,3.563,702,3.563,703,3.563]],["title/components/EditComponent.html",[0,0.299,67,0.872]],["body/components/EditComponent.html",[0,0.407,1,0.679,2,1.138,3,0.095,4,0.095,5,0.798,6,0.798,7,0.798,8,0.798,9,0.074,11,0.139,13,1.43,14,0.717,15,0.737,18,1.254,19,1.441,20,0.748,21,2.111,22,1.978,23,1.175,25,1.175,27,0.116,28,0.44,29,1.811,30,0.296,34,1.351,36,0.285,37,0.013,38,1.214,39,0.37,40,0.466,41,0.701,42,0.773,45,0.095,46,0.141,49,0.748,50,1.138,51,1.102,52,0.798,53,1.539,54,0.798,55,0.261,56,0.798,57,0.701,58,0.798,59,0.701,60,0.958,61,1.641,62,0.701,63,0.798,64,1.175,65,0.679,66,1.175,67,1.309,68,1.175,69,0.679,70,1.228,71,0.701,72,0.853,73,0.701,74,0.798,75,0.679,76,0.798,77,0.701,78,0.798,79,0.679,80,0.798,81,0.701,82,0.818,83,0.798,84,0.701,85,1.175,86,0.701,87,0.773,88,0.798,89,0.679,90,0.798,91,0.679,92,0.798,93,0.679,94,0.798,95,0.701,96,0.679,97,0.575,98,0.679,99,0.798,100,0.679,101,0.773,102,0.798,103,0.701,104,0.701,105,0.798,106,0.701,107,0.785,108,0.701,109,0.679,110,0.798,111,0.679,112,0.798,113,0.679,114,1.138,115,0.701,116,0.701,117,0.798,118,0.798,119,0.005,120,0.007,121,0.005,124,2.803,129,0.4,131,0.393,132,0.773,133,0.852,134,0.825,137,1.961,184,1.151,260,1.111,264,1.074,282,1.811,285,2.307,291,1.983,294,2.658,299,1.811,305,1.811,312,1.236,313,1.526,319,0.674,331,0.299,332,0.272,336,3.163,359,0.546,371,1.175,372,2.011,373,1.282,382,3.157,387,1.892,391,2.529,396,4.142,404,2.038,406,1.528,408,1.332,410,2.21,411,1.942,412,1.638,415,1.636,418,1.501,420,0.825,439,2.529,451,2.306,563,3.687,571,1.904,573,2.413,611,3.396,614,3.101,615,3.755,616,2.148,617,3.888,619,2.864,620,1.756,622,3.687,623,2.307,625,3.163,626,3.687,628,2.969,629,2.769,630,3.524,631,2.769,632,2.306,704,2.769,705,4.618,706,4.84,707,4.078,708,2.845,709,4.84,710,3.155,711,4.9,712,4.671,713,4.671,714,3.48,715,3.163,716,3.687,717,3.172,718,4.078,719,3.163,720,4.671,721,4.671,722,3.172,723,4.078,724,3.172,725,3.396,726,2.219,727,3.396,728,2.803,729,2.803,730,3.172,731,3.172,732,3.172,733,2.21,734,1.961,735,4.671,736,3.172,737,2.769,738,2.769,739,2.307,740,3.524,741,1.805,742,2.307,743,2.016,744,2.504,745,1.805,746,2.803,747,1.888,748,2.969,749,1.82,750,3.172,751,3.172,752,2.769,753,3.172,754,2.529,755,2.769,756,3.172,757,2.769,758,3.172,759,3.172,760,2.769,761,2.769,762,3.172,763,1.805,764,2.504]],["title/components/EditOrCreateComponent.html",[0,0.299,69,0.872]],["body/components/EditOrCreateComponent.html",[0,0.423,1,0.515,2,0.922,3,0.203,4,0.072,5,1.177,6,0.606,7,0.606,8,0.606,9,0.056,11,0.113,13,1.158,14,0.682,15,0.91,17,1.87,18,1.016,19,1.216,20,0.568,21,2.057,22,1.928,23,0.952,25,0.952,27,0.088,28,0.356,29,1.571,30,0.298,34,0.586,36,0.55,37,0.013,38,1.591,39,0.373,40,0.354,41,0.532,42,0.586,45,0.072,46,0.107,49,0.568,50,1.292,51,0.893,52,0.606,53,1.335,54,0.606,55,0.25,56,0.606,57,0.532,58,0.606,59,0.532,60,0.941,61,1.451,62,0.532,63,0.606,64,0.952,65,0.515,66,0.952,67,0.515,68,0.952,69,1.135,70,1.197,71,0.532,72,0.857,73,0.532,74,0.606,75,0.515,76,0.606,77,0.532,78,0.606,79,0.515,80,0.606,81,0.532,82,0.663,83,0.606,84,0.532,85,0.952,86,0.837,87,1.405,88,0.606,89,0.515,90,0.606,91,0.515,92,0.606,93,0.515,94,0.606,95,0.532,96,0.515,97,0.436,98,0.515,99,0.606,100,0.515,101,0.586,102,0.606,103,1.172,104,1.172,105,0.606,106,0.532,107,0.966,108,0.532,109,0.515,110,0.606,111,0.515,112,0.606,113,0.515,114,0.922,115,1.172,116,0.532,117,0.606,118,0.606,119,0.004,120,0.006,121,0.004,129,0.324,131,0.379,132,0.67,133,0.646,134,0.626,137,1.589,143,1.05,184,0.873,187,5.463,191,2.101,196,1.75,201,1.01,202,1.139,204,1.37,205,1.243,206,1.37,215,1.75,216,2.101,258,1.652,260,0.843,264,1.952,279,1.189,282,2.225,291,1.016,292,1.423,294,2.154,299,1.121,305,1.121,309,2.563,312,2.066,313,0.937,316,1.177,317,2.041,319,0.568,323,1.37,327,2.978,331,0.356,332,0.324,357,0.709,359,0.631,364,3.981,371,1.717,373,1.891,382,2.895,387,1.471,388,3.018,391,3.975,395,3.168,397,2.739,408,1.01,412,1.243,414,1.423,415,0.843,418,1.139,420,0.626,474,1.84,486,2.752,520,2.271,538,2.988,542,1.719,547,2.516,548,1.139,551,1.37,557,4.217,570,3.484,571,1.444,600,2.406,612,4.084,613,3.304,614,2.99,615,3.168,616,1.63,617,3.371,619,2.416,620,2.721,628,1.53,630,3.665,632,1.75,650,1.955,676,2.049,705,4.146,709,4.084,715,2.563,723,2.101,725,3.856,726,1.373,741,1.37,742,1.87,745,1.37,757,2.101,760,2.101,761,2.101,763,1.37,764,1.9,765,6.56,766,2.101,767,2.752,768,3.122,769,4.677,770,4.677,771,4.677,772,4.677,773,5.303,774,3.785,775,5.792,776,3.592,777,3.183,778,3.183,779,2.785,780,3.785,781,6.122,782,2.563,783,2.563,784,3.785,785,2.406,786,3.785,787,2.407,788,2.407,789,2.407,790,2.407,791,2.407,792,3.183,793,2.988,794,3.785,795,2.752,796,2.407,797,3.785,798,3.844,799,2.407,800,2.407,801,2.988,802,2.407,803,3.785,804,2.407,805,3.785,806,3.785,807,2.407,808,3.304,809,3.785,810,3.785,811,2.407,812,3.304,813,2.563,814,2.407,815,2.974,816,1.53,817,1.303,818,1.63,819,1.9,820,1.444,821,1.75,822,1.9,823,2.407,824,2.407,825,1.75,826,2.154,827,1.75,828,1.9,829,1.75,830,2.101,831,5.034,832,2.407,833,2.407,834,6.122,835,2.407,836,2.407,837,1.75,838,1.53,839,1.75,840,1.9,841,2.101,842,2.407,843,1.63,844,2.407,845,2.407,846,2.407,847,1.444,848,1.444,849,1.444,850,2.407,851,1.444,852,1.444,853,2.407,854,4.677,855,2.407,856,4.677,857,2.407,858,2.407,859,3.785,860,2.407,861,2.407,862,2.407,863,2.407,864,2.407,865,2.407,866,2.407,867,2.407,868,2.271,869,2.752]],["title/injectables/EditService.html",[363,1.333,870,2.759]],["body/injectables/EditService.html",[3,0.124,4,0.124,9,0.096,11,0.206,12,3.058,13,2.111,27,0.152,28,0.532,30,0.289,36,0.508,37,0.013,39,0.383,40,0.609,45,0.124,46,0.184,55,0.302,70,1.326,107,0.91,119,0.006,120,0.008,121,0.006,126,1.883,129,0.484,131,0.405,132,0.912,137,2.895,180,2.635,184,1.504,264,1.403,282,1.673,291,1.938,299,2.137,305,1.902,313,1.131,319,0.781,331,0.605,332,0.55,357,1.204,359,0.751,363,1.848,365,2.048,371,1.979,372,2.701,373,3.01,378,4.199,379,4.587,380,4.139,381,3.256,382,3.384,384,3.825,397,2.917,403,3.855,404,3.249,406,2.493,407,2.635,408,2.371,409,2.359,410,1.962,411,1.979,413,2.048,414,1.558,415,1.452,417,3.619,418,1.962,419,2.048,420,1.078,421,3.014,423,2.488,424,2.488,425,3.273,430,2.635,436,3.273,439,3.058,474,1.15,585,4.887,614,1.74,643,3.59,646,3.855,726,2.33,747,2.283,749,2.201,870,3.825,871,3.619,872,3.825,873,5.647,874,5.647,875,4.459,876,3.619,877,5.647,878,4.931,879,5.647,880,4.145,881,5.647,882,4.145,883,4.106,884,4.106,885,4.145,886,3.214,887,3.825,888,3.273,889,4.145,890,3.014,891,3.619,892,3.273,893,3.619,894,3.619,895,3.619,896,3.619,897,4.145,898,3.619,899,4.145,900,4.145,901,4.145,902,4.145,903,4.145]],["title/components/EntryListComponent.html",[0,0.299,71,0.901]],["body/components/EntryListComponent.html",[0,0.477,1,0.535,2,0.95,3,0.075,4,0.075,5,0.629,6,0.629,7,0.629,8,0.629,9,0.058,11,0.175,14,0.612,15,0.616,17,2.675,18,1.047,19,1.246,20,0.59,21,2.065,22,1.935,23,0.981,25,0.981,27,0.091,28,0.367,29,1.604,30,0.303,34,1.638,36,0.559,37,0.013,38,1.87,39,0.276,40,0.367,41,0.553,42,0.609,45,0.075,46,0.111,49,0.59,50,0.95,51,0.92,52,0.629,53,1.363,54,0.629,55,0.306,56,0.629,57,0.553,58,0.629,59,0.553,60,0.704,61,1.478,62,0.553,63,0.629,64,0.981,65,0.535,66,0.981,67,0.535,68,0.981,69,0.535,70,0.616,71,1.197,72,0.885,73,0.553,74,0.629,75,0.535,76,0.629,77,0.553,78,0.629,79,0.535,80,0.629,81,0.553,82,0.683,83,0.629,84,0.553,85,0.981,86,0.553,87,0.609,88,0.629,89,0.535,90,0.629,91,0.535,92,0.629,93,0.535,94,0.629,95,0.553,96,0.535,97,0.453,98,0.535,99,0.629,100,0.535,101,1.583,102,0.629,103,0.553,104,0.553,105,0.629,106,0.553,107,1.049,108,0.553,109,0.535,110,0.629,111,0.535,112,0.629,113,0.535,114,1.516,115,0.553,116,0.553,117,0.629,118,0.629,119,0.004,120,0.006,121,0.004,125,2.479,129,0.334,131,0.397,132,0.873,133,1.047,134,1.014,137,2.273,143,1.702,213,6.033,237,2.626,260,0.876,264,1.833,270,1.974,282,1.155,284,1.926,285,1.926,287,2.114,290,2.368,291,1.047,299,1.42,300,2.363,303,2.835,305,1.842,313,0.781,319,0.304,327,2.835,331,0.51,332,0.464,357,0.899,359,0.578,371,1.635,373,2.515,382,2.933,387,1.082,388,3.082,404,1.702,408,1.05,418,1.183,420,0.65,423,1.501,424,1.501,437,1.693,457,3.079,474,1.502,506,2.341,509,2.112,526,2.479,532,1.59,539,3.486,540,2.641,541,3.181,542,1.771,545,1.818,546,2.183,547,2.363,551,2.728,555,2.835,608,3.079,614,3.11,619,2.015,620,1.466,630,1.59,637,2.835,638,2.641,671,2.641,718,2.183,745,1.423,747,1.011,749,0.974,768,2.112,779,2.728,792,3.733,904,6.672,905,4.523,906,3.079,907,3.9,908,2.219,909,3.405,910,6.165,911,3.785,912,6.497,913,4.794,914,3.785,915,5.415,916,3.9,917,3.9,918,3.405,919,5.415,920,6.497,921,4.794,922,1.292,923,3.9,924,3.405,925,3.079,926,3.9,927,3.079,928,2.5,929,2.5,930,3.079,931,3.9,932,2.835,933,3.9,934,3.405,935,2.183,936,3.079,937,3.079,938,3.405,939,3.9,940,2.5,941,3.9,942,4.728,943,3.405,944,3.9,945,3.9,946,3.9,947,3.9,948,2.5,949,2.479,950,2.835,951,3.405,952,4.275,953,2.5,954,3.079,955,2.5,956,3.9,957,2.5,958,2.835,959,1.846,960,3.9,961,3.9,962,3.9,963,2.112,964,2.5,965,5.415,966,5.415,967,3.9,968,2.5,969,3.9,970,3.405,971,2.5,972,3.9,973,1.183,974,1.974,975,5.415,976,4.794,977,1.974,978,3.9,979,1.693,980,2.5,981,2.5,982,2.5,983,2.5,984,2.5,985,2.5,986,2.5,987,2.5,988,2.5,989,2.5,990,2.5,991,2.5,992,3.9,993,3.9,994,5.415,995,3.405,996,3.9,997,3.079,998,3.9,999,4.186,1000,4.794,1001,2.5,1002,2.183]],["title/components/FooterComponent.html",[0,0.299,73,0.901]],["body/components/FooterComponent.html",[0,0.492,1,0.964,2,1.455,3,0.134,4,0.134,5,1.134,6,1.134,7,1.134,8,1.134,9,0.105,11,0.134,14,0.562,15,0.943,19,1.171,20,1.063,21,2.164,22,2.028,23,1.503,25,1.503,30,0.18,32,3.797,34,1.809,35,2.245,37,0.013,39,0.212,40,0.662,41,0.996,42,1.098,45,0.134,46,0.201,49,1.063,50,1.455,51,1.409,52,1.134,53,1.796,54,1.134,55,0.336,56,1.134,57,0.996,58,1.134,59,0.996,60,0.662,61,1.868,62,0.996,63,1.134,64,1.503,65,0.964,66,1.503,67,0.964,68,1.503,69,0.964,70,0.943,71,0.996,72,0.751,73,1.577,74,1.134,75,0.964,76,1.134,77,0.996,78,1.134,79,0.964,80,1.134,81,0.996,82,1.046,83,1.134,84,0.996,85,1.503,86,0.996,87,1.098,88,1.134,89,0.964,90,1.134,91,0.964,92,1.134,93,0.964,94,1.134,95,0.996,96,0.964,97,0.817,98,0.964,99,1.134,100,0.964,101,1.098,102,1.134,103,0.996,104,0.996,105,1.134,106,0.996,107,0.949,108,0.996,109,0.964,110,1.134,111,0.964,112,1.134,113,0.964,114,1.455,115,0.996,116,0.996,117,1.134,118,1.134,119,0.007,120,0.009,121,0.007,319,0.814,350,2.865,533,3.585,593,5.215,963,3.234,1003,3.934,1004,7.134,1005,4.716,1006,5.973,1007,6.7,1008,5.973,1009,4.506,1010,5.973,1011,5.973,1012,5.215,1013,5.973,1014,5.973,1015,5.215,1016,5.973,1017,5.215,1018,5.973,1019,5.973,1020,5.973,1021,5.973,1022,5.215,1023,3.934,1024,3.934,1025,3.934,1026,3.934,1027,3.934]],["title/injectables/GetByCategoryService.html",[363,1.333,711,2.759]],["body/injectables/GetByCategoryService.html",[3,0.146,4,0.146,9,0.114,11,0.208,14,0.735,15,1.1,27,0.179,28,0.593,30,0.252,36,0.44,37,0.013,39,0.386,40,0.719,45,0.146,46,0.218,55,0.297,60,1.146,72,0.874,119,0.007,120,0.009,121,0.007,126,2.221,131,0.342,132,0.986,184,1.774,282,2.311,291,2.159,305,2.065,313,1.397,316,1.755,319,0.847,331,0.593,332,0.54,357,1.307,359,0.751,363,2.062,364,4.826,365,2.416,371,1.586,378,2.648,380,2.935,403,4.184,407,3.109,408,2.053,409,2.783,410,2.315,411,2.443,419,2.416,420,1.271,557,5.112,563,6.16,573,2.527,614,3.411,711,4.268,739,2.416,776,4.297,816,3.109,822,3.861,825,3.556,1028,6.087,1029,4.27,1030,6.302,1031,4.27,1032,4.891,1033,6.302,1034,4.891,1035,4.891,1036,4.891,1037,4.891]],["title/classes/HashHelper.html",[46,0.181,497,2.962]],["body/classes/HashHelper.html",[3,0.177,4,0.177,9,0.138,11,0.212,27,0.217,28,0.669,30,0.238,35,2.86,36,0.533,37,0.013,39,0.279,45,0.177,46,0.264,55,0.279,119,0.009,120,0.011,121,0.009,131,0.322,132,1.019,251,1.494,303,3.572,316,1.494,321,3.364,331,0.559,332,0.508,357,1.112,359,0.585,487,5.733,494,5.733,497,5.167,932,5.167,1038,6.205,1039,5.182,1040,7.107,1041,7.107,1042,5.935,1043,7.107,1044,5.182,1045,5.935]],["title/components/HomeComponent.html",[0,0.299,75,0.872]],["body/components/HomeComponent.html",[0,0.478,1,0.91,2,1.4,3,0.127,4,0.127,5,1.07,6,1.07,7,1.07,8,1.07,9,0.099,11,0.127,13,1.759,14,0.774,15,1.184,18,1.543,19,1.692,20,1.003,21,2.156,22,2.021,23,1.446,25,1.446,27,0.156,28,0.541,29,2.064,30,0.17,32,3.653,33,3.449,34,1.774,35,2.16,36,0.382,37,0.013,38,1.494,39,0.27,40,0.625,41,1.27,42,1.4,43,2.88,44,3.358,45,0.127,46,0.189,49,1.003,50,1.4,51,1.355,52,1.07,53,1.754,54,1.07,55,0.27,56,1.07,57,0.94,58,1.07,59,0.94,60,0.625,61,1.832,62,0.94,63,1.07,64,1.446,65,0.91,66,1.446,67,0.91,68,1.446,69,0.91,70,1.1,71,0.94,72,0.729,73,0.94,74,1.07,75,1.491,76,1.07,77,0.94,78,1.07,79,0.91,80,1.07,81,0.94,82,1.007,83,1.07,84,0.94,85,1.446,86,0.94,87,1.036,88,1.07,89,0.91,90,1.07,91,0.91,92,1.07,93,0.91,94,1.07,95,0.94,96,0.91,97,0.771,98,0.91,99,1.07,100,0.91,101,1.036,102,1.07,103,0.94,104,0.94,105,1.07,106,0.94,107,1.031,108,0.94,109,0.91,110,1.07,111,0.91,112,1.07,113,0.91,114,1.4,115,0.94,116,0.94,117,1.07,118,1.07,119,0.006,120,0.009,121,0.006,237,2.013,267,4.72,284,2.838,327,2.508,406,1.88,431,3.653,464,5.017,492,5.017,506,4.183,643,3.653,664,4.537,792,3.449,908,3.27,1046,3.713,1047,5.746,1048,6.508,1049,5.746,1050,4.253,1051,5.746,1052,4.537,1053,5.017,1054,5.746,1055,5.746,1056,5.746,1057,5.746,1058,5.746,1059,5.017,1060,4.72,1061,4.537,1062,5.746]],["title/components/LoadingComponent.html",[0,0.299,77,0.901]],["body/components/LoadingComponent.html",[0,0.453,1,0.821,2,1.305,3,0.114,4,0.114,5,0.966,6,0.966,7,0.966,8,0.966,9,0.089,11,0.114,14,0.504,15,0.845,18,1.438,19,1.603,20,0.905,21,2.141,22,2.016,23,1.348,25,1.348,27,0.14,28,0.504,29,1.977,30,0.291,32,4.243,34,1.503,36,0.345,37,0.013,38,1.392,39,0.252,40,0.564,41,0.848,42,0.935,45,0.114,46,0.171,49,0.905,50,1.305,51,1.263,52,0.966,53,1.68,54,0.966,55,0.252,56,0.966,57,0.848,58,0.966,59,0.848,60,0.564,61,1.767,62,0.848,63,0.966,64,1.348,65,0.821,66,1.348,67,0.821,68,1.348,69,0.821,70,0.845,71,0.848,72,0.691,73,0.848,74,0.966,75,0.821,76,0.966,77,1.475,78,0.966,79,0.821,80,0.966,81,0.848,82,0.938,83,0.966,84,0.848,85,1.348,86,0.848,87,0.935,88,0.966,89,0.821,90,0.966,91,0.821,92,0.966,93,0.821,94,0.966,95,0.848,96,0.821,97,0.696,98,0.821,99,0.966,100,0.821,101,0.935,102,0.966,103,0.848,104,0.848,105,0.966,106,0.848,107,0.874,108,0.848,109,0.821,110,0.966,111,0.821,112,0.966,113,0.821,114,1.305,115,0.848,116,0.848,117,0.966,118,0.966,119,0.006,120,0.008,121,0.006,129,0.459,131,0.335,132,0.485,133,1.792,134,1.392,135,4.853,319,0.75,372,2.638,387,1.851,406,1.753,533,3.214,541,3.159,542,2.432,547,3.064,591,3.937,623,2.645,676,3.614,708,3.375,710,4.715,726,2.422,728,3.214,729,4.364,733,2.535,734,2.248,746,2.304,748,2.44,749,2.087,792,3.214,868,3.214,1005,4.228,1053,4.676,1063,3.351,1064,4.676,1065,5.355,1066,5.355,1067,6.168,1068,5.355,1069,7.02,1070,7.02,1071,5.355,1072,5.355,1073,3.838,1074,4.676,1075,3.838,1076,5.355,1077,3.838,1078,4.228,1079,5.355,1080,4.676,1081,4.676,1082,4.228,1083,3.838,1084,2.599,1085,3.351]],["title/components/LoginComponent.html",[0,0.299,79,0.872]],["body/components/LoginComponent.html",[0,0.351,1,0.533,2,0.948,3,0.116,4,0.074,5,0.627,6,0.627,7,0.627,8,0.627,9,0.058,11,0.143,13,1.464,14,0.366,15,0.614,17,2.67,18,1.044,19,1.244,20,0.588,21,2.064,22,1.935,23,0.979,25,0.979,27,0.091,28,0.366,29,1.601,30,0.276,34,1.779,36,0.527,37,0.013,38,1.793,39,0.348,40,0.366,41,0.551,42,0.607,45,0.074,46,0.111,49,0.588,50,0.948,51,0.918,52,0.627,53,1.36,54,0.627,55,0.254,56,0.627,57,0.551,58,0.627,59,0.551,60,0.366,61,1.475,62,0.551,63,0.627,64,0.979,65,0.533,66,0.979,67,0.533,68,0.979,69,0.533,70,0.614,71,0.551,72,0.536,73,0.551,74,0.627,75,0.533,76,0.627,77,0.551,78,0.627,79,1.157,80,0.627,81,0.551,82,0.681,83,0.627,84,0.551,85,0.979,86,1.195,87,1.942,88,0.627,89,0.533,90,0.627,91,0.533,92,0.627,93,0.533,94,0.627,95,0.86,96,1.603,97,1.456,98,0.533,99,0.627,100,0.533,101,0.607,102,0.627,103,0.551,104,0.551,105,0.627,106,0.551,107,1.156,108,0.551,109,0.533,110,0.627,111,0.533,112,0.627,113,0.533,114,0.948,115,0.551,116,0.551,117,0.627,118,0.627,119,0.01,120,0.006,121,0.004,129,0.333,131,0.318,132,0.849,133,1.451,137,1.633,143,1.088,184,0.904,201,1.046,202,1.179,204,1.418,205,1.287,206,1.418,245,1.968,246,2.176,247,1.812,258,1.697,260,0.873,264,2.197,267,1.688,278,4.118,279,1.921,280,4.517,316,1.736,319,0.581,327,1.088,330,1.921,331,0.366,332,0.333,349,3.728,357,0.729,359,0.612,371,1.36,373,2.512,379,2.473,381,2.818,382,2.93,387,1.499,388,3.076,397,3.713,404,1.697,406,1.566,408,1.046,413,1.231,414,1.798,415,2.518,418,1.179,420,0.648,423,1.496,424,1.496,427,2.789,431,1.584,437,1.688,467,3.071,474,0.691,479,1.349,500,1.968,502,3.396,533,2.335,541,2.264,548,1.179,591,1.349,655,1.812,671,3.661,708,2.088,714,2.214,715,1.688,727,1.812,728,1.496,742,1.921,745,1.418,763,1.418,777,3.244,778,3.244,779,2.724,782,2.634,783,1.688,785,1.584,798,1.496,813,1.688,817,1.349,840,3.071,841,2.176,847,2.335,848,2.335,849,1.496,851,1.496,852,1.496,868,2.335,872,2.634,922,1.287,932,2.828,949,3.041,954,4.268,958,1.812,959,3.071,1082,3.071,1086,2.176,1087,4.784,1088,3.89,1089,3.89,1090,4.719,1091,4.719,1092,3.661,1093,3.89,1094,4.268,1095,3.352,1096,4.268,1097,4.719,1098,3.396,1099,3.89,1100,4.546,1101,3.89,1102,4.262,1103,2.492,1104,4.784,1105,2.492,1106,2.634,1107,5.405,1108,3.071,1109,3.89,1110,2.492,1111,3.071,1112,3.89,1113,3.89,1114,3.89,1115,3.89,1116,3.89,1117,2.828,1118,3.396,1119,2.492,1120,3.396,1121,2.492,1122,4.784,1123,3.396,1124,3.89,1125,2.492,1126,4.268,1127,2.492,1128,1.584,1129,2.492,1130,2.176,1131,2.634,1132,2.176,1133,2.176,1134,1.688,1135,2.634,1136,1.968,1137,3.89,1138,3.89,1139,2.492,1140,2.492,1141,2.492,1142,2.492,1143,2.492,1144,4.784,1145,1.968,1146,2.492,1147,2.492,1148,2.176,1149,2.492,1150,2.492,1151,2.492,1152,3.071,1153,2.176,1154,2.492,1155,2.492,1156,1.812,1157,3.396,1158,3.396,1159,3.396,1160,2.492,1161,2.176,1162,1.496,1163,2.492,1164,2.492,1165,2.492,1166,2.492,1167,2.492,1168,2.492,1169,2.492,1170,3.89,1171,2.492,1172,2.492,1173,2.492,1174,2.492,1175,2.492,1176,2.492,1177,2.492,1178,2.492,1179,2.492,1180,2.492,1181,2.492]],["title/guards/LoginGuardService.html",[261,2.962,1182,3.217]],["body/guards/LoginGuardService.html",[3,0.144,4,0.144,9,0.112,11,0.207,17,3.092,18,1.3,27,0.177,28,0.589,30,0.251,34,1.787,36,0.435,37,0.013,39,0.345,40,0.711,42,1.525,45,0.144,46,0.215,55,0.295,107,1.121,119,0.007,120,0.009,121,0.007,126,2.198,131,0.34,260,1.696,261,4.551,264,1.639,274,6.404,278,3.234,285,3.092,299,1.854,316,1.746,319,0.843,331,0.589,332,0.536,357,1.458,359,0.723,363,2.049,371,1.218,381,3.324,387,2.035,413,2.391,419,2.391,420,1.258,474,1.736,570,3.562,619,3.924,726,2.271,747,2.805,779,2.628,950,4.551,1092,5.434,1095,3.789,1097,5.465,1098,5.465,1130,4.227,1134,3.278,1135,3.278,1183,4.841,1184,6.057,1185,4.227,1186,6.26,1187,4.841,1188,4.841,1189,6.26,1190,3.98,1191,6.26,1192,6.26,1193,6.404,1194,7.78,1195,7.335,1196,4.841,1197,6.26,1198,6.26,1199,8.109,1200,6.26,1201,4.841,1202,4.841,1203,4.841,1204,4.841,1205,4.841,1206,4.841,1207,4.841]],["title/injectables/LoginService.html",[363,1.333,1208,2.59]],["body/injectables/LoginService.html",[3,0.167,4,0.122,9,0.095,11,0.221,13,1.711,17,2.761,27,0.149,28,0.526,30,0.297,36,0.616,37,0.013,39,0.364,40,0.6,45,0.122,46,0.182,55,0.338,96,1.363,97,1.301,107,1.194,119,0.006,120,0.008,121,0.006,126,1.854,129,0.479,131,0.403,132,0.907,154,3.785,184,1.481,278,4.135,279,3.546,280,5.219,299,2.247,313,0.818,316,2.031,319,0.775,331,0.676,332,0.615,357,1.285,359,0.73,363,1.829,365,2.017,371,1.725,372,2.312,378,3.711,379,4.824,380,4.113,381,2.346,384,4.641,388,3.9,397,3.829,403,3.825,404,2.439,406,2.085,407,2.596,408,1.714,409,2.323,411,1.431,414,1.535,415,1.431,419,2.017,420,1.061,421,2.969,427,2.997,430,2.596,461,3.553,479,4.109,548,1.932,559,4.357,576,3.223,623,2.761,872,3.785,876,3.565,892,5.031,1061,4.413,1090,4.88,1102,4.064,1190,3.553,1208,3.553,1209,3.565,1210,4.413,1211,5.589,1212,4.064,1213,4.413,1214,5.589,1215,5.589,1216,5.589,1217,4.083,1218,3.785,1219,6.853,1220,6.853,1221,5.589,1222,4.083,1223,5.589,1224,5.589,1225,4.083,1226,5.589,1227,4.083,1228,4.064,1229,2.765,1230,2.596,1231,4.083,1232,4.083,1233,3.565,1234,5.589,1235,5.589,1236,4.083]],["title/components/MarkdownDisplayComponent.html",[0,0.299,81,0.901]],["body/components/MarkdownDisplayComponent.html",[0,0.487,1,0.944,2,1.435,3,0.132,4,0.132,5,1.11,6,1.11,7,1.11,8,1.11,9,0.102,11,0.132,14,0.555,15,0.93,18,1.581,19,1.723,20,1.041,21,2.161,22,2.025,23,1.482,25,1.482,27,0.161,28,0.555,29,2.095,30,0.236,33,3.535,34,1.075,36,0.396,37,0.013,38,1.531,39,0.208,40,0.648,41,0.975,42,1.075,45,0.132,46,0.196,49,1.041,50,1.724,51,1.389,52,1.11,53,1.78,54,1.11,55,0.277,56,1.11,57,0.975,58,1.11,59,0.975,60,0.648,61,1.855,62,0.975,63,1.11,64,1.482,65,0.944,66,1.482,67,0.944,68,1.482,69,0.944,70,0.93,71,0.975,72,0.743,73,0.975,74,1.11,75,0.944,76,1.11,77,0.975,78,1.11,79,0.944,80,1.11,81,1.564,82,1.44,83,1.11,84,0.975,85,1.482,86,0.975,87,1.075,88,1.11,89,0.944,90,1.11,91,0.944,92,1.11,93,0.944,94,1.11,95,0.975,96,0.944,97,0.8,98,0.944,99,1.11,100,0.944,101,1.075,102,1.11,103,0.975,104,0.975,105,1.11,106,0.975,107,0.939,108,0.975,109,0.944,110,1.11,111,0.944,112,1.11,113,0.944,114,1.435,115,0.975,116,0.975,117,1.11,118,1.11,119,0.007,120,0.009,121,0.007,131,0.24,132,0.959,193,5.234,303,3.087,460,4.282,509,3.189,541,3.348,542,2.675,547,3.087,792,3.535,1078,4.65,1237,5.234,1238,3.852,1239,5.889,1240,5.142,1241,6.63,1242,5.889,1243,6.63,1244,4.412,1245,4.412,1246,5.889,1247,4.65]],["title/components/MarkdownEditorComponent.html",[0,0.299,84,0.901]],["body/components/MarkdownEditorComponent.html",[0,0.462,1,0.852,2,1.339,3,0.119,4,0.119,5,1.003,6,1.003,7,1.003,8,1.003,9,0.093,11,0.188,14,0.517,15,0.867,17,2.715,19,1.036,20,0.94,21,2.147,22,2.012,23,1.383,25,1.383,27,0.146,28,0.517,30,0.285,34,0.971,36,0.358,37,0.013,38,1.429,39,0.259,40,0.585,41,0.881,42,0.971,45,0.119,46,0.177,49,0.94,50,1.339,51,1.296,52,1.003,53,1.707,54,1.003,55,0.259,56,1.003,57,0.881,58,1.003,59,0.881,60,0.585,61,1.791,62,0.881,63,1.003,64,1.383,65,0.852,66,1.383,67,0.852,68,1.383,69,0.852,70,0.867,71,0.881,72,0.705,73,0.881,74,1.003,75,0.852,76,1.003,77,0.881,78,1.003,79,0.852,80,1.003,81,0.881,82,1.447,83,1.003,84,1.499,85,1.383,86,0.881,87,0.971,88,1.003,89,0.852,90,1.003,91,0.852,92,1.003,93,0.852,94,1.003,95,0.881,96,0.852,97,0.722,98,0.852,99,1.003,100,0.852,101,0.971,102,1.003,103,0.881,104,0.881,105,1.003,106,0.881,107,1.008,108,0.881,109,0.852,110,1.003,111,0.852,112,1.003,113,0.852,114,1.339,115,0.881,116,0.881,117,1.003,118,1.003,119,0.006,120,0.008,121,0.006,129,0.471,131,0.342,132,0.857,174,2.533,190,5.808,303,3.444,316,1.583,319,0.765,332,0.471,333,3.127,387,1.524,457,4.339,542,2.496,547,2.96,620,2.066,655,3.996,671,3.722,725,4.931,726,1.994,813,3.722,1126,4.339,1237,5.808,1240,4.798,1248,3.145,1249,6.782,1250,5.493,1251,4.798,1252,6.291,1253,6.291,1254,6.782,1255,6.291,1256,5.496,1257,7.356,1258,4.574,1259,3.984,1260,5.496,1261,3.984,1262,5.496,1263,3.984,1264,5.496,1265,2.897,1266,3.145,1267,5.496,1268,3.984,1269,5.496,1270,5.496,1271,3.984,1272,3.145,1273,3.145]],["title/pipes/MarkedPipe.html",[150,2.759,1274,2.759]],["body/pipes/MarkedPipe.html",[3,0.168,4,0.168,9,0.131,11,0.205,18,1.513,20,1.329,28,0.531,30,0.226,36,0.506,37,0.013,39,0.324,40,0.828,45,0.168,46,0.251,50,1.888,55,0.35,82,1.416,119,0.008,120,0.01,121,0.008,131,0.306,134,2.014,150,4.664,303,3.528,331,0.531,332,0.483,336,5.247,357,1.291,359,0.679,478,5.873,551,3.206,1274,4.664,1275,4.448,1276,4.919,1277,6.887,1278,7.748,1279,6.765,1280,6.494,1281,6.887,1282,7.059,1283,5.634,1284,6.887,1285,6.887,1286,6.013,1287,5.634,1288,5.634]],["title/classes/Mocker.html",[46,0.181,887,2.759]],["body/classes/Mocker.html",[3,0.123,4,0.123,9,0.096,11,0.205,14,0.531,15,0.889,27,0.151,28,0.531,30,0.305,35,3.157,36,0.619,37,0.013,39,0.35,45,0.123,46,0.184,51,1.329,55,0.324,60,0.828,70,1.24,72,0.772,82,0.724,119,0.006,120,0.008,121,0.006,129,0.483,131,0.374,133,1.722,134,1.667,251,1.04,254,3.816,264,1.908,282,2.327,287,1.963,290,2.041,291,1.513,312,2.196,313,1.552,314,2.237,317,1.803,327,3.468,331,0.389,332,0.354,357,1.291,359,0.407,371,2.035,372,2.851,400,3.207,410,3.26,411,1.974,412,2.134,474,1.779,526,4.995,643,3.582,644,4.097,645,3.816,646,3.382,826,2.351,827,3.004,886,4.102,887,3.816,888,5.873,894,3.608,895,3.608,896,3.608,963,2.237,973,1.956,1145,3.262,1289,3.608,1290,6.887,1291,5.635,1292,7.208,1293,7.208,1294,7.208,1295,6.887,1296,6.887,1297,6.887,1298,5.635,1299,4.132,1300,7.438,1301,4.132,1302,4.132,1303,3.816,1304,4.132,1305,5.008,1306,4.132,1307,4.132,1308,5.635,1309,4.132,1310,4.097,1311,5.635,1312,5.635,1313,3.608,1314,4.132,1315,4.132,1316,4.132,1317,4.132,1318,4.132,1319,4.132,1320,4.132,1321,3.608,1322,4.132,1323,4.132,1324,4.92,1325,4.132,1326,4.132,1327,4.132,1328,4.132,1329,4.132,1330,4.132,1331,3.262]],["title/components/ModalMessageComponent.html",[0,0.299,86,0.901]],["body/components/ModalMessageComponent.html",[0,0.473,1,0.658,2,1.113,3,0.092,4,0.092,5,0.774,6,0.774,7,0.774,8,0.774,9,0.071,11,0.162,14,0.43,15,0.721,18,1.226,19,1.416,20,0.726,21,2.105,22,1.991,23,1.149,25,1.149,27,0.113,28,0.43,29,1.785,30,0.303,34,0.75,36,0.542,37,0.013,38,1.864,39,0.317,40,0.452,41,0.68,42,0.75,45,0.092,46,0.137,49,0.726,50,1.113,51,1.077,52,0.774,53,1.516,54,0.774,55,0.284,56,0.774,57,0.68,58,0.774,59,0.68,60,0.452,61,1.62,62,0.68,63,0.774,64,1.149,65,0.658,66,1.149,67,0.658,68,1.149,69,0.658,70,0.721,71,0.68,72,0.61,73,0.68,74,0.774,75,0.658,76,0.774,77,0.68,78,0.774,79,0.658,80,0.774,81,0.68,82,0.8,83,0.774,84,0.68,85,1.149,86,1.332,87,2.001,88,0.774,89,0.658,90,0.774,91,0.658,92,0.774,93,0.658,94,0.774,95,0.68,96,0.658,97,0.558,98,0.658,99,0.774,100,0.658,101,0.75,102,0.774,103,0.68,104,0.68,105,0.774,106,0.68,107,0.989,108,0.68,109,0.658,110,0.774,111,0.658,112,0.774,113,0.658,114,1.113,115,0.68,116,0.68,117,0.774,118,0.774,119,0.008,120,0.007,121,0.005,124,2.741,125,2.903,129,0.391,130,5.512,131,0.379,132,0.762,133,1.226,134,1.187,143,1.342,184,1.116,201,1.291,202,1.456,205,3.955,313,0.915,316,1.904,331,0.43,332,0.391,359,0.45,387,1.671,406,2.398,414,2.265,415,2.446,439,2.948,460,3.32,509,3.263,523,3.32,533,2.741,541,2.161,542,2.074,547,2.943,551,2.599,591,4.095,598,4.299,600,2.903,606,2.429,607,3.605,608,2.429,609,2.686,625,3.092,708,2.63,710,3.099,726,2.186,733,2.852,734,1.917,742,2.977,746,3.268,747,1.244,749,2.122,754,2.472,763,2.599,785,2.903,817,1.666,839,2.237,868,1.846,954,3.605,999,2.686,1080,2.686,1082,2.429,1084,2.083,1085,2.686,1152,5.512,1153,3.987,1332,6.685,1333,2.686,1334,5.445,1335,4.566,1336,6.744,1337,6.744,1338,4.566,1339,4.566,1340,6.026,1341,3.076,1342,3.076,1343,3.076,1344,3.076,1345,3.076,1346,4.566,1347,3.076,1348,5.888,1349,4.566,1350,3.605,1351,4.566,1352,4.566,1353,3.076,1354,3.076,1355,4.566,1356,4.566,1357,3.32,1358,3.605,1359,3.076,1360,3.076,1361,6.026,1362,4.566,1363,6.026,1364,3.076,1365,4.566,1366,4.566,1367,2.237,1368,2.083,1369,2.083,1370,2.237,1371,5.62,1372,2.429,1373,3.987,1374,3.076,1375,3.076,1376,3.076,1377,4.566,1378,3.076,1379,3.076,1380,4.566,1381,4.754,1382,3.076,1383,3.076]],["title/classes/Museum.html",[14,0.384,46,0.181]],["body/classes/Museum.html",[3,0.133,4,0.133,9,0.103,11,0.245,12,2.411,13,1.814,14,0.793,15,0.703,27,0.163,28,0.558,30,0.315,35,2.779,36,0.4,37,0.013,39,0.21,45,0.133,46,0.198,55,0.376,72,0.894,82,1.167,119,0.007,120,0.009,121,0.007,129,0.508,131,0.428,132,1.054,251,1.121,284,3.756,286,3.061,287,2.532,288,4.234,289,3.981,290,3.942,291,2.164,292,2.228,296,4.003,297,3.516,298,3.516,299,1.973,300,1.943,301,3.516,302,3.238,303,2.586,304,3.238,305,2.103,306,3.238,307,3.238,308,2.927,313,1.187,316,1.121,319,0.541,321,2.805,330,2.927,331,0.558,332,0.508,350,3.767,357,1.111,359,0.749,446,4.679,448,3.652,474,1.235,509,3.209,526,3.767,650,2.3,671,4.013,705,4.013,959,2.805,1384,3.888,1385,5.926,1386,5.926,1387,5.926,1388,4.453,1389,4.679,1390,5.926,1391,5.174,1392,3.888,1393,4.453,1394,4.453,1395,3.888,1396,4.453,1397,4.453,1398,4.453]],["title/classes/MuseumBuilder.html",[46,0.181,826,2.318]],["body/classes/MuseumBuilder.html",[3,0.165,4,0.12,9,0.094,11,0.24,14,0.758,15,1.165,27,0.147,28,0.522,30,0.327,36,0.737,37,0.013,39,0.298,45,0.12,46,0.179,55,0.376,72,0.914,82,0.706,119,0.006,120,0.008,121,0.006,129,0.475,131,0.418,132,1,237,1.941,251,1.014,284,3.736,286,3.691,287,2.358,289,3.367,290,3.367,291,1.83,296,4.324,299,1.194,305,1.641,311,2.294,312,3.196,313,0.808,314,4.282,315,3.752,316,2.131,317,3.514,318,4.693,319,0.769,320,3.182,321,2.622,322,4.287,323,4.201,324,2.931,325,1.991,330,3.805,331,0.712,332,0.648,333,3.153,337,3.182,338,2.931,339,2.931,340,3.182,341,4.969,342,2.931,343,3.182,344,2.931,345,3.182,346,3.182,347,2.931,348,3.182,349,3.325,350,2.562,351,2.931,352,2.562,353,2.931,354,2.73,355,2.931,356,2.931,357,1.186,359,0.397,361,3.519,362,2.931,474,1.537,528,3.519,826,3.879,1399,5.951,1400,4.031,1401,4.837,1402,5.54,1403,4.031]],["title/components/MuseumListComponent.html",[0,0.299,89,0.872]],["body/components/MuseumListComponent.html",[0,0.44,1,0.779,2,1.257,3,0.108,4,0.108,5,0.916,6,0.916,7,0.916,8,0.916,9,0.085,11,0.179,14,0.789,15,0.814,18,1.385,19,1.558,20,0.858,21,2.133,22,2.009,23,1.298,25,1.298,27,0.133,28,0.486,29,1.931,30,0.286,33,3.096,34,0.887,36,0.464,37,0.013,38,1.558,39,0.307,40,0.535,41,0.804,42,0.887,45,0.108,46,0.162,49,0.858,50,1.257,51,1.217,52,0.916,53,1.641,54,0.916,55,0.307,56,0.916,57,0.804,58,0.916,59,0.804,60,0.535,61,1.732,62,0.804,63,0.916,64,1.298,65,0.779,66,1.298,67,0.779,68,1.298,69,0.779,70,0.814,71,0.804,72,0.672,73,0.804,74,0.916,75,0.779,76,0.916,77,0.804,78,0.916,79,0.779,80,0.916,81,0.804,82,0.904,83,0.916,84,0.804,85,1.298,86,0.804,87,0.887,88,0.916,89,1.395,90,0.916,91,0.779,92,0.916,93,0.779,94,0.916,95,0.804,96,0.779,97,0.659,98,0.779,99,0.916,100,0.779,101,0.887,102,0.916,103,0.804,104,0.804,105,0.916,106,0.804,107,0.849,108,0.804,109,0.779,110,0.916,111,0.779,112,0.916,113,0.779,114,1.742,115,0.804,116,0.804,117,0.916,118,0.916,119,0.005,120,0.008,121,0.005,129,0.442,131,0.326,132,0.757,133,1.609,134,1.558,164,5.344,237,2.714,258,2.251,260,1.275,285,2.548,291,1.751,316,1.508,319,0.728,331,0.486,332,0.442,359,0.59,371,0.916,387,1.808,415,1.807,420,0.946,532,2.313,539,4.357,540,3.493,541,2.441,545,3.75,623,2.548,708,3.119,710,3.41,728,3.096,733,2.441,734,3.001,741,2.071,746,2.184,747,2.423,748,2.313,749,2.335,776,4.066,779,3.086,815,2.313,816,2.313,908,4.274,922,1.88,932,3.75,949,3.279,950,3.75,1064,4.504,1162,2.184,1190,3.279,1404,6.418,1405,5.158,1406,5.158,1407,3.177,1408,3.639,1409,4.072,1410,5.158,1411,3.639,1412,3.639,1413,3.639,1414,3.639,1415,3.639,1416,3.177,1417,3.639]],["title/injectables/MuseumService.html",[363,1.333,776,2.206]],["body/injectables/MuseumService.html",[3,0.164,4,0.119,9,0.093,11,0.212,13,2.077,14,0.795,27,0.146,28,0.518,30,0.295,36,0.61,37,0.013,39,0.375,40,0.586,45,0.119,46,0.177,55,0.319,72,0.447,97,0.723,107,1.008,119,0.006,120,0.008,121,0.006,126,1.811,129,0.471,131,0.387,132,0.971,133,1.071,134,1.037,180,2.535,184,1.447,237,2.206,264,1.35,287,2.077,291,2.025,299,2.108,305,2.179,313,0.799,316,2.023,319,0.765,325,2.717,331,0.639,332,0.581,357,1.272,359,0.743,363,1.8,365,1.97,366,5.483,368,3.301,369,4.342,370,4.342,371,1.791,372,2.284,377,3.149,378,4.083,379,4.678,380,4.072,381,2.849,384,3.724,387,1.526,391,4.16,393,4.342,395,3.724,396,3.724,397,3.505,400,3.582,403,4.272,406,2.06,407,2.535,408,1.674,409,2.27,411,1.397,413,1.97,414,1.499,415,1.397,416,3.149,419,1.97,420,1.037,421,2.9,425,4.342,427,1.612,430,2.535,431,2.535,439,2.978,479,2.159,548,1.887,576,3.149,615,4.263,739,1.97,741,2.27,768,2.978,776,2.978,891,3.482,892,3.149,908,3.13,973,1.887,1095,2.841,1148,5.924,1233,3.482,1391,4.802,1418,3.482,1419,5.5,1420,5.5,1421,5.5,1422,6.785,1423,5.5,1424,5.5,1425,3.988,1426,5.5,1427,5.5,1428,3.988,1429,4.342,1430,5.5,1431,3.988,1432,5.5,1433,3.988,1434,3.988,1435,3.988,1436,3.988,1437,3.482,1438,3.988]],["title/components/NavigationBarComponent.html",[0,0.299,41,0.901]],["body/components/NavigationBarComponent.html",[0,0.426,1,0.734,2,1.205,3,0.173,4,0.102,5,0.863,6,0.863,7,0.863,8,0.863,9,0.08,11,0.189,14,0.598,15,1.002,20,0.809,21,2.124,22,1.991,23,1.245,25,1.245,27,0.125,28,0.466,30,0.269,34,1.413,36,0.444,37,0.013,38,1.65,39,0.273,40,0.504,41,1.403,42,1.984,43,4.746,45,0.102,46,0.153,49,0.809,50,1.205,51,1.167,52,0.863,53,1.597,54,0.863,55,0.34,56,0.863,57,0.758,58,0.863,59,0.758,60,0.504,61,1.693,62,0.758,63,0.863,64,1.245,65,0.734,66,1.245,67,0.734,68,1.245,69,0.734,70,0.781,71,0.758,72,0.65,73,0.758,74,0.863,75,0.734,76,0.863,77,0.758,78,0.863,79,0.734,80,0.863,81,0.758,82,0.866,83,0.863,84,0.758,85,1.245,86,0.758,87,0.836,88,0.863,89,0.734,90,0.863,91,0.734,92,0.863,93,0.734,94,0.863,95,0.758,96,0.734,97,0.622,98,0.734,99,0.863,100,0.734,101,0.836,102,0.863,103,0.758,104,0.758,105,0.863,106,0.758,107,1.097,108,0.758,109,0.734,110,0.863,111,0.734,112,0.863,113,0.734,114,1.205,115,0.758,116,0.758,117,0.863,118,0.863,119,0.005,120,0.007,121,0.005,129,0.424,131,0.366,132,0.733,133,1.328,134,1.286,258,2.158,260,1.202,267,4.298,278,4.042,279,2.443,285,2.443,299,1.88,300,2.158,316,1.459,319,0.417,331,0.546,332,0.497,359,0.625,368,2.968,371,1.597,381,3.104,387,1.372,413,1.695,420,0.892,604,3.905,605,3.596,606,2.709,607,2.709,636,4.615,648,2.968,676,4.004,714,2.814,726,2.303,727,3.596,779,3.033,922,1.772,934,4.318,942,5.541,950,3.596,959,3.004,963,2.678,1023,2.995,1024,2.995,1025,2.995,1026,2.995,1027,2.995,1095,2.555,1128,2.181,1136,3.905,1439,6.119,1440,2.995,1441,7.825,1442,5.799,1443,4.946,1444,5.799,1445,5.799,1446,4.946,1447,4.615,1448,4.946,1449,4.318,1450,4.318,1451,4.946,1452,4.946,1453,3.905,1454,3.905,1455,3.905,1456,4.946,1457,3.431,1458,5.063,1459,4.946,1460,3.431,1461,4.318,1462,3.431,1463,4.946,1464,3.431,1465,2.494,1466,3.431,1467,2.995,1468,3.431,1469,4.946,1470,4.946,1471,3.431,1472,4.946,1473,3.431]],["title/components/PageNotFoundComponent.html",[0,0.299,91,0.872]],["body/components/PageNotFoundComponent.html",[0,0.494,1,0.973,2,1.465,3,0.136,4,0.136,5,1.145,6,1.145,7,1.145,8,1.145,9,0.106,11,0.136,14,0.566,15,0.949,18,1.614,19,1.75,20,1.073,21,2.165,22,2.029,23,1.513,25,1.513,27,0.166,28,0.566,29,2.121,30,0.182,33,3.608,34,2.021,35,2.259,36,0.409,37,0.013,38,1.563,39,0.214,40,0.668,41,1.006,42,1.109,45,0.136,46,0.202,49,1.073,50,1.465,51,1.418,52,1.145,53,1.802,54,1.145,55,0.283,56,1.145,57,1.006,58,1.145,59,1.006,60,0.668,61,1.874,62,1.006,63,1.145,64,1.513,65,0.973,66,1.513,67,0.973,68,1.513,69,0.973,70,0.949,71,1.006,72,0.754,73,1.006,74,1.145,75,0.973,76,1.145,77,1.006,78,1.145,79,0.973,80,1.145,81,1.006,82,1.053,83,1.145,84,1.006,85,1.513,86,1.006,87,1.109,88,1.145,89,0.973,90,1.145,91,1.532,92,1.145,93,0.973,94,1.145,95,1.006,96,0.973,97,0.825,98,0.973,99,1.145,100,0.973,101,1.109,102,1.145,103,1.006,104,1.006,105,1.145,106,1.006,107,0.953,108,1.006,109,0.973,110,1.145,111,0.973,112,1.145,113,0.973,114,1.465,115,1.006,116,1.006,117,1.145,118,1.145,119,0.007,120,0.009,121,0.007,170,4.37,267,4.071,541,2.845,591,3.255,708,2.623,779,2.524,1247,4.746,1474,5.248,1475,3.972,1476,6.011,1477,6.252,1478,6.732,1479,6.011,1480,4.55]],["title/injectables/PreviousRouteService.html",[363,1.333,1092,2.759]],["body/injectables/PreviousRouteService.html",[3,0.149,4,0.149,9,0.116,11,0.21,27,0.183,28,0.601,30,0.307,36,0.633,37,0.013,38,1.298,39,0.301,40,0.734,45,0.149,46,0.222,55,0.301,107,1.111,119,0.007,120,0.009,121,0.007,126,2.268,129,0.547,131,0.347,258,2.787,260,1.75,316,1.772,319,0.856,331,0.601,332,0.547,333,2.842,357,1.197,359,0.629,363,2.09,365,2.467,371,1.772,397,3.299,419,2.467,420,1.298,619,4.274,650,2.58,779,3.424,922,2.58,937,5.042,1091,6.849,1092,4.325,1135,5.313,1136,5.042,1193,7.051,1481,6.849,1482,4.361,1483,6.387,1484,6.387,1485,7.421,1486,5.576,1487,6.387,1488,4.994,1489,6.48,1490,6.48,1491,4.994,1492,4.994,1493,5.576,1494,4.994,1495,4.994,1496,6.387,1497,6.387,1498,7.041,1499,4.994,1500,4.994]],["title/classes/ProjectConfig.html",[46,0.181,373,1.647]],["body/classes/ProjectConfig.html",[3,0.108,4,0.108,9,0.084,11,0.153,17,2.536,27,0.132,28,0.483,30,0.316,35,3.067,36,0.641,37,0.013,45,0.108,46,0.161,55,0.17,119,0.005,120,0.008,121,0.005,129,0.44,133,1.915,134,1.69,137,3.285,251,0.91,254,5.238,313,1.029,316,2.005,319,0.439,321,2.43,331,0.34,332,0.31,333,3.699,357,1.218,359,0.588,371,1.988,372,3.005,373,2.883,387,2.273,391,3.519,404,2.24,406,2.127,461,4.766,467,4.053,474,1.424,604,2.854,714,4.728,715,5.434,716,5.919,726,2.588,729,4.816,734,3.147,747,3.127,749,2.533,768,3.972,801,4.053,829,2.628,888,6.335,959,3.076,1095,2.652,1108,4.053,1111,4.053,1212,5.186,1324,4.482,1389,4.053,1453,4.053,1501,3.156,1502,3.614,1503,5.97,1504,5.97,1505,5.97,1506,5.97,1507,6.499,1508,6.499,1509,6.499,1510,6.499,1511,5.134,1512,5.134,1513,6.545,1514,6.545,1515,5.134,1516,5.134,1517,5.134,1518,3.614,1519,5.134,1520,5.134,1521,5.134,1522,3.614,1523,3.614,1524,5.134,1525,3.614,1526,3.614,1527,5.134,1528,4.482,1529,3.614,1530,3.733,1531,4.482,1532,4.482,1533,3.614,1534,3.614,1535,3.614,1536,3.614,1537,5.134,1538,5.134,1539,5.134]],["title/injectables/ProjectConfigService.html",[363,1.333,382,1.778]],["body/injectables/ProjectConfigService.html",[3,0.16,4,0.16,9,0.125,11,0.2,17,3.306,27,0.197,28,0.63,30,0.292,36,0.483,37,0.013,39,0.315,40,0.79,45,0.16,46,0.239,55,0.253,119,0.008,120,0.01,121,0.008,126,2.442,129,0.573,131,0.364,137,3.44,316,1.834,319,0.885,321,3.167,325,3.306,331,0.506,332,0.573,357,1.008,359,0.53,363,2.19,365,2.657,371,1.834,372,2.643,373,3.441,382,2.92,404,2.92,418,2.545,419,2.657,423,4.016,448,2.657,620,2.515,623,3.306,705,4.532,768,4.328,959,3.167,1540,6.656,1541,4.246,1542,6.692,1543,6.692,1544,7.623,1545,4.695,1546,6.692,1547,5.378,1548,5.378,1549,5.378]],["title/classes/ProtoArtifact.html",[46,0.181,410,1.928]],["body/classes/ProtoArtifact.html",[3,0.214,4,0.155,9,0.121,11,0.196,14,0.731,27,0.19,28,0.618,30,0.302,35,2.699,36,0.468,37,0.013,39,0.309,45,0.155,46,0.232,55,0.245,72,0.584,119,0.008,120,0.01,121,0.008,129,0.562,131,0.409,237,2.298,251,1.311,282,2.534,284,3.24,288,4.564,292,2.92,294,3.732,308,3.24,313,1.589,316,1.311,331,0.49,332,0.446,357,1.229,359,0.513,406,2.146,410,3.854,411,2.722,412,2.69,548,2.465,620,2.465,650,2.69,719,4.442,1305,4.769,1550,4.938,1551,4.547,1552,6.558,1553,5.208,1554,5.208,1555,6.558,1556,5.208,1557,6.558,1558,5.208,1559,5.726,1560,4.769,1561,6.558,1562,5.208,1563,5.208,1564,5.208,1565,5.208]],["title/classes/ProtoCollection.html",[46,0.181,573,2.105]],["body/classes/ProtoCollection.html",[3,0.156,4,0.156,9,0.121,11,0.196,14,0.732,27,0.191,28,0.619,30,0.302,35,2.704,36,0.47,37,0.013,39,0.355,45,0.156,46,0.233,55,0.246,60,1.253,72,0.586,119,0.008,120,0.01,121,0.008,124,3.947,129,0.563,131,0.41,237,2.304,251,1.316,282,2.13,287,2.202,294,3.742,312,2.038,313,1.512,317,2.282,331,0.492,332,0.448,357,1.233,359,0.515,411,2.725,412,2.701,474,1.451,506,3.947,520,3.947,571,3.138,573,4.325,650,2.701,719,4.453,734,2.761,828,4.128,973,2.475,1550,4.944,1559,5.741,1560,4.781,1566,4.566,1567,7.193,1568,6.576,1569,5.229,1570,5.229,1571,5.741,1572,5.229,1573,6.576,1574,5.229,1575,5.229,1576,5.229,1577,5.229]],["title/classes/ProtoEdit.html",[46,0.181,886,2.318]],["body/classes/ProtoEdit.html",[3,0.171,4,0.126,9,0.098,11,0.171,14,0.721,27,0.155,28,0.539,30,0.322,35,2.441,36,0.381,37,0.013,39,0.376,45,0.126,46,0.188,55,0.199,60,1.125,70,1.303,72,0.642,107,0.92,119,0.006,120,0.008,121,0.006,129,0.491,131,0.45,132,1.026,251,1.066,282,2.269,291,1.952,305,1.697,312,2.232,317,1.848,331,0.399,332,0.363,357,0.794,359,0.417,396,3.88,410,3.073,411,2.844,412,2.187,427,2.316,439,3.102,474,1.174,479,3.516,485,3.88,520,2.541,548,2.004,571,2.541,573,3.354,614,3.052,637,4.165,639,4.721,640,4.165,641,5.126,645,3.88,648,4.497,655,5.285,657,5.002,664,4.523,665,5.002,669,4.165,691,6.346,719,3.88,734,2.405,739,3.207,741,2.409,828,3.343,886,4.585,890,3.078,1305,4.721,1550,5.16,1560,4.165,1578,3.696,1579,5.729,1580,4.234,1581,5.729,1582,4.234,1583,6.542,1584,4.234,1585,5.002,1586,4.234,1587,4.234,1588,4.234,1589,4.234,1590,4.234,1591,4.234,1592,4.234,1593,5.002,1594,5.729,1595,4.234,1596,4.234,1597,4.234,1598,4.234,1599,4.234,1600,4.234,1601,4.234,1602,4.234,1603,4.234,1604,4.234,1605,4.234,1606,4.234,1607,4.234]],["title/classes/ProtoMuseum.html",[46,0.181,739,2.013]],["body/classes/ProtoMuseum.html",[3,0.177,4,0.177,9,0.138,11,0.177,14,0.801,27,0.217,30,0.285,37,0.013,39,0.335,45,0.177,46,0.265,72,0.666,119,0.009,120,0.011,121,0.009,129,0.609,131,0.386,237,2.493,251,1.496,284,3.514,287,2.33,288,4.84,313,1.425,411,2.667,527,5.616,625,4.818,734,2.987,739,3.514,741,3.383,973,2.813,1550,4.84,1571,6.211,1608,5.19,1609,5.945,1610,5.945]],["title/classes/ProtoUser.html",[46,0.181,1230,2.59]],["body/classes/ProtoUser.html",[3,0.145,4,0.145,9,0.113,11,0.187,14,0.59,27,0.177,28,0.59,30,0.312,35,2.609,36,0.436,37,0.013,39,0.327,45,0.145,46,0.216,55,0.228,70,0.765,72,0.543,107,1.204,119,0.007,120,0.009,121,0.007,129,0.537,131,0.423,237,2.812,251,1.22,287,2.326,313,1.47,331,0.456,332,0.415,357,0.909,359,0.478,411,2.775,427,2.533,485,4.243,509,3.392,646,3.76,733,2.965,734,2.63,795,4.555,886,4.324,908,3.565,973,2.294,1060,4.243,1229,3.283,1230,5.236,1303,4.97,1305,3.524,1550,5.035,1560,4.555,1611,4.232,1612,6.265,1613,6.061,1614,6.061,1615,5.481,1616,6.061,1617,6.265,1618,4.847,1619,4.847,1620,4.847,1621,5.47,1622,4.946,1623,4.847,1624,6.265,1625,4.847,1626,4.555,1627,6.265,1628,4.847,1629,4.847,1630,4.847,1631,4.847,1632,4.847,1633,4.847,1634,4.847,1635,6.265,1636,4.847,1637,4.847,1638,4.847]],["title/classes/PrototypeBuilder.html",[46,0.181,743,2.59]],["body/classes/PrototypeBuilder.html",[3,0.156,4,0.156,9,0.122,11,0.196,14,0.759,15,0.826,27,0.192,28,0.62,30,0.21,35,2.705,36,0.471,37,0.013,39,0.39,45,0.156,46,0.233,55,0.247,60,1.184,72,0.587,119,0.008,120,0.01,121,0.008,131,0.391,251,1.318,264,2.228,282,2.387,287,1.603,309,4.457,311,2.98,312,2.805,313,1.319,317,3.465,331,0.493,332,0.449,335,4.572,357,1.349,359,0.516,410,3.115,411,2.522,474,1.997,520,3.95,573,3.4,611,5.49,739,3.251,740,4.576,743,4.184,754,3.563,755,7.117,826,2.98,1401,5.746,1639,5.746,1640,6.581,1641,6.581,1642,5.746,1643,5.236,1644,5.236,1645,6.581,1646,5.236,1647,5.236,1648,6.581,1649,6.581,1650,5.236,1651,5.236]],["title/components/RegistrationComponent.html",[0,0.299,93,0.872]],["body/components/RegistrationComponent.html",[0,0.356,1,0.545,2,0.964,3,0.076,4,0.076,5,0.641,6,0.641,7,0.641,8,0.641,9,0.059,11,0.145,13,1.211,14,0.373,15,0.625,18,1.063,19,1.261,20,0.601,21,2.069,22,1.939,23,0.996,25,0.996,27,0.093,28,0.373,29,1.62,30,0.298,34,0.964,35,2.857,36,0.588,37,0.013,38,1.422,39,0.327,40,0.374,41,0.563,42,0.621,45,0.076,46,0.113,49,0.601,50,0.964,51,0.933,52,0.641,53,1.377,54,0.641,55,0.257,56,0.641,57,0.563,58,0.641,59,0.563,60,0.374,61,1.491,62,0.563,63,0.641,64,0.996,65,0.545,66,0.996,67,0.545,68,0.996,69,0.545,70,0.625,71,0.563,72,0.544,73,0.563,74,0.641,75,0.545,76,0.641,77,0.563,78,0.641,79,0.545,80,0.641,81,0.563,82,0.693,83,0.641,84,0.563,85,0.996,86,0.875,87,1.527,88,0.641,89,0.545,90,0.641,91,0.545,92,0.641,93,1.17,94,0.641,95,0.563,96,0.545,97,1.479,98,0.545,99,0.641,100,0.545,101,0.621,102,0.641,103,0.563,104,0.563,105,0.641,106,0.563,107,1.127,108,0.563,109,0.545,110,0.641,111,0.545,112,0.641,113,0.545,114,0.964,115,0.563,116,0.563,117,0.641,118,0.641,119,0.004,120,0.006,121,0.004,129,0.339,131,0.341,133,1.59,134,1.54,143,1.112,174,1.62,201,2.037,202,1.206,204,1.45,205,1.316,206,1.45,260,0.893,264,2.122,278,2.826,279,2.397,280,4.917,305,2.174,313,0.51,319,0.59,327,2.117,331,0.373,332,0.339,357,1.11,359,0.584,371,1.959,372,2.663,381,2.839,387,1.517,406,0.834,413,1.258,414,1.487,415,1.386,420,0.662,427,2.87,474,2.087,481,4.776,489,5.339,509,2.142,541,1.206,591,1.379,619,2.044,708,1.112,733,1.206,747,1.03,754,1.379,777,3.283,778,3.283,779,2.746,783,2.68,785,1.62,793,2.011,798,1.529,813,4.43,817,1.379,838,1.62,839,1.852,840,2.011,847,1.529,848,1.529,849,1.529,851,1.529,852,1.529,868,2.375,922,1.316,949,2.515,963,1.379,1061,3.124,1094,3.124,1096,4.318,1100,3.286,1108,3.124,1120,6.409,1128,1.62,1134,1.725,1145,2.011,1156,3.527,1157,2.224,1158,2.224,1159,2.224,1161,2.224,1162,1.529,1208,4.415,1228,2.877,1229,1.725,1258,5.05,1331,3.124,1486,3.455,1493,5.904,1626,4.558,1652,2.224,1653,3.957,1654,4.851,1655,3.957,1656,4.851,1657,4.851,1658,4.851,1659,4.851,1660,4.851,1661,3.957,1662,4.851,1663,4.851,1664,4.851,1665,4.851,1666,2.548,1667,3.957,1668,2.548,1669,3.957,1670,2.548,1671,3.957,1672,5.473,1673,2.548,1674,5.47,1675,3.957,1676,6.763,1677,4.851,1678,5.47,1679,2.548,1680,4.776,1681,2.548,1682,3.957,1683,2.548,1684,2.548,1685,3.455,1686,3.957,1687,3.957,1688,3.957,1689,3.957,1690,5.47,1691,5.47,1692,3.957,1693,3.957,1694,4.236,1695,2.548,1696,3.455,1697,2.548,1698,2.548,1699,2.548,1700,2.548,1701,2.548,1702,2.548,1703,2.548,1704,2.548,1705,2.224,1706,2.548,1707,2.548,1708,2.548,1709,2.548,1710,2.548,1711,2.548,1712,2.548,1713,2.548,1714,2.548,1715,2.548,1716,2.548,1717,2.548,1718,2.224,1719,2.224,1720,2.548,1721,2.548,1722,2.548,1723,2.548,1724,5.47,1725,3.957,1726,6.763,1727,3.957,1728,3.957,1729,3.957,1730,3.957,1731,3.957,1732,4.236,1733,3.124,1734,3.124,1735,3.455,1736,2.224,1737,2.224]],["title/components/ResetPasswordModalComponent.html",[0,0.299,95,0.901]],["body/components/ResetPasswordModalComponent.html",[0,0.511,1,0.801,2,1.282,3,0.112,4,0.112,5,0.942,6,0.942,7,0.942,8,0.942,9,0.087,11,0.157,14,0.495,15,0.831,18,1.413,19,1.582,20,0.883,21,2.138,22,2.004,23,1.324,25,1.324,27,0.137,28,0.495,29,1.955,30,0.289,33,3.158,34,0.912,36,0.547,37,0.013,38,1.716,39,0.34,40,0.55,41,0.827,42,0.912,45,0.112,46,0.167,49,0.883,50,1.282,51,1.241,52,0.942,53,1.661,54,0.942,55,0.286,56,0.942,57,0.827,58,0.942,59,0.827,60,0.55,61,1.751,62,0.827,63,0.942,64,1.324,65,0.801,66,1.324,67,0.801,68,1.324,69,0.801,70,0.831,71,0.827,72,0.682,73,0.827,74,0.942,75,0.801,76,0.942,77,0.827,78,0.942,79,0.801,80,0.942,81,0.827,82,0.922,83,0.942,84,0.827,85,1.324,86,0.827,87,1.899,88,0.942,89,0.801,90,0.942,91,0.801,92,0.942,93,0.801,94,0.942,95,1.459,96,1.726,97,1.53,98,0.801,99,0.942,100,0.801,101,0.912,102,0.942,103,0.827,104,0.827,105,0.942,106,0.827,107,1.089,108,0.827,109,0.801,110,0.942,111,0.801,112,0.942,113,0.801,114,1.282,115,0.827,116,0.827,117,0.942,118,0.942,119,0.006,120,0.008,121,0.006,129,0.451,131,0.331,132,0.665,143,1.634,184,1.358,201,1.572,202,1.772,247,5.388,313,1.054,319,0.74,330,2.599,331,0.352,332,0.321,359,0.369,368,3.158,380,2.247,414,1.407,415,1.312,420,0.973,427,3.185,533,3.158,582,2.955,589,5.313,590,4.594,592,4.594,598,4.804,600,3.345,605,4.424,775,6.604,817,2.027,878,4.594,927,4.155,936,4.155,1123,4.594,1126,5.212,1131,2.535,1132,3.268,1208,4.711,1381,6.713,1455,2.955,1705,3.268,1738,6.47,1739,5.262,1740,5.262,1741,3.268,1742,3.743,1743,3.743,1744,3.743,1745,3.743,1746,3.743,1747,3.743,1748,3.743]],["title/components/SearchComponent.html",[0,0.299,98,0.872]],["body/components/SearchComponent.html",[0,0.426,1,0.734,2,1.205,3,0.102,4,0.102,5,0.863,6,0.863,7,0.863,8,0.863,9,0.08,11,0.147,14,0.66,15,1.002,16,2.814,18,1.328,19,1.508,20,0.809,21,2.124,22,1.991,23,1.245,25,1.245,27,0.125,28,0.466,29,1.88,30,0.306,34,1.413,36,0.521,37,0.013,38,1.822,39,0.273,40,0.504,41,0.758,42,0.836,45,0.102,46,0.153,49,0.809,50,1.205,51,1.167,52,0.863,53,1.597,54,0.863,55,0.273,56,0.863,57,0.758,58,0.863,59,0.758,60,0.852,61,1.693,62,0.758,63,0.863,64,1.245,65,0.734,66,1.245,67,0.734,68,1.245,69,0.734,70,0.781,71,0.758,72,0.65,73,0.758,74,0.863,75,0.734,76,0.863,77,0.758,78,0.863,79,0.734,80,0.863,81,0.758,82,0.866,83,0.863,84,0.758,85,1.245,86,0.758,87,0.836,88,0.863,89,0.734,90,0.863,91,0.734,92,0.863,93,0.734,94,0.863,95,0.758,96,0.734,97,0.622,98,1.358,99,0.863,100,0.734,101,2.053,102,0.863,103,0.758,104,0.758,105,0.863,106,0.758,107,1.067,108,0.758,109,0.734,110,0.863,111,0.734,112,0.863,113,0.734,114,1.205,115,0.758,116,0.758,117,0.863,118,0.863,119,0.005,120,0.007,121,0.01,125,3.144,129,0.424,131,0.381,132,0.935,133,1.986,134,1.65,174,2.181,258,2.158,260,1.202,282,1.465,299,1.465,303,2.77,316,1.459,319,0.705,331,0.323,332,0.294,359,0.338,371,1.459,420,0.892,536,3.596,542,2.246,547,2.936,614,2.665,638,3.349,727,4.615,767,3.596,779,3.033,884,3.596,909,4.318,910,4.318,911,2.709,914,4.578,922,1.772,943,4.318,952,2.709,974,2.709,1135,4.298,1212,4.615,1258,2.494,1310,3.596,1357,4.615,1447,3.596,1489,5.541,1749,2.995,1750,4.946,1751,4.318,1752,5.799,1753,4.946,1754,5.799,1755,5.799,1756,5.063,1757,6.347,1758,5.799,1759,5.799,1760,4.946,1761,3.431,1762,3.905,1763,4.318,1764,3.431,1765,3.905,1766,3.431,1767,4.946,1768,3.431,1769,4.946,1770,4.946,1771,4.946,1772,3.431,1773,3.431,1774,4.318,1775,3.431,1776,4.946,1777,3.431,1778,4.318,1779,3.431,1780,4.318,1781,4.946,1782,3.431,1783,4.946,1784,3.431,1785,3.431,1786,4.946]],["title/components/SearchInCategoryComponent.html",[0,0.299,100,0.872]],["body/components/SearchInCategoryComponent.html",[0,0.463,1,0.855,2,1.342,3,0.119,4,0.119,5,1.006,6,1.006,7,1.006,8,1.006,9,0.093,11,0.164,14,0.519,15,0.869,16,3.134,18,1.479,19,1.638,20,0.943,21,2.147,22,2.013,23,1.386,25,1.386,27,0.146,28,0.519,29,2.011,30,0.285,34,0.974,36,0.359,37,0.013,38,1.432,39,0.32,40,0.587,41,0.883,42,0.974,45,0.119,46,0.178,49,0.943,50,1.342,51,1.299,52,1.006,53,1.709,54,1.006,55,0.297,56,1.006,57,0.883,58,1.006,59,0.883,60,0.587,61,1.793,62,0.883,63,1.006,64,1.386,65,0.855,66,1.386,67,0.855,68,1.386,69,0.855,70,0.869,71,0.883,72,0.761,73,0.883,74,1.006,75,0.855,76,1.006,77,0.883,78,1.006,79,0.855,80,1.006,81,0.883,82,0.965,83,1.006,84,0.883,85,1.386,86,0.883,87,0.974,88,1.006,89,0.855,90,1.006,91,0.855,92,1.006,93,0.855,94,1.006,95,0.883,96,0.855,97,0.724,98,0.855,99,1.006,100,1.453,101,2.005,102,1.006,103,0.883,104,0.883,105,1.006,106,0.883,107,1.009,108,0.883,109,0.855,110,1.006,111,0.855,112,1.006,113,0.855,114,1.342,115,0.883,116,0.883,117,1.006,118,1.006,119,0.006,120,0.008,121,0.011,129,0.472,131,0.299,177,5.354,260,1.4,285,2.721,287,1.929,299,2.011,303,2.964,319,0.766,331,0.376,332,0.342,359,0.394,420,1.039,536,4.004,614,3.227,616,2.707,617,4.317,619,3.255,620,2.07,622,4.348,628,3.501,638,3.73,649,4.348,914,5.624,973,1.891,974,3.155,1756,6.22,1763,4.809,1778,4.809,1780,3.489,1787,6.429,1788,3.489,1789,6.302,1790,5.508,1791,6.302,1792,5.508,1793,3.996,1794,3.996,1795,5.508,1796,3.996,1797,3.996,1798,3.996,1799,3.489,1800,3.996,1801,3.996,1802,5.508]],["title/classes/ServerCannotConnect.html",[46,0.181,1084,2.759]],["body/classes/ServerCannotConnect.html",[3,0.178,4,0.178,9,0.139,11,0.178,27,0.219,30,0.239,35,2.869,37,0.013,45,0.178,46,0.266,107,0.847,119,0.009,120,0.011,121,0.009,129,0.612,133,1.606,134,1.555,159,4.836,251,1.506,316,1.506,372,2.769,406,2.498,541,3.379,591,4.44,708,3.116,716,5.638,868,4.286,1084,4.836,1106,4.836,1409,5.638,1803,5.223,1804,5.982,1805,5.982,1806,5.192,1807,7.141,1808,6.235,1809,5.638,1810,5.192,1811,5.982]],["title/classes/ServerConfig.html",[46,0.181,559,2.59]],["body/classes/ServerConfig.html",[3,0.141,4,0.141,9,0.11,11,0.184,13,1.886,16,4.136,17,3.59,27,0.173,28,0.58,30,0.302,35,2.906,36,0.425,37,0.013,39,0.222,45,0.141,46,0.21,55,0.222,119,0.007,120,0.009,121,0.007,129,0.528,131,0.395,132,0.977,133,1.655,134,1.602,137,3.305,251,1.189,254,4.174,299,2.458,316,1.897,319,0.574,331,0.445,332,0.405,357,0.886,359,0.466,371,1.726,372,2.929,373,3.228,404,3.436,406,2.613,420,1.229,461,4.62,559,3.918,620,2.317,623,3.044,729,3.699,734,3.245,768,3.337,959,3.246,1005,4.866,1514,5.381,1528,5.381,1545,4.126,1812,4.126,1813,6.858,1814,6.858,1815,6.858,1816,7.268,1817,6.163,1818,5.381,1819,5.381,1820,4.726,1821,6.163,1822,6.163,1823,4.726,1824,4.866,1825,6.163,1826,6.163,1827,6.163,1828,4.726,1829,6.163,1830,4.726,1831,4.726,1832,4.726,1833,6.858,1834,4.726,1835,4.726]],["title/injectables/ServerConfigService.html",[363,1.333,378,2.206]],["body/injectables/ServerConfigService.html",[3,0.159,4,0.159,9,0.124,11,0.198,27,0.195,28,0.627,30,0.29,36,0.652,37,0.013,39,0.358,40,0.783,45,0.159,46,0.237,55,0.251,119,0.008,120,0.01,121,0.008,126,2.422,129,0.57,131,0.362,137,3.284,316,1.827,319,0.882,321,3.15,331,0.502,332,0.457,357,1,359,0.525,363,2.178,365,2.634,368,4.562,371,1.827,372,2.633,373,2.156,378,3.604,382,3.531,404,3.57,406,2.677,408,2.239,418,2.524,419,2.634,420,1.386,474,1.479,559,5.2,570,3.788,572,4.656,574,5.812,620,2.502,768,4.115,959,3.15,1541,4.21,1836,6.636,1837,7.6,1838,5.332,1839,6.657,1840,5.332,1841,5.332]],["title/classes/ServerResponse.html",[46,0.181,414,1.531]],["body/classes/ServerResponse.html",[3,0.165,4,0.165,9,0.128,11,0.203,27,0.202,30,0.295,37,0.013,45,0.165,46,0.246,55,0.26,97,1.002,107,0.964,119,0.008,120,0.01,121,0.008,129,0.583,131,0.37,132,0.86,251,1.391,319,0.896,331,0.52,332,0.474,359,0.671,387,1.888,406,2.414,414,2.558,415,1.937,427,2.235,439,3.685,591,4.597,726,2.469,749,2.154,785,4.327,1152,6.553,1357,5.596,1371,4.826,1372,5.374,1373,4.826,1810,4.949,1842,6.72,1843,4.826,1844,6.806,1845,6.806,1846,6.72,1847,6.806,1848,5.527,1849,4.364,1850,4.826,1851,5.527,1852,5.527]],["title/classes/Tag.html",[46,0.181,104,0.901]],["body/classes/Tag.html",[3,0.144,4,0.144,9,0.112,11,0.206,27,0.176,28,0.588,30,0.304,35,2.852,36,0.433,37,0.013,39,0.227,45,0.144,46,0.215,55,0.381,60,1.142,72,0.922,104,1.879,119,0.007,120,0.009,121,0.007,129,0.535,131,0.412,132,0.789,133,1.677,251,1.214,282,1.849,291,2.124,292,2.973,305,1.849,319,0.842,321,2.955,325,3.618,331,0.588,332,0.535,357,0.904,359,0.682,387,2.032,450,4.21,451,3.506,474,1.338,548,2.282,555,3.506,620,2.921,726,2.752,749,2.699,959,2.955,979,3.266,1389,4.93,1762,6.536,1853,6.136,1854,4.21,1855,6.244,1856,6.244,1857,4.822,1858,7.324,1859,4.822,1860,6.244,1861,4.822,1862,5.452,1863,6.244,1864,4.822,1865,4.822]],["title/components/TagSelectionComponent.html",[0,0.299,103,0.901]],["body/components/TagSelectionComponent.html",[0,0.37,1,0.578,2,1.008,3,0.081,4,0.081,5,1.267,6,0.68,7,0.68,8,0.68,9,0.063,11,0.168,14,0.691,15,0.653,18,1.111,19,1.308,20,0.637,21,2.081,22,1.95,23,1.042,25,1.042,27,0.099,28,0.39,29,1.671,30,0.308,34,0.658,36,0.619,37,0.013,38,1.875,39,0.324,40,0.397,41,0.597,42,0.658,45,0.081,46,0.12,49,0.637,50,1.008,51,0.976,52,0.68,53,1.42,54,0.68,55,0.286,56,0.68,57,0.597,58,0.68,59,0.597,60,0.894,61,1.531,62,0.597,63,0.68,64,1.042,65,0.578,66,1.042,67,0.578,68,1.042,69,0.578,70,0.653,71,0.597,72,0.632,73,0.597,74,0.68,75,0.578,76,0.68,77,0.597,78,0.68,79,0.578,80,0.68,81,0.597,82,0.725,83,0.68,84,0.597,85,1.042,86,0.597,87,0.658,88,0.68,89,0.578,90,0.68,91,0.578,92,0.68,93,0.578,94,0.68,95,0.597,96,0.578,97,0.489,98,0.578,99,0.68,100,0.578,101,0.658,102,0.68,103,1.247,104,1.805,105,0.68,106,0.597,107,1.039,108,0.597,109,0.578,110,0.68,111,0.578,112,0.68,113,0.578,114,1.008,115,0.597,116,0.597,117,0.68,118,0.68,119,0.004,120,0.006,121,0.004,124,2.484,129,0.355,131,0.392,135,3.009,137,1.738,184,0.98,215,5.636,237,2.527,284,3.17,291,1.851,292,2.511,300,1.806,305,1.226,316,1.615,319,0.612,331,0.474,332,0.431,357,0.943,359,0.556,371,1.681,373,2.035,382,3.008,387,2.001,404,1.806,408,1.134,411,0.946,418,1.278,420,0.702,424,1.621,474,1.148,538,3.268,542,1.88,547,2.462,548,1.278,615,3.82,632,3.009,636,3.009,637,3.009,650,2.138,705,2.803,708,2.801,710,2.864,714,3.922,726,2.328,733,1.959,734,1.738,739,2.045,740,1.717,742,2.045,745,1.537,746,3.02,747,2.459,748,2.631,749,1.961,754,1.462,767,3.009,768,2.725,776,3.617,792,3.386,815,1.717,816,1.717,829,1.963,831,2.358,911,3.973,918,4.925,927,3.268,936,3.268,951,3.614,952,4.454,958,4.666,1031,2.358,1094,3.268,1095,2.914,1162,1.621,1273,3.268,1409,3.268,1453,3.268,1513,3.614,1530,3.009,1762,5.876,1806,3.009,1824,3.268,1853,6.12,1866,2.358,1867,4.139,1868,7.907,1869,5.032,1870,4.139,1871,5.032,1872,5.641,1873,4.139,1874,5.641,1875,5.641,1876,5.032,1877,5.641,1878,4.139,1879,2.7,1880,2.7,1881,2.7,1882,3.268,1883,2.7,1884,2.7,1885,2.7,1886,4.139,1887,3.614,1888,4.139,1889,2.7,1890,2.7,1891,5.641,1892,5.641,1893,2.7,1894,2.7,1895,4.139,1896,2.7,1897,2.7,1898,2.7,1899,2.7,1900,5.032,1901,4.139,1902,2.7,1903,4.139,1904,4.139,1905,2.7,1906,2.7,1907,2.7,1908,2.7,1909,2.7,1910,2.7,1911,2.7,1912,2.7,1913,2.7,1914,4.139,1915,2.7,1916,2.7,1917,5.032,1918,2.7,1919,2.7,1920,4.139]],["title/pipes/TextLimitPipe.html",[151,2.759,1274,2.759]],["body/pipes/TextLimitPipe.html",[3,0.159,4,0.159,9,0.124,11,0.198,18,1.432,20,1.258,28,0.502,30,0.213,36,0.479,37,0.013,39,0.251,40,0.783,45,0.159,46,0.237,55,0.342,119,0.008,120,0.01,121,0.008,131,0.29,132,1.034,133,1.787,151,4.508,264,2.254,303,3.69,331,0.502,332,0.457,357,1.248,359,0.656,454,3.611,469,6.636,489,6.558,820,3.995,963,2.887,995,5.812,1117,4.84,1274,4.508,1275,4.21,1280,4.656,1282,6.636,1286,5.812,1680,5.812,1718,5.812,1921,5.812,1922,4.656,1923,7.977,1924,6.657,1925,5.332,1926,6.657,1927,6.657,1928,6.657,1929,7.257,1930,5.332,1931,6.657,1932,5.332,1933,5.332,1934,5.332,1935,5.332]],["title/classes/User.html",[46,0.181,107,0.577]],["body/classes/User.html",[3,0.183,4,0.14,9,0.109,11,0.183,12,3.326,13,1.88,14,0.578,15,1.08,27,0.172,30,0.319,37,0.013,39,0.341,45,0.14,46,0.209,55,0.221,70,1.218,72,0.688,97,1.495,107,1.184,119,0.007,120,0.009,121,0.007,129,0.526,131,0.433,132,1.048,237,2.794,251,1.183,286,3.173,287,2.304,292,1.768,296,3.326,308,3.035,313,1.231,319,0.572,327,2.681,331,0.443,332,0.403,359,0.674,427,3.179,448,3.38,479,4.075,483,5.363,486,3.419,487,4.974,488,5.363,493,3.185,494,3.419,496,4.106,733,2.907,795,4.466,883,4.466,908,4.128,1060,4.16,1303,4.913,1613,5.973,1614,5.973,1615,5.401,1616,5.973,1621,5.363,1622,4.85,1626,5.997,1733,4.85,1936,4.106,1937,6.143,1938,4.702,1939,4.702,1940,4.702,1941,4.702,1942,4.85,1943,4.702,1944,4.702,1945,4.702,1946,4.702]],["title/components/UserEditListComponent.html",[0,0.299,106,0.901]],["body/components/UserEditListComponent.html",[0,0.301,1,0.422,2,0.786,3,0.059,4,0.059,5,0.496,6,0.496,7,0.496,8,0.496,9,0.046,11,0.176,14,0.445,15,0.509,18,0.866,19,1.064,20,0.465,21,2.009,22,1.883,23,0.812,25,0.812,27,0.072,28,0.304,29,1.4,30,0.299,34,1.152,36,0.531,37,0.013,38,1.815,39,0.309,40,0.29,41,0.436,42,0.48,45,0.059,46,0.088,49,0.465,50,0.786,51,0.761,52,0.496,53,1.19,54,0.496,55,0.338,56,0.496,57,0.436,58,0.496,59,0.436,60,0.29,61,1.312,62,0.436,63,1.03,64,0.812,65,0.422,66,0.812,67,0.422,68,0.812,69,0.422,70,1.343,71,0.436,72,0.753,73,0.436,74,0.496,75,0.422,76,0.496,77,0.436,78,0.496,79,0.422,80,0.496,81,0.436,82,0.565,83,0.496,84,0.436,85,0.812,86,0.905,87,1.152,88,0.496,89,0.422,90,0.496,91,0.422,92,0.496,93,0.422,94,0.496,95,0.436,96,0.876,97,0.357,98,0.422,99,0.496,100,0.422,101,0.48,102,0.496,103,0.436,104,0.436,105,0.496,106,1.045,107,1.1,108,0.436,109,0.422,110,0.496,111,0.422,112,0.496,113,0.422,114,1.599,115,0.436,116,0.436,117,0.496,118,0.496,119,0.006,120,0.005,121,0.003,129,0.276,131,0.413,132,0.659,133,1.713,134,1.603,143,0.86,181,4.793,184,0.715,201,0.828,202,0.933,204,1.122,205,1.018,206,1.122,232,5.482,237,2.574,258,2.063,260,0.691,264,1.765,279,2.918,285,1.593,300,2.063,313,0.646,319,0.497,331,0.527,332,0.48,336,2.184,357,0.369,359,0.629,371,1.312,372,2.489,387,0.894,414,1.212,415,0.691,420,0.512,474,0.894,523,2.975,532,1.253,539,2.975,540,2.184,541,2.468,542,1.464,547,1.786,551,2.69,583,2.815,585,4.865,591,1.746,614,2.588,620,0.741,623,0.974,638,2.184,639,2.344,640,4.772,643,2.05,644,2.344,645,2.771,646,4.189,648,2.837,676,3.838,726,1.892,728,1.183,729,1.183,733,2.237,742,1.593,747,2.108,749,2.032,754,1.067,763,1.122,777,2.837,778,2.837,779,2.588,782,2.184,795,3.437,798,1.183,817,1.067,818,3.791,819,1.556,820,2.837,821,2.975,838,1.253,843,1.335,847,1.183,848,1.183,849,1.183,851,1.183,852,1.183,870,4.001,872,2.184,875,2.546,883,2.344,884,4.07,890,1.433,905,1.433,935,1.721,963,1.746,977,1.556,979,1.335,997,2.546,1052,3.733,1060,2.184,1100,1.335,1106,1.335,1117,2.344,1118,2.815,1133,1.721,1190,2.05,1210,2.546,1265,3.437,1266,2.546,1272,2.546,1303,5.106,1310,3.437,1367,1.433,1368,1.335,1369,1.335,1370,1.433,1372,2.546,1465,2.344,1809,4.664,1862,2.815,1947,5.482,1948,2.815,1949,3.573,1950,3.573,1951,3.573,1952,3.573,1953,3.573,1954,3.573,1955,3.573,1956,5.382,1957,5.382,1958,4.128,1959,6.816,1960,4.092,1961,2.815,1962,3.573,1963,1.971,1964,3.225,1965,3.225,1966,3.225,1967,1.971,1968,1.971,1969,1.971,1970,2.546,1971,2.815,1972,2.815,1973,2.815,1974,1.971,1975,2.815,1976,1.971,1977,1.971,1978,4.128,1979,5.382,1980,4.887,1981,2.815,1982,1.971,1983,3.225,1984,2.815,1985,1.971,1986,6.095,1987,4.128,1988,2.815,1989,2.815,1990,1.971,1991,3.225,1992,1.971,1993,2.546,1994,2.815,1995,1.971,1996,1.721,1997,2.546,1998,2.815,1999,3.573,2000,1.721,2001,4.419,2002,1.721,2003,3.573,2004,3.573,2005,4.887,2006,4.887,2007,4.887,2008,4.128,2009,4.128,2010,3.573,2011,1.971,2012,3.573,2013,1.971,2014,1.721,2015,1.721,2016,1.721,2017,4.128,2018,1.721,2019,2.815,2020,1.971,2021,1.971,2022,3.225,2023,1.721,2024,3.573,2025,2.815,2026,2.815,2027,1.721,2028,1.721,2029,1.721,2030,1.971,2031,1.721,2032,1.721,2033,1.721,2034,1.556,2035,1.721,2036,1.721,2037,2.815,2038,1.721,2039,1.721,2040,1.721,2041,1.721,2042,2.815,2043,1.721,2044,1.721,2045,1.721,2046,3.225,2047,3.225,2048,3.225,2049,3.225,2050,4.728,2051,1.971,2052,3.225,2053,1.721,2054,2.815,2055,2.815,2056,1.971,2057,1.721]],["title/injectables/UserInfoService.html",[363,1.333,381,1.71]],["body/injectables/UserInfoService.html",[3,0.183,4,0.095,9,0.074,11,0.166,13,2.089,19,0.827,27,0.116,28,0.441,30,0.305,36,0.634,37,0.013,38,1.592,39,0.363,40,0.467,45,0.095,46,0.141,55,0.22,70,0.502,96,1.001,97,1.397,107,1.164,119,0.005,120,0.007,121,0.005,126,1.444,129,0.401,131,0.333,133,0.854,134,0.827,184,1.154,264,2.073,278,4.057,312,1.239,313,0.937,316,2.017,319,0.675,327,2.042,330,2.312,331,0.441,332,0.401,349,2.808,357,1.223,359,0.547,363,1.531,365,1.571,371,1.776,381,1.965,387,1.298,397,2.868,403,4.435,406,2.136,409,1.81,411,1.64,414,2.087,415,1.945,419,1.571,420,0.827,427,3.038,439,2.534,454,2.153,474,2.114,479,4.125,486,3.402,487,5.264,548,1.505,551,1.81,570,2.663,623,2.312,645,2.153,646,1.908,648,2.808,650,2.417,676,3.695,708,2.042,726,1.698,742,2.312,747,1.286,749,2.164,785,2.975,826,1.81,827,2.312,839,3.402,872,3.169,886,1.81,887,3.169,898,2.776,937,3.694,1095,3.74,1102,3.402,1156,2.312,1162,1.908,1190,3.53,1208,4.486,1213,4.834,1218,3.169,1228,3.402,1229,2.153,1230,3.893,1265,2.312,1350,3.694,1454,4.834,1465,4.452,1490,4.085,1531,4.085,1741,2.776,1882,3.694,1970,4.834,2058,6.731,2059,2.776,2060,4.679,2061,5.552,2062,5.552,2063,6.123,2064,6.123,2065,5.346,2066,6.123,2067,6.123,2068,7.24,2069,4.679,2070,7.514,2071,4.679,2072,3.18,2073,6.123,2074,3.18,2075,4.679,2076,4.679,2077,4.679,2078,3.18,2079,4.679,2080,3.18,2081,4.679,2082,5.552,2083,3.18,2084,4.679,2085,3.18,2086,4.085,2087,3.18,2088,4.679,2089,4.085,2090,4.679,2091,3.18,2092,3.18,2093,5.552,2094,3.18,2095,2.776,2096,2.776,2097,6.526,2098,6.123,2099,3.18,2100,3.18,2101,3.18,2102,3.18,2103,3.18,2104,2.51,2105,5.552,2106,3.18,2107,3.18,2108,3.18,2109,3.18,2110,4.679,2111,3.18,2112,3.18,2113,3.18,2114,3.18,2115,3.18,2116,3.18,2117,3.18,2118,4.679,2119,3.18,2120,3.18,2121,3.18,2122,3.18,2123,3.18,2124,3.18,2125,3.18,2126,3.18,2127,3.18,2128,4.679,2129,3.18,2130,3.18,2131,3.18,2132,3.18,2133,3.18,2134,3.18]],["title/components/UserMuseumListComponent.html",[0,0.299,108,0.901]],["body/components/UserMuseumListComponent.html",[0,0.322,1,0.467,2,0.853,3,0.131,4,0.065,5,0.549,6,0.549,7,0.549,8,0.549,9,0.051,11,0.164,12,1.896,14,0.793,15,0.553,18,0.94,19,1.14,20,0.515,21,2.034,22,1.907,23,0.881,25,0.881,27,0.08,28,0.33,29,1.487,30,0.298,32,2.227,33,2.102,34,1.339,36,0.494,37,0.013,38,1.718,39,0.332,40,0.321,41,0.483,42,0.532,45,0.065,46,0.097,49,0.515,50,0.853,51,0.826,52,0.549,53,1.263,54,0.549,55,0.364,56,0.549,57,0.483,58,0.549,59,0.483,60,0.321,61,1.383,62,1.11,63,1.263,64,0.881,65,0.467,66,0.881,67,0.467,68,0.881,69,0.467,70,0.553,71,0.483,72,0.76,73,0.483,74,0.549,75,0.467,76,0.549,77,0.483,78,0.549,79,0.467,80,0.549,81,0.483,82,0.614,83,0.549,84,0.483,85,0.881,86,0.97,87,1.502,88,0.549,89,0.467,90,0.549,91,0.467,92,0.549,93,0.467,94,0.549,95,0.483,96,0.938,97,0.396,98,0.467,99,0.549,100,0.467,101,0.532,102,0.549,103,0.483,104,0.483,105,0.549,106,0.483,107,1.118,108,1.11,109,0.467,110,0.549,111,0.467,112,0.549,113,0.467,114,1.429,115,0.483,116,0.483,117,0.549,118,0.549,119,0.007,120,0.005,121,0.003,129,0.3,131,0.376,132,0.554,133,1.655,134,1.602,143,0.953,181,4.772,184,0.792,201,0.916,202,1.033,204,1.242,205,1.128,206,1.242,232,5.457,237,2.428,243,1.906,244,1.587,245,1.723,258,1.528,260,0.765,264,2.087,279,3.045,285,1.73,287,2.023,300,1.528,313,0.702,319,0.533,331,0.473,332,0.43,336,2.372,357,0.656,359,0.607,371,1.383,372,2.398,387,0.972,400,3.646,414,1.316,415,1.227,420,0.567,448,1.078,460,2.546,474,0.606,523,3.189,526,2.227,532,1.388,540,2.372,541,1.033,542,1.591,544,2.765,545,1.587,547,2.398,551,1.993,555,3.189,584,1.906,620,0.82,625,2.372,636,3.189,648,2.102,668,3.189,676,3.337,726,1.591,728,1.31,729,2.102,742,1.73,747,0.883,749,0.851,754,1.182,763,1.242,776,3.469,777,3.013,778,3.013,779,2.588,783,2.372,798,1.31,812,3.058,815,1.388,816,1.388,817,1.182,838,1.388,843,1.478,847,1.31,848,1.31,849,1.31,851,1.31,852,1.31,884,3.189,905,1.587,908,3.646,922,1.128,959,1.033,963,1.896,973,1.033,979,1.478,997,2.765,1060,2.372,1078,2.765,1100,2.97,1102,1.587,1106,1.478,1117,2.546,1210,2.765,1265,3.189,1266,2.765,1272,2.765,1310,3.65,1358,1.723,1367,3.189,1368,2.97,1369,2.97,1370,3.189,1407,1.906,1416,1.906,1429,3.463,1454,2.765,1455,1.723,1465,2.546,1615,4.339,1622,2.765,1809,4.866,1810,2.546,1942,2.765,1947,5.457,1949,3.83,1950,3.83,1951,3.83,1952,3.83,1953,3.83,1954,3.83,1955,3.83,1958,4.383,1959,6.858,1961,3.058,1962,3.83,1970,2.765,1971,3.83,1972,3.058,1978,4.383,1979,5.594,1980,5.122,1984,3.058,1986,6.26,1987,4.383,1988,3.058,1989,3.058,1996,1.906,1997,2.765,1998,3.058,1999,3.058,2000,1.906,2001,3.963,2002,1.906,2003,3.83,2004,3.83,2005,5.122,2006,5.122,2007,5.122,2008,4.383,2009,4.383,2010,3.83,2012,3.83,2015,1.906,2016,1.906,2017,4.383,2018,1.906,2019,3.058,2023,1.906,2024,3.83,2025,3.058,2026,3.058,2027,1.906,2028,1.906,2029,1.906,2031,1.906,2032,1.906,2033,1.906,2034,1.723,2035,1.906,2036,1.906,2037,3.058,2038,1.906,2039,1.906,2040,1.906,2041,1.906,2045,1.906,2053,3.058,2055,3.058,2057,1.906,2135,4.386,2136,3.502,2137,3.502,2138,2.183,2139,3.502,2140,3.502,2141,2.183,2142,3.502,2143,2.183,2144,2.183,2145,2.183,2146,2.183,2147,2.183,2148,2.183,2149,2.183,2150,3.502,2151,2.183,2152,2.183,2153,2.183,2154,2.183,2155,2.183,2156,2.183,2157,2.183,2158,2.183,2159,4.386,2160,2.183,2161,2.183,2162,2.183,2163,3.502]],["title/components/UserProfileComponent.html",[0,0.299,109,0.872]],["body/components/UserProfileComponent.html",[0,0.405,1,0.671,2,1.129,3,0.22,4,0.094,5,0.79,6,0.79,7,0.79,8,0.79,9,0.073,11,0.138,12,2.509,13,1.862,14,0.573,15,0.731,18,1.244,19,1.432,20,0.74,21,2.109,22,1.976,23,1.166,25,1.166,27,0.115,28,0.436,29,1.802,30,0.295,34,1.712,36,0.495,37,0.013,38,1.766,39,0.331,40,0.461,41,0.694,42,0.764,45,0.094,46,0.14,49,0.74,50,1.129,51,1.093,52,0.79,53,1.531,54,0.79,55,0.259,56,0.79,57,0.694,58,0.79,59,0.694,60,0.461,61,1.633,62,0.694,63,0.79,64,1.166,65,0.671,66,1.166,67,0.671,68,1.166,69,0.671,70,0.96,71,0.694,72,0.617,73,0.694,74,0.79,75,0.671,76,0.79,77,0.694,78,0.79,79,0.671,80,0.79,81,0.694,82,0.812,83,0.79,84,0.694,85,1.166,86,0.694,87,0.764,88,0.79,89,0.671,90,0.79,91,0.671,92,0.79,93,0.671,94,0.79,95,0.694,96,0.671,97,0.569,98,0.671,99,0.79,100,0.671,101,0.764,102,0.79,103,0.694,104,0.694,105,0.79,106,0.694,107,1.2,108,0.694,109,1.302,110,0.79,111,0.671,112,0.79,113,0.671,114,1.129,115,0.694,116,0.694,117,0.79,118,0.79,119,0.005,120,0.007,121,0.005,129,0.397,131,0.369,132,0.586,154,3.138,181,4.762,258,2.022,260,1.099,278,3.509,279,3.7,313,0.928,319,0.381,331,0.295,332,0.269,359,0.543,371,1.166,373,2.746,381,3.028,382,3.148,387,1.688,388,3.462,400,2.637,404,2.655,406,1.991,408,1.317,411,1.099,413,1.55,415,1.623,418,1.485,420,0.816,423,1.883,424,1.883,427,3.071,430,1.995,437,2.125,439,2.509,485,2.125,500,2.477,533,2.781,570,2.637,585,3.138,620,1.742,623,2.289,708,2.964,710,3.693,714,2.637,715,3.138,719,3.138,726,2.207,733,2.193,734,1.317,740,1.995,745,1.785,746,2.781,747,1.873,748,2.946,749,1.806,779,2.95,792,2.781,837,2.281,908,2.637,922,1.621,949,2.946,1095,3.509,1128,1.995,1134,2.125,1162,1.883,1213,2.477,1218,4.12,1228,3.369,1229,2.125,1230,2.946,1247,3.658,1303,3.138,1437,4.045,1626,4.423,1719,4.045,1733,3.658,1806,3.369,1850,2.739,1882,4.803,1942,3.658,1947,5.446,2065,5.93,2104,2.477,2164,2.739,2165,5.509,2166,4.633,2167,6.084,2168,4.633,2169,3.137,2170,4.045,2171,4.633,2172,4.633,2173,4.633,2174,4.633,2175,3.137,2176,3.137,2177,4.633,2178,3.137,2179,3.137,2180,3.137,2181,3.137,2182,3.137,2183,3.137,2184,3.137,2185,3.137,2186,3.137,2187,3.137,2188,3.137,2189,4.633]],["title/components/ViewComponent.html",[0,0.299,111,0.872]],["body/components/ViewComponent.html",[0,0.337,1,0.499,2,0.9,3,0.137,4,0.07,5,0.587,6,0.587,7,0.587,8,0.587,9,0.054,11,0.169,13,1.131,14,0.74,15,0.583,16,3.438,18,0.992,19,1.192,20,0.551,21,2.05,22,1.939,23,0.93,25,0.93,27,0.085,28,0.348,29,1.544,30,0.309,34,0.569,36,0.412,37,0.013,38,1.571,39,0.358,40,0.343,41,0.516,42,0.569,45,0.07,46,0.104,49,0.551,50,0.9,51,0.871,52,0.587,53,1.312,54,0.587,55,0.338,56,0.587,57,0.516,58,0.587,59,0.516,60,1.179,61,1.43,62,0.516,63,0.587,64,0.93,65,0.499,66,0.93,67,0.499,68,0.93,69,0.499,70,0.583,71,0.516,72,0.865,73,0.516,74,0.587,75,0.499,76,0.587,77,0.516,78,0.587,79,0.499,80,0.587,81,0.516,82,0.647,83,0.587,84,0.516,85,0.93,86,0.516,87,0.569,88,0.587,89,0.499,90,0.587,91,0.499,92,0.587,93,0.499,94,0.587,95,0.516,96,0.981,97,0.423,98,0.499,99,0.587,100,0.499,101,0.569,102,0.587,103,0.516,104,0.516,105,0.587,106,0.516,107,0.805,108,0.516,109,0.499,110,0.587,111,1.115,112,0.587,113,0.499,114,1.599,115,0.516,116,0.516,117,0.587,118,0.587,119,0.003,120,0.005,121,0.003,125,2.348,129,0.316,131,0.413,132,0.83,133,0.992,134,0.96,137,2.189,184,0.847,237,1.827,260,0.818,264,1.251,282,2.349,284,2.575,287,1.739,289,1.825,291,1.525,292,2.271,299,1.789,300,2.864,312,0.909,313,0.74,319,0.557,331,0.348,332,0.316,359,0.624,364,3.939,371,1.914,372,2.192,373,1.854,382,2.864,387,1.446,388,2.967,404,1.612,406,1.977,408,0.98,410,1.748,411,1.606,412,1.206,415,1.99,418,1.104,420,0.607,451,1.697,518,3.225,527,5.182,548,1.104,553,2.038,557,4.172,570,2.102,571,1.401,573,1.908,599,5.335,600,2.348,602,3.225,611,2.686,614,2.906,616,1.58,617,3.314,619,2.368,620,2.834,626,2.916,628,2.348,650,3.121,676,2,708,2.864,710,3.233,726,1.891,728,2.217,733,1.748,734,1.551,739,1.825,740,2.915,741,1.328,742,2.575,743,1.484,744,1.843,745,1.328,746,3.129,747,2.108,748,3.314,749,2.032,754,2.482,768,3.076,776,3.554,779,2.755,801,2.916,815,2.915,816,1.484,822,1.843,825,1.697,829,1.697,830,2.038,837,2.686,869,4.772,905,4.393,930,4.77,938,3.225,959,2.467,973,1.104,977,1.843,979,1.58,1162,2.752,1358,2.916,1447,2.686,1461,3.225,1585,3.225,1799,2.038,1806,2.686,1819,3.225,1849,2.916,1887,3.225,1997,2.916,2190,2.038,2191,3.694,2192,3.225,2193,3.694,2194,4.003,2195,3.225,2196,4.585,2197,4.585,2198,4.585,2199,4.585,2200,4.585,2201,4.585,2202,4.585,2203,3.694,2204,5.213,2205,2.334,2206,3.694,2207,3.694,2208,3.694,2209,3.694,2210,2.334,2211,2.334,2212,2.334,2213,2.334,2214,2.334,2215,2.334,2216,2.334,2217,2.334,2218,3.694,2219,2.334,2220,2.334,2221,2.334,2222,3.694,2223,2.334,2224,2.334,2225,2.334,2226,2.334,2227,2.334,2228,2.334,2229,3.694,2230,2.334,2231,3.694,2232,5.213,2233,2.334,2234,2.334,2235,2.334,2236,2.334,2237,3.694,2238,2.334,2239,2.334,2240,4.585,2241,2.334,2242,2.334,2243,4.585,2244,4.585,2245,2.334,2246,2.334,2247,2.038,2248,2.334,2249,2.334,2250,3.694,2251,2.334,2252,2.334,2253,2.038,2254,2.334,2255,3.694]],["title/components/ViewEditComponent.html",[0,0.299,113,0.872]],["body/components/ViewEditComponent.html",[0,0.305,1,0.431,2,0.799,3,0.178,4,0.06,5,0.506,6,0.506,7,0.506,8,0.506,9,0.047,11,0.185,13,1.004,14,0.688,15,0.518,18,0.881,19,1.079,20,0.475,21,2.015,22,1.888,23,0.825,25,0.825,27,0.074,28,0.309,29,1.417,30,0.307,34,0.49,36,0.558,37,0.013,38,1.758,39,0.363,40,0.296,41,0.445,42,0.49,45,0.06,46,0.09,49,0.475,50,0.799,51,0.774,52,0.506,53,1.205,54,0.506,55,0.318,56,0.506,57,0.445,58,0.506,59,0.445,60,1.031,61,1.326,62,0.445,63,0.506,64,0.825,65,0.431,66,0.825,67,0.431,68,0.825,69,0.431,70,1.305,71,0.445,72,0.869,73,0.445,74,0.506,75,0.431,76,0.506,77,0.445,78,0.506,79,0.431,80,0.506,81,0.445,82,0.574,83,0.506,84,0.445,85,0.825,86,0.917,87,1.284,88,0.506,89,0.431,90,0.506,91,0.431,92,0.506,93,0.431,94,0.506,95,0.445,96,0.431,97,0.365,98,0.431,99,0.506,100,0.431,101,0.49,102,0.506,103,0.445,104,0.445,105,0.506,106,0.445,107,1.079,108,0.445,109,0.431,110,0.506,111,0.431,112,0.506,113,1.024,114,1.648,115,0.445,116,0.445,117,0.506,118,0.506,119,0.003,120,0.005,121,0.003,129,0.281,131,0.411,132,0.785,133,1.518,134,1.469,143,0.878,184,0.73,201,0.845,202,0.952,204,1.145,205,1.039,206,1.145,237,1.149,239,5.609,260,0.705,264,1.11,278,1.694,279,1.62,282,2.206,287,1.465,291,1.669,292,1.56,299,0.971,300,2.089,305,0.971,312,0.784,313,0.657,319,0.504,331,0.561,332,0.511,357,0.615,359,0.692,368,2.872,371,1.857,373,2.285,381,2.609,382,2.712,387,1.833,388,1.866,396,3.241,404,1.431,406,1.073,408,0.845,410,1.964,411,1.677,412,1.039,413,0.994,414,1.233,415,1.454,418,0.952,420,0.523,423,1.208,424,1.208,427,1.935,437,2.221,548,0.952,571,1.208,573,2.144,585,3.241,614,2.502,617,3.789,620,2.745,623,2.364,628,2.085,630,3.351,643,2.085,644,2.384,646,2.491,648,3.392,667,1.757,668,1.463,676,1.775,694,1.757,697,1.757,706,3.624,707,2.863,708,1.431,710,1.866,711,4.352,714,1.866,726,2.162,733,1.552,734,1.377,737,1.757,738,1.757,739,2.05,740,3.043,741,1.145,742,2.364,743,1.279,744,1.589,745,1.145,747,2.672,749,2.575,752,1.757,754,2.591,763,2.362,764,2.589,777,2.872,778,2.872,782,2.221,783,2.221,798,1.208,817,1.089,818,3.828,819,1.589,820,2.491,821,3.018,837,2.384,838,1.279,843,1.363,847,1.208,848,1.208,849,1.208,851,1.208,852,1.208,869,2.384,870,4.208,875,2.589,883,2.384,886,1.866,890,1.463,893,3.624,958,2.384,959,1.552,973,0.952,1002,1.757,1095,2.92,1128,1.279,1218,2.221,1368,1.363,1458,3.624,1467,1.757,1593,2.863,1734,1.589,1751,2.863,1810,2.384,1956,5.425,1957,5.425,1973,2.863,1975,2.863,1981,2.863,1993,2.589,2014,1.757,2042,2.863,2043,1.757,2044,1.757,2089,2.863,2247,1.757,2253,1.757,2256,6.736,2257,1.757,2258,4.15,2259,5.652,2260,4.15,2261,4.15,2262,4.15,2263,4.15,2264,4.15,2265,4.786,2266,3.279,2267,3.279,2268,3.279,2269,2.012,2270,3.279,2271,3.279,2272,2.012,2273,2.012,2274,2.012,2275,4.786,2276,3.279,2277,2.012,2278,3.279,2279,2.012,2280,2.012,2281,2.012,2282,3.279,2283,3.279,2284,2.012,2285,2.012,2286,3.279,2287,3.279,2288,2.012,2289,3.279,2290,2.012,2291,2.012,2292,2.012,2293,2.012,2294,5.217,2295,2.012,2296,2.012,2297,2.012,2298,2.012,2299,3.279,2300,2.012,2301,2.012,2302,2.012,2303,2.012,2304,3.279,2305,2.012,2306,2.012,2307,2.012,2308,2.012,2309,4.15,2310,2.012,2311,2.012,2312,2.012,2313,2.012,2314,2.012,2315,2.012,2316,2.012,2317,3.279,2318,2.012,2319,2.012,2320,2.012,2321,2.012,2322,3.279,2323,4.15,2324,3.279,2325,2.012,2326,2.012,2327,2.012,2328,2.012,2329,2.012,2330,3.279,2331,3.279,2332,2.012,2333,2.012,2334,2.012,2335,2.012]],["title/classes/WikiEntry.html",[46,0.181,287,1.247]],["body/classes/WikiEntry.html",[3,0.142,4,0.142,9,0.111,11,0.249,12,3.353,14,0.686,15,0.977,27,0.174,30,0.31,37,0.013,39,0.292,45,0.142,46,0.212,55,0.376,60,0.91,72,0.935,82,1.277,119,0.007,120,0.009,121,0.007,129,0.531,131,0.421,132,1.071,251,1.198,282,1.834,286,3.199,287,1.896,289,4.082,290,4.028,291,2.19,292,2.84,296,3.353,299,2.159,300,2.703,302,4.503,303,3.181,304,4.503,305,2.159,306,3.462,307,3.462,308,2.352,312,1.856,314,2.578,319,0.837,331,0.448,332,0.408,359,0.744,444,3.759,446,4.89,448,3.733,924,5.407,1392,4.157,1765,4.89,2336,6.597,2337,6.193,2338,4.762,2339,4.762,2340,4.762,2341,4.762,2342,4.762,2343,4.762]],["title/classes/WikiEntryBuilder.html",[46,0.181,314,2.206]],["body/classes/WikiEntryBuilder.html",[3,0.18,4,0.11,9,0.086,11,0.242,15,1.24,27,0.135,28,0.491,30,0.318,36,0.713,37,0.013,39,0.245,45,0.11,46,0.164,55,0.37,72,0.952,82,0.914,119,0.005,120,0.008,121,0.005,129,0.447,131,0.434,132,1.011,251,0.93,264,1.251,285,2.576,286,3.895,287,2.26,289,3.647,290,3.647,291,1.763,296,3.748,299,1.544,305,1.544,308,1.826,311,2.103,312,3.215,313,1.315,314,3.554,315,3.532,316,2.115,317,3.462,318,4.694,319,0.449,320,2.918,321,2.468,322,4.688,323,4.363,324,2.687,325,1.826,330,3.839,331,0.695,332,0.632,333,2.968,338,3.792,339,3.792,341,5.15,342,3.792,344,3.792,347,3.792,349,3.627,350,3.315,351,2.687,352,2.349,353,2.687,354,2.503,355,2.687,356,2.687,357,1.384,359,0.682,362,2.687,465,4.553,474,1.447,476,5.731,478,2.918,2344,6.583,2345,3.696,2346,3.696,2347,3.696,2348,3.696,2349,3.696,2350,3.696,2351,3.696,2352,3.696,2353,3.696,2354,3.696,2355,3.696,2356,3.696,2357,3.696,2358,3.696]],["title/components/WikiEntryEditorComponent.html",[0,0.299,115,0.901]],["body/components/WikiEntryEditorComponent.html",[0,0.428,1,0.739,2,1.211,3,0.103,4,0.103,5,0.87,6,0.87,7,0.87,8,0.87,9,0.08,11,0.103,14,0.468,15,1.266,16,2.829,18,1.335,19,1.514,20,0.815,21,2.125,22,1.992,23,1.251,25,1.251,27,0.126,28,0.468,29,1.886,30,0.281,34,0.842,35,2.189,36,0.447,37,0.013,38,1.292,39,0.331,40,0.508,41,0.764,42,0.842,45,0.103,46,0.154,49,0.815,50,1.211,51,1.173,52,0.87,53,1.603,54,0.87,55,0.318,56,0.87,57,0.764,58,0.87,59,0.764,60,0.508,61,1.698,62,0.764,63,0.87,64,1.251,65,0.739,66,1.251,67,0.739,68,1.251,69,0.739,70,0.785,71,0.764,72,0.946,73,0.764,74,0.87,75,0.739,76,0.87,77,0.764,78,0.87,79,0.739,80,0.87,81,0.764,82,0.871,83,0.87,84,0.764,85,1.251,86,0.764,87,0.842,88,0.87,89,0.739,90,0.87,91,0.739,92,0.87,93,0.739,94,0.87,95,0.764,96,0.739,97,0.626,98,0.739,99,0.87,100,0.739,101,0.842,102,0.87,103,0.764,104,0.764,105,0.87,106,0.764,107,0.956,108,0.764,109,0.739,110,0.87,111,0.739,112,0.87,113,0.739,114,1.211,115,1.408,116,0.764,117,0.87,118,0.87,119,0.005,120,0.007,121,0.005,129,0.426,131,0.316,132,0.437,133,0.928,134,0.898,174,2.197,196,5.264,201,2.087,264,1.17,287,2.065,289,2.876,290,2.876,299,1.472,312,1.937,314,1.871,316,1.768,317,1.508,319,0.82,325,2.456,332,0.426,357,1.091,371,1.465,372,2.113,474,2.125,482,4.63,509,2.692,536,3.615,542,2.258,547,2.779,725,3.615,793,2.728,813,4.569,826,1.967,827,2.513,973,1.636,1135,3.367,1248,2.728,1250,5.084,1251,4.341,1258,2.513,1313,3.017,1321,3.017,1357,3.615,1672,5.56,1685,4.341,1694,3.017,1696,5.56,1732,3.017,1734,3.925,1735,4.341,1736,3.017,1737,3.017,1765,3.925,2294,3.925,2359,6.321,2360,5.823,2361,5.823,2362,6.368,2363,5.823,2364,4.972,2365,3.456,2366,3.456,2367,3.456,2368,4.972,2369,4.972,2370,4.972,2371,3.456,2372,4.972,2373,4.972,2374,4.972,2375,4.972,2376,2.728,2377,3.456,2378,4.972,2379,4.972,2380,4.972,2381,4.972,2382,3.456,2383,3.456,2384,3.456,2385,3.456,2386,3.456,2387,4.972,2388,3.456,2389,3.456,2390,3.456,2391,3.456,2392,3.456,2393,3.456,2394,3.456,2395,3.456,2396,3.456,2397,3.456]],["title/components/WikiEntryViewComponent.html",[0,0.299,116,0.901]],["body/components/WikiEntryViewComponent.html",[0,0.401,1,0.66,2,1.115,3,0.092,4,0.092,5,0.776,6,0.776,7,0.776,8,0.776,9,0.072,11,0.18,14,0.431,15,1.194,18,1.228,19,1.418,20,0.727,21,2.106,22,1.974,23,1.151,25,1.151,27,0.113,28,0.431,29,1.787,30,0.287,34,1.329,36,0.49,37,0.013,38,1.755,39,0.345,40,0.453,41,0.682,42,0.751,45,0.092,46,0.137,49,0.727,50,1.115,51,1.079,52,0.776,53,1.518,54,0.776,55,0.303,56,0.776,57,0.682,58,0.776,59,0.682,60,0.453,61,1.622,62,0.682,63,0.776,64,1.151,65,0.66,66,1.151,67,0.66,68,1.151,69,0.66,70,1.194,71,0.682,72,0.954,73,0.682,74,0.776,75,0.66,76,0.776,77,0.682,78,0.776,79,0.66,80,0.776,81,0.682,82,0.801,83,0.776,84,0.682,85,1.151,86,1.206,87,1.57,88,0.776,89,0.66,90,0.776,91,0.66,92,0.776,93,0.66,94,0.776,95,0.682,96,0.66,97,0.559,98,0.66,99,0.776,100,0.66,101,0.751,102,0.776,103,0.682,104,0.682,105,0.776,106,0.682,107,0.99,108,0.682,109,0.66,110,0.776,111,0.66,112,0.776,113,0.66,114,1.749,115,0.682,116,1.334,117,0.776,118,0.776,119,0.005,120,0.007,121,0.005,131,0.35,132,0.578,143,1.346,184,1.119,197,5.788,201,1.295,202,1.459,204,1.755,205,1.593,206,1.755,258,1.996,260,1.08,264,1.549,279,2.26,282,1.787,287,2.066,289,2.26,300,2.946,319,0.663,331,0.29,332,0.264,359,0.594,364,4.307,371,1.372,381,3.013,387,1.991,400,4.36,413,1.523,414,1.719,415,1.08,420,0.802,506,3.621,509,2.477,542,2.078,547,2.812,599,3.612,605,4.908,614,3.078,619,2.363,620,2.537,630,2.908,650,1.593,668,4.908,726,2.189,742,2.26,763,1.755,777,3.621,778,3.621,779,3.078,782,3.098,798,1.851,815,1.96,817,1.67,825,2.242,838,1.96,843,2.088,847,1.851,848,1.851,849,1.851,851,1.851,852,1.851,869,3.326,922,1.593,973,1.459,1059,3.994,1095,2.363,1096,3.612,1128,1.96,1134,2.088,1156,2.242,1273,3.612,1395,3.994,1429,4.763,1530,3.326,1818,3.994,2104,2.435,2192,3.994,2194,4.761,2195,3.994,2398,6.401,2399,2.692,2400,4.575,2401,4.575,2402,4.575,2403,4.575,2404,4.575,2405,5.453,2406,5.453,2407,4.575,2408,4.763,2409,5.267,2410,3.084,2411,3.084,2412,3.994,2413,3.084,2414,3.084,2415,3.084,2416,3.084,2417,5.453,2418,3.084,2419,3.084,2420,3.084,2421,3.084,2422,3.084,2423,3.084]],["title/classes/Wrapper.html",[46,0.181,1131,2.759]],["body/classes/Wrapper.html",[3,0.171,4,0.171,9,0.133,11,0.208,27,0.21,30,0.279,37,0.013,45,0.171,46,0.256,55,0.27,87,1.698,96,1.229,97,1.041,119,0.009,120,0.01,121,0.009,129,0.597,131,0.379,134,2.203,251,1.446,285,2.838,319,0.912,325,2.838,330,2.838,331,0.541,332,0.597,341,5.08,359,0.566,387,1.594,397,3.6,448,2.838,493,5.283,970,5.017,1131,5.567,1350,5.503,1583,5.017,2412,5.017,2424,5.017,2425,5.746,2426,5.746,2427,5.746,2428,5.746,2429,5.746,2430,5.746,2431,5.746,2432,5.746,2433,5.746,2434,6.97,2435,6.97,2436,5.746]],["title/coverage.html",[2437,4.873]],["body/coverage.html",[0,0.617,1,0.718,9,0.078,10,2.932,14,0.539,37,0.013,41,0.742,43,2.274,46,0.373,57,0.742,59,0.742,60,0.493,62,0.742,65,0.718,67,0.718,69,0.718,70,0.904,71,0.742,72,0.78,73,0.742,75,0.718,77,0.742,79,0.718,81,0.742,84,0.742,86,0.742,89,0.718,91,0.718,93,0.718,95,0.742,97,0.882,98,0.718,100,0.718,103,0.742,104,0.742,106,0.742,107,0.69,108,0.742,109,0.718,111,0.718,113,0.718,115,0.742,116,0.742,119,0.005,120,0.007,121,0.005,122,2.932,131,0.182,150,2.274,151,2.274,164,2.441,170,2.441,177,2.441,181,3.642,187,2.441,190,2.651,193,2.651,196,2.441,197,2.651,205,1.734,213,2.651,215,2.441,232,3.54,239,2.441,242,2.651,244,2.441,247,2.441,250,2.651,252,2.932,261,2.441,282,0.994,283,2.932,287,1.028,292,1.262,309,2.274,310,2.932,311,4.084,314,1.818,323,1.911,363,2.49,364,2.015,366,4.165,367,2.932,373,1.357,378,1.818,381,1.41,382,1.465,410,1.589,411,2.337,414,1.262,443,3.844,444,3.844,455,2.932,474,0.931,479,1.818,480,2.932,497,2.441,504,2.932,520,2.015,521,2.932,531,2.932,532,4.241,557,2.135,558,2.932,559,2.135,573,1.734,581,2.932,582,3.844,610,2.932,634,2.932,669,2.441,670,2.932,704,2.932,711,2.274,739,1.659,743,2.135,765,2.932,766,2.932,776,1.818,818,2.274,820,2.015,826,1.911,870,2.274,871,2.932,886,1.911,887,2.274,904,2.932,1003,2.932,1028,2.932,1029,2.932,1038,2.932,1039,2.932,1046,2.932,1063,2.932,1084,2.274,1086,2.932,1092,2.274,1131,2.274,1182,2.651,1184,2.932,1185,2.932,1208,2.135,1209,2.932,1230,2.135,1237,3.844,1238,2.932,1248,3.844,1274,3.297,1276,2.932,1289,2.932,1332,2.932,1333,2.932,1384,2.932,1399,2.932,1404,2.932,1418,2.932,1439,2.932,1440,2.932,1474,2.932,1475,2.932,1481,2.932,1482,2.932,1501,2.932,1540,2.932,1541,3.844,1550,4.241,1551,2.932,1566,2.932,1578,2.932,1608,2.932,1611,2.932,1639,2.932,1652,2.932,1738,2.932,1749,2.932,1787,2.932,1788,2.932,1803,2.932,1812,2.932,1836,2.932,1842,2.932,1843,2.932,1846,5.824,1853,3.844,1854,2.932,1866,2.932,1921,2.932,1922,2.932,1936,2.932,1947,4.165,1993,2.651,2001,2.651,2058,2.932,2059,2.932,2164,2.932,2190,2.932,2256,2.932,2257,2.932,2336,2.932,2344,2.932,2359,2.932,2376,2.651,2398,2.932,2399,2.932,2424,2.932,2437,2.932,2438,2.932,2439,3.358,2440,3.358,2441,8.659,2442,7.493,2443,7.351,2444,5.729,2445,7.177,2446,3.358,2447,3.358,2448,6.283,2449,6.671,2450,5.729,2451,3.358,2452,3.358,2453,2.932,2454,2.932,2455,4.869,2456,7.177,2457,7.493,2458,4.869,2459,6.283,2460,6.283,2461,5.729,2462,4.869,2463,3.358,2464,2.932,2465,4.869,2466,3.358,2467,3.358,2468,3.358,2469,3.358,2470,3.358,2471,2.932,2472,4.251,2473,2.932,2474,4.251,2475,2.932,2476,2.932,2477,3.358]],["title/dependencies.html",[141,3.322,2478,2.962]],["body/dependencies.html",[37,0.013,40,0.848,119,0.009,120,0.01,121,0.009,141,3.909,143,3.05,158,6.102,159,4.733,174,3.669,201,2.423,202,2.732,210,5.04,211,5.04,249,5.04,260,2.022,409,3.285,494,4.197,1044,5.04,1190,3.669,1279,5.04,1367,4.197,1368,3.909,1369,4.733,1370,4.197,2095,5.04,2096,5.04,2479,5.772,2480,8.301,2481,5.772,2482,6.989,2483,5.772,2484,5.772,2485,5.772,2486,5.772,2487,5.772,2488,5.772,2489,5.772,2490,5.772,2491,5.772,2492,5.772,2493,5.772,2494,5.772,2495,5.04,2496,5.04,2497,5.772,2498,5.772,2499,5.772,2500,5.772,2501,5.772,2502,5.772,2503,5.772,2504,5.772,2505,5.772,2506,5.772,2507,5.772,2508,5.772,2509,5.772,2510,5.772,2511,5.772]],["title/miscellaneous/enumerations.html",[2512,2.157,2513,4.283]],["body/miscellaneous/enumerations.html",[27,0.24,37,0.012,70,1.19,119,0.01,120,0.011,121,0.01,134,1.96,327,3.29,391,4.082,2512,4.173,2513,5.731,2514,6.564,2515,6.564]],["title/miscellaneous/functions.html",[505,3.873,2512,2.157]],["body/miscellaneous/functions.html",[11,0.192,27,0.235,36,0.578,37,0.012,55,0.303,119,0.01,120,0.011,121,0.01,132,0.994,331,0.605,332,0.551,505,5.076,818,5.046,820,4.721,821,4.675,1994,5.614,2453,5.614,2454,6.505,2512,4.088,2516,6.43,2517,6.43,2518,6.43,2519,6.43]],["title/index.html",[27,0.124,1824,2.678,2520,3.392]],["body/index.html",[13,1.531,14,0.663,15,1.172,22,1.508,37,0.011,48,4.366,119,0.007,120,0.009,121,0.007,126,2.271,135,5.873,137,3.494,141,4.329,154,3.387,201,2.958,270,3.948,317,3.525,391,2.708,406,2.306,461,3.179,474,1.387,482,3.636,493,4.329,506,3.001,620,2.403,708,2.182,714,3.638,729,3.001,734,2.1,808,6.151,820,3.001,868,4.229,906,5.047,930,3.948,949,3.179,1012,4.366,1015,4.366,1017,4.366,1022,4.366,1052,3.948,1081,4.366,1100,3.387,1106,3.387,1111,3.948,1212,3.636,1218,3.387,1348,4.366,1447,4.648,1449,4.366,1808,4.366,1948,4.366,2170,4.366,2294,3.948,2408,5.562,2409,4.366,2438,6.699,2478,4.366,2495,7.179,2496,5.581,2521,5.001,2522,5.001,2523,5.001,2524,6.392,2525,5.001,2526,5.001,2527,6.392,2528,7.425,2529,5.001,2530,5.001,2531,8.449,2532,7.673,2533,5.001,2534,5.001,2535,5.001,2536,5.001,2537,5.001,2538,5.001,2539,5.001,2540,5.001,2541,5.001,2542,5.001,2543,5.001,2544,5.001,2545,5.001,2546,4.366,2547,6.392,2548,5.001,2549,5.001,2550,7.045,2551,5.001,2552,5.001,2553,5.001,2554,5.001,2555,5.001,2556,5.001,2557,5.001,2558,5.001,2559,5.581,2560,5.001,2561,5.001,2562,5.001,2563,5.001,2564,5.001,2565,5.581,2566,6.392,2567,5.001]],["title/modules.html",[140,3.779]],["body/modules.html",[37,0.011,119,0.01,120,0.011,121,0.01,139,4.814,140,4.484,152,4.484,159,4.484,1369,4.484,1530,4.814,2568,6.621,2569,7.577,2570,6.621]],["title/overview.html",[2571,4.873]],["body/overview.html",[1,1.466,2,1.15,37,0.013,41,1.515,49,1.113,57,1.74,59,1.515,62,1.515,65,1.554,67,1.466,69,1.466,71,1.515,73,1.515,75,1.466,77,1.515,79,1.466,81,1.515,84,1.515,86,1.515,89,1.466,91,1.466,93,1.466,95,1.515,96,1.01,98,1.466,100,1.466,103,1.515,106,1.515,108,1.515,109,1.466,111,1.466,113,1.466,115,1.515,116,1.515,119,0.007,120,0.009,121,0.007,138,3.432,139,6.36,140,3.196,141,3.196,142,4.121,143,2.06,144,4.121,145,3.726,146,4.121,147,4.121,148,4.121,149,4.121,150,4.642,151,4.642,152,4.642,153,5.376,154,3.196,251,1.188,258,2.06,365,2.332,454,3.196,963,2.556,1182,3.726,1275,3.726,1331,4.862,2571,4.121,2572,4.72,2573,4.72,2574,4.72]],["title/routes.html",[258,2.435]],["body/routes.html",[37,0.011,119,0.01,120,0.011,121,0.01,258,2.936]],["title/miscellaneous/variables.html",[925,3.873,2512,2.157]],["body/miscellaneous/variables.html",[9,0.154,11,0.216,14,0.499,15,0.836,16,3.013,27,0.194,37,0.013,82,1.415,119,0.008,120,0.01,121,0.008,125,3.366,131,0.412,133,2.036,134,1.971,201,2.223,237,1.855,254,3.586,303,2.892,313,1.328,317,2.892,400,3.013,461,4.599,482,3.85,526,3.366,537,4.623,600,3.366,649,5.232,747,2.679,749,2.063,767,3.85,906,5.232,925,4.181,1074,4.623,1450,4.623,1477,4.623,1532,4.623,1642,4.623,1774,4.623,1849,5.985,2034,4.181,2054,4.623,2086,4.623,2376,5.232,2408,4.181,2464,4.623,2471,4.623,2472,6.815,2473,4.623,2474,4.623,2475,6.316,2476,5.786,2512,3.366,2546,6.316,2559,4.623,2565,4.623,2575,6.627,2576,5.295,2577,5.295,2578,5.295,2579,5.295,2580,5.295,2581,5.295,2582,5.295,2583,5.295,2584,5.295,2585,5.295,2586,5.295,2587,5.295,2588,5.295,2589,5.295,2590,5.295,2591,5.295,2592,5.295,2593,5.295,2594,5.295,2595,6.627,2596,5.295,2597,5.295,2598,5.295,2599,5.295,2600,5.295,2601,5.295,2602,5.295,2603,5.295,2604,5.295,2605,5.295,2606,5.295,2607,5.295,2608,5.295,2609,5.295,2610,5.295,2611,5.295,2612,5.295,2613,7.234,2614,5.295,2615,5.295,2616,5.295]]],"invertedIndex":[["",{"_index":37,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"classes/Artifact.html":{},"classes/ArtifactBuilder.html":{},"injectables/ArtifactService.html":{},"classes/BasicEntry.html":{},"classes/BasicEntryBuilder.html":{},"classes/BasicUserInfo.html":{},"classes/Collection.html":{},"classes/CollectionBuilder.html":{},"components/CollectionListComponent.html":{},"injectables/CollectionService.html":{},"components/ConfirmationModalComponent.html":{},"components/CreateComponent.html":{},"classes/Edit.html":{},"classes/EditBuilder.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"injectables/EditService.html":{},"components/EntryListComponent.html":{},"components/FooterComponent.html":{},"injectables/GetByCategoryService.html":{},"classes/HashHelper.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardService.html":{},"injectables/LoginService.html":{},"components/MarkdownDisplayComponent.html":{},"components/MarkdownEditorComponent.html":{},"pipes/MarkedPipe.html":{},"classes/Mocker.html":{},"components/ModalMessageComponent.html":{},"classes/Museum.html":{},"classes/MuseumBuilder.html":{},"components/MuseumListComponent.html":{},"injectables/MuseumService.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"injectables/PreviousRouteService.html":{},"classes/ProjectConfig.html":{},"injectables/ProjectConfigService.html":{},"classes/ProtoArtifact.html":{},"classes/ProtoCollection.html":{},"classes/ProtoEdit.html":{},"classes/ProtoMuseum.html":{},"classes/ProtoUser.html":{},"classes/PrototypeBuilder.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordModalComponent.html":{},"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{},"classes/ServerCannotConnect.html":{},"classes/ServerConfig.html":{},"injectables/ServerConfigService.html":{},"classes/ServerResponse.html":{},"classes/Tag.html":{},"components/TagSelectionComponent.html":{},"pipes/TextLimitPipe.html":{},"classes/User.html":{},"components/UserEditListComponent.html":{},"injectables/UserInfoService.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"classes/WikiEntry.html":{},"classes/WikiEntryBuilder.html":{},"components/WikiEntryEditorComponent.html":{},"components/WikiEntryViewComponent.html":{},"classes/Wrapper.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":551,"title":{},"body":{"components/CollectionListComponent.html":{},"components/EditOrCreateComponent.html":{},"components/EntryListComponent.html":{},"pipes/MarkedPipe.html":{},"components/ModalMessageComponent.html":{},"components/UserEditListComponent.html":{},"injectables/UserInfoService.html":{},"components/UserMuseumListComponent.html":{}}}],["0.10.2",{"_index":2511,"title":{},"body":{"dependencies.html":{}}}],["0.6.1",{"_index":2488,"title":{},"body":{"dependencies.html":{}}}],["0.8.0",{"_index":2500,"title":{},"body":{"dependencies.html":{}}}],["0.8.2",{"_index":2501,"title":{},"body":{"dependencies.html":{}}}],["1",{"_index":963,"title":{},"body":{"components/EntryListComponent.html":{},"components/FooterComponent.html":{},"classes/Mocker.html":{},"components/NavigationBarComponent.html":{},"components/RegistrationComponent.html":{},"pipes/TextLimitPipe.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"overview.html":{}}}],["1.0.1",{"_index":2504,"title":{},"body":{"dependencies.html":{}}}],["1.11.2",{"_index":2509,"title":{},"body":{"dependencies.html":{}}}],["1.16.1",{"_index":2506,"title":{},"body":{"dependencies.html":{}}}],["1.2.28",{"_index":2491,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":2442,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":454,"title":{},"body":{"classes/BasicEntry.html":{},"classes/BasicEntryBuilder.html":{},"pipes/TextLimitPipe.html":{},"injectables/UserInfoService.html":{},"overview.html":{}}}],["10/10",{"_index":2448,"title":{},"body":{"coverage.html":{}}}],["10/11",{"_index":2463,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":2441,"title":{},"body":{"coverage.html":{}}}],["1000",{"_index":1145,"title":{},"body":{"components/LoginComponent.html":{},"classes/Mocker.html":{},"components/RegistrationComponent.html":{}}}],["12",{"_index":967,"title":{},"body":{"components/EntryListComponent.html":{}}}],["12/12",{"_index":2461,"title":{},"body":{"coverage.html":{}}}],["128",{"_index":490,"title":{},"body":{"classes/BasicUserInfo.html":{}}}],["13/13",{"_index":2444,"title":{},"body":{"coverage.html":{}}}],["14.2.1",{"_index":2497,"title":{},"body":{"dependencies.html":{}}}],["14/15",{"_index":2447,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":2574,"title":{},"body":{"overview.html":{}}}],["15/15",{"_index":2458,"title":{},"body":{"coverage.html":{}}}],["16/16",{"_index":2450,"title":{},"body":{"coverage.html":{}}}],["17/17",{"_index":2467,"title":{},"body":{"coverage.html":{}}}],["19/20",{"_index":2466,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":1331,"title":{},"body":{"classes/Mocker.html":{},"components/RegistrationComponent.html":{},"overview.html":{}}}],["2/2",{"_index":2443,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1678,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["20/20",{"_index":2470,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":996,"title":{},"body":{"components/EntryListComponent.html":{}}}],["2020",{"_index":1022,"title":{},"body":{"components/FooterComponent.html":{},"index.html":{}}}],["22/23",{"_index":2469,"title":{},"body":{"coverage.html":{}}}],["29",{"_index":2573,"title":{},"body":{"overview.html":{}}}],["3.0.4",{"_index":2502,"title":{},"body":{"dependencies.html":{}}}],["3.5.1",{"_index":2499,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":2449,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":2572,"title":{},"body":{"overview.html":{}}}],["3000",{"_index":842,"title":{},"body":{"components/EditOrCreateComponent.html":{}}}],["3px",{"_index":1002,"title":{},"body":{"components/EntryListComponent.html":{},"components/ViewEditComponent.html":{}}}],["4.4.1",{"_index":2494,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":2456,"title":{},"body":{"coverage.html":{}}}],["401",{"_index":2107,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["5.13.0",{"_index":2492,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":2460,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":1682,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["6.1.0",{"_index":2493,"title":{},"body":{"dependencies.html":{}}}],["6.5.5",{"_index":2507,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":2445,"title":{},"body":{"coverage.html":{}}}],["6/7",{"_index":2452,"title":{},"body":{"coverage.html":{}}}],["7/7",{"_index":2457,"title":{},"body":{"coverage.html":{}}}],["700mb",{"_index":2536,"title":{},"body":{"index.html":{}}}],["8/8",{"_index":2455,"title":{},"body":{"coverage.html":{}}}],["85",{"_index":2451,"title":{},"body":{"coverage.html":{}}}],["8601",{"_index":658,"title":{},"body":{"classes/Edit.html":{}}}],["9.0.7",{"_index":2480,"title":{},"body":{"dependencies.html":{}}}],["9.1.4",{"_index":2485,"title":{},"body":{"dependencies.html":{}}}],["9.2.2",{"_index":2482,"title":{},"body":{"dependencies.html":{}}}],["9/10",{"_index":2468,"title":{},"body":{"coverage.html":{}}}],["9/9",{"_index":2459,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":2462,"title":{},"body":{"coverage.html":{}}}],["93",{"_index":2446,"title":{},"body":{"coverage.html":{}}}],["95",{"_index":2465,"title":{},"body":{"coverage.html":{}}}],["__two",{"_index":2611,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_max_password_length",{"_index":1656,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["_max_username_length",{"_index":1657,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["_min_password_length",{"_index":1658,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["_min_username_length",{"_index":1659,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["_underscores_",{"_index":2608,"title":{},"body":{"miscellaneous/variables.html":{}}}],["about'},{'name",{"_index":56,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/CollectionListComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/CreateComponent.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"components/EntryListComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownDisplayComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/ModalMessageComponent.html":{},"components/MuseumListComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordModalComponent.html":{},"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{},"components/TagSelectionComponent.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryEditorComponent.html":{},"components/WikiEntryViewComponent.html":{}}}],["about.component.css",{"_index":24,"title":{},"body":{"components/AboutComponent.html":{}}}],["about.component.html",{"_index":26,"title":{},"body":{"components/AboutComponent.html":{}}}],["aboutcomponent",{"_index":1,"title":{"components/AboutComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CollectionListComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/CreateComponent.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"components/EntryListComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownDisplayComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/ModalMessageComponent.html":{},"components/MuseumListComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordModalComponent.html":{},"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{},"components/TagSelectionComponent.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryEditorComponent.html":{},"components/WikiEntryViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["above",{"_index":1521,"title":{},"body":{"classes/ProjectConfig.html":{}}}],["abstractcontrol",{"_index":1706,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["access",{"_index":1490,"title":{},"body":{"injectables/PreviousRouteService.html":{},"injectables/UserInfoService.html":{}}}],["accessed",{"_index":1484,"title":{},"body":{"injectables/PreviousRouteService.html":{}}}],["accessible",{"_index":595,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["accessing",{"_index":1098,"title":{},"body":{"components/LoginComponent.html":{},"guards/LoginGuardService.html":{}}}],["accessors",{"_index":1486,"title":{},"body":{"injectables/PreviousRouteService.html":{},"components/RegistrationComponent.html":{}}}],["according",{"_index":1829,"title":{},"body":{"classes/ServerConfig.html":{}}}],["account",{"_index":1228,"title":{},"body":{"injectables/LoginService.html":{},"components/RegistrationComponent.html":{},"injectables/UserInfoService.html":{},"components/UserProfileComponent.html":{}}}],["act",{"_index":2158,"title":{},"body":{"components/UserMuseumListComponent.html":{}}}],["action",{"_index":585,"title":{},"body":{"components/ConfirmationModalComponent.html":{},"injectables/EditService.html":{},"components/UserEditListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewEditComponent.html":{}}}],["action).then",{"_index":2044,"title":{},"body":{"components/UserEditListComponent.html":{},"components/ViewEditComponent.html":{}}}],["actions",{"_index":1210,"title":{},"body":{"injectables/LoginService.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{}}}],["actionslist",{"_index":1613,"title":{},"body":{"classes/ProtoUser.html":{},"classes/User.html":{}}}],["activated",{"_index":1197,"title":{},"body":{"guards/LoginGuardService.html":{}}}],["activatedroute",{"_index":617,"title":{},"body":{"components/CreateComponent.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"components/SearchInCategoryComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{}}}],["activatedroutesnapshot",{"_index":1193,"title":{},"body":{"guards/LoginGuardService.html":{},"injectables/PreviousRouteService.html":{}}}],["activeurl",{"_index":1813,"title":{},"body":{"classes/ServerConfig.html":{}}}],["activities",{"_index":1513,"title":{},"body":{"classes/ProjectConfig.html":{},"components/TagSelectionComponent.html":{}}}],["actual",{"_index":1514,"title":{},"body":{"classes/ProjectConfig.html":{},"classes/ServerConfig.html":{}}}],["actual_component",{"_index":118,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/CollectionListComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/CreateComponent.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"components/EntryListComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownDisplayComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/ModalMessageComponent.html":{},"components/MuseumListComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordModalComponent.html":{},"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{},"components/TagSelectionComponent.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryEditorComponent.html":{},"components/WikiEntryViewComponent.html":{}}}],["ad",{"_index":2430,"title":{},"body":{"classes/Wrapper.html":{}}}],["add",{"_index":431,"title":{},"body":{"injectables/ArtifactService.html":{},"injectables/CollectionService.html":{},"classes/Edit.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/MuseumService.html":{}}}],["add/edit",{"_index":393,"title":{},"body":{"injectables/ArtifactService.html":{},"injectables/CollectionService.html":{},"injectables/MuseumService.html":{}}}],["addartifact",{"_index":374,"title":{},"body":{"injectables/ArtifactService.html":{}}}],["addartifact(artifact",{"_index":390,"title":{},"body":{"injectables/ArtifactService.html":{}}}],["addcollection",{"_index":560,"title":{},"body":{"injectables/CollectionService.html":{}}}],["addcollection(collection",{"_index":564,"title":{},"body":{"injectables/CollectionService.html":{}}}],["added",{"_index":1426,"title":{},"body":{"injectables/MuseumService.html":{}}}],["added/edited",{"_index":394,"title":{},"body":{"injectables/ArtifactService.html":{},"injectables/CollectionService.html":{}}}],["addition",{"_index":667,"title":{},"body":{"classes/Edit.html":{},"components/ViewEditComponent.html":{}}}],["addition/deletion/edit",{"_index":1593,"title":{},"body":{"classes/ProtoEdit.html":{},"components/ViewEditComponent.html":{}}}],["addmuseum",{"_index":1419,"title":{},"body":{"injectables/MuseumService.html":{}}}],["addmuseum(museum",{"_index":1424,"title":{},"body":{"injectables/MuseumService.html":{}}}],["address",{"_index":1733,"title":{},"body":{"components/RegistrationComponent.html":{},"classes/User.html":{},"components/UserProfileComponent.html":{}}}],["adjust",{"_index":954,"title":{},"body":{"components/EntryListComponent.html":{},"components/LoginComponent.html":{},"components/ModalMessageComponent.html":{}}}],["adjustnavbarbasedonloginstatus",{"_index":1446,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["adjustnavbarbasedonloginstatus(loggedin",{"_index":1456,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["affect",{"_index":1118,"title":{},"body":{"components/LoginComponent.html":{},"components/UserEditListComponent.html":{}}}],["again",{"_index":1133,"title":{},"body":{"components/LoginComponent.html":{},"components/UserEditListComponent.html":{}}}],["against",{"_index":1826,"title":{},"body":{"classes/ServerConfig.html":{}}}],["agnostic",{"_index":2401,"title":{},"body":{"components/WikiEntryViewComponent.html":{}}}],["allow",{"_index":2596,"title":{},"body":{"miscellaneous/variables.html":{}}}],["allowed",{"_index":1273,"title":{},"body":{"components/MarkdownEditorComponent.html":{},"components/TagSelectionComponent.html":{},"components/WikiEntryViewComponent.html":{}}}],["allowedit",{"_index":1876,"title":{},"body":{"components/TagSelectionComponent.html":{}}}],["allowing",{"_index":2077,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["allows",{"_index":767,"title":{},"body":{"components/EditOrCreateComponent.html":{},"components/SearchComponent.html":{},"components/TagSelectionComponent.html":{},"miscellaneous/variables.html":{}}}],["already",{"_index":1094,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/TagSelectionComponent.html":{}}}],["always",{"_index":1453,"title":{},"body":{"components/NavigationBarComponent.html":{},"classes/ProjectConfig.html":{},"components/TagSelectionComponent.html":{}}}],["amount",{"_index":2534,"title":{},"body":{"index.html":{}}}],["analyze",{"_index":622,"title":{},"body":{"components/CreateComponent.html":{},"components/EditComponent.html":{},"components/SearchInCategoryComponent.html":{}}}],["analyzed",{"_index":2207,"title":{},"body":{"components/ViewComponent.html":{}}}],["angular",{"_index":2565,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["angular.json",{"_index":2590,"title":{},"body":{"miscellaneous/variables.html":{}}}],["angular/animations",{"_index":2479,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":2481,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":249,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":184,"title":{},"body":{"modules/AppModule.html":{},"injectables/ArtifactService.html":{},"injectables/CollectionService.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"injectables/EditService.html":{},"injectables/GetByCategoryService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/ModalMessageComponent.html":{},"injectables/MuseumService.html":{},"components/ResetPasswordModalComponent.html":{},"components/TagSelectionComponent.html":{},"components/UserEditListComponent.html":{},"injectables/UserInfoService.html":{},"components/UserMuseumListComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryViewComponent.html":{}}}],["angular/compiler",{"_index":2483,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":40,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/ArtifactService.html":{},"components/CollectionListComponent.html":{},"injectables/CollectionService.html":{},"components/ConfirmationModalComponent.html":{},"components/CreateComponent.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"injectables/EditService.html":{},"components/EntryListComponent.html":{},"components/FooterComponent.html":{},"injectables/GetByCategoryService.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardService.html":{},"injectables/LoginService.html":{},"components/MarkdownDisplayComponent.html":{},"components/MarkdownEditorComponent.html":{},"pipes/MarkedPipe.html":{},"components/ModalMessageComponent.html":{},"components/MuseumListComponent.html":{},"injectables/MuseumService.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"injectables/PreviousRouteService.html":{},"injectables/ProjectConfigService.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordModalComponent.html":{},"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{},"injectables/ServerConfigService.html":{},"components/TagSelectionComponent.html":{},"pipes/TextLimitPipe.html":{},"components/UserEditListComponent.html":{},"injectables/UserInfoService.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryEditorComponent.html":{},"components/WikiEntryViewComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":174,"title":{},"body":{"modules/AppModule.html":{},"components/MarkdownEditorComponent.html":{},"components/RegistrationComponent.html":{},"components/SearchComponent.html":{},"components/WikiEntryEditorComponent.html":{},"dependencies.html":{}}}],["angular/localize",{"_index":2484,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":2486,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":224,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/card",{"_index":234,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/checkbox",{"_index":220,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/grid",{"_index":236,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/input",{"_index":227,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/select",{"_index":229,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/toolbar",{"_index":222,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/platform",{"_index":158,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":260,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/CreateComponent.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"components/EntryListComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardService.html":{},"components/MuseumListComponent.html":{},"components/NavigationBarComponent.html":{},"injectables/PreviousRouteService.html":{},"components/RegistrationComponent.html":{},"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryViewComponent.html":{},"dependencies.html":{}}}],["another",{"_index":349,"title":{},"body":{"classes/ArtifactBuilder.html":{},"classes/BasicEntryBuilder.html":{},"classes/CollectionBuilder.html":{},"components/LoginComponent.html":{},"classes/MuseumBuilder.html":{},"injectables/UserInfoService.html":{},"classes/WikiEntryBuilder.html":{}}}],["anyone",{"_index":1059,"title":{},"body":{"components/HomeComponent.html":{},"components/WikiEntryViewComponent.html":{}}}],["anything",{"_index":1358,"title":{},"body":{"components/ModalMessageComponent.html":{},"components/UserMuseumListComponent.html":{},"components/ViewComponent.html":{}}}],["api",{"_index":878,"title":{},"body":{"injectables/EditService.html":{},"components/ResetPasswordModalComponent.html":{}}}],["apis",{"_index":386,"title":{},"body":{"injectables/ArtifactService.html":{},"injectables/CollectionService.html":{}}}],["app",{"_index":22,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CollectionListComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/CreateComponent.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"components/EntryListComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownDisplayComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/ModalMessageComponent.html":{},"components/MuseumListComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordModalComponent.html":{},"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{},"components/TagSelectionComponent.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryEditorComponent.html":{},"components/WikiEntryViewComponent.html":{},"index.html":{}}}],["app.component.css",{"_index":127,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":128,"title":{},"body":{"components/AppComponent.html":{}}}],["app/app.component",{"_index":162,"title":{},"body":{"modules/AppModule.html":{}}}],["appcomponent",{"_index":57,"title":{"components/AppComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CollectionListComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/CreateComponent.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"components/EntryListComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownDisplayComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/ModalMessageComponent.html":{},"components/MuseumListComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordModalComponent.html":{},"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{},"components/TagSelectionComponent.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryEditorComponent.html":{},"components/WikiEntryViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appear",{"_index":2409,"title":{},"body":{"components/WikiEntryViewComponent.html":{},"index.html":{}}}],["appears",{"_index":997,"title":{},"body":{"components/EntryListComponent.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{}}}],["application",{"_index":1047,"title":{},"body":{"components/HomeComponent.html":{}}}],["appmodule",{"_index":139,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apppage",{"_index":250,"title":{"classes/AppPage.html":{}},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["appropriate",{"_index":1831,"title":{},"body":{"classes/ServerConfig.html":{}}}],["approutes",{"_index":265,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["approutingmodule",{"_index":152,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["approval",{"_index":675,"title":{},"body":{"classes/EditBuilder.html":{}}}],["approvalstatus",{"_index":639,"title":{},"body":{"classes/Edit.html":{},"classes/EditBuilder.html":{},"classes/ProtoEdit.html":{},"components/UserEditListComponent.html":{}}}],["approvalstatus(protoedit.approvalstatus",{"_index":1604,"title":{},"body":{"classes/ProtoEdit.html":{}}}],["approvalstatus(value",{"_index":673,"title":{},"body":{"classes/EditBuilder.html":{}}}],["approve",{"_index":1956,"title":{},"body":{"components/UserEditListComponent.html":{},"components/ViewEditComponent.html":{}}}],["approve(entry",{"_index":1973,"title":{},"body":{"components/UserEditListComponent.html":{},"components/ViewEditComponent.html":{}}}],["approve/deny",{"_index":2172,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["approved",{"_index":643,"title":{},"body":{"classes/Edit.html":{},"injectables/EditService.html":{},"components/HomeComponent.html":{},"classes/Mocker.html":{},"components/UserEditListComponent.html":{},"components/ViewEditComponent.html":{}}}],["args",{"_index":1282,"title":{},"body":{"pipes/MarkedPipe.html":{},"pipes/TextLimitPipe.html":{}}}],["args.length",{"_index":1932,"title":{},"body":{"pipes/TextLimitPipe.html":{}}}],["args[1",{"_index":1933,"title":{},"body":{"pipes/TextLimitPipe.html":{}}}],["argument",{"_index":469,"title":{},"body":{"classes/BasicEntryBuilder.html":{},"pipes/TextLimitPipe.html":{}}}],["around",{"_index":2426,"title":{},"body":{"classes/Wrapper.html":{}}}],["array",{"_index":526,"title":{},"body":{"classes/CollectionBuilder.html":{},"components/EntryListComponent.html":{},"classes/Mocker.html":{},"classes/Museum.html":{},"components/UserMuseumListComponent.html":{},"miscellaneous/variables.html":{}}}],["array(editsize",{"_index":2129,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["array.length",{"_index":1315,"title":{},"body":{"classes/Mocker.html":{}}}],["array[math.floor(math.random",{"_index":1314,"title":{},"body":{"classes/Mocker.html":{}}}],["arrow",{"_index":2008,"title":{},"body":{"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{}}}],["article",{"_index":2604,"title":{},"body":{"miscellaneous/variables.html":{}}}],["artifact",{"_index":282,"title":{"classes/Artifact.html":{}},"body":{"classes/Artifact.html":{},"classes/ArtifactBuilder.html":{},"injectables/ArtifactService.html":{},"classes/CollectionBuilder.html":{},"components/CollectionListComponent.html":{},"classes/Edit.html":{},"classes/EditBuilder.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"injectables/EditService.html":{},"components/EntryListComponent.html":{},"injectables/GetByCategoryService.html":{},"classes/Mocker.html":{},"classes/ProtoArtifact.html":{},"classes/ProtoCollection.html":{},"classes/ProtoEdit.html":{},"classes/PrototypeBuilder.html":{},"components/SearchComponent.html":{},"classes/Tag.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"classes/WikiEntry.html":{},"components/WikiEntryViewComponent.html":{},"coverage.html":{}}}],["artifact(protoartifact.toartifact(protoedit.artifact",{"_index":1600,"title":{},"body":{"classes/ProtoEdit.html":{}}}],["artifact(value",{"_index":677,"title":{},"body":{"classes/EditBuilder.html":{}}}],["artifact).collectionlist",{"_index":2329,"title":{},"body":{"components/ViewEditComponent.html":{}}}],["artifact).museum.id",{"_index":2328,"title":{},"body":{"components/ViewEditComponent.html":{}}}],["artifact.artifact",{"_index":1326,"title":{},"body":{"classes/Mocker.html":{}}}],["artifact.artifact.collectionlist",{"_index":1328,"title":{},"body":{"classes/Mocker.html":{}}}],["artifact.collectionlist",{"_index":2254,"title":{},"body":{"components/ViewComponent.html":{}}}],["artifact.collectionlist.map((collection",{"_index":434,"title":{},"body":{"injectables/ArtifactService.html":{}}}],["artifact.museum.id",{"_index":433,"title":{},"body":{"injectables/ArtifactService.html":{}}}],["artifact.ts",{"_index":1551,"title":{},"body":{"classes/ProtoArtifact.html":{},"coverage.html":{}}}],["artifact.ts:11",{"_index":1556,"title":{},"body":{"classes/ProtoArtifact.html":{}}}],["artifact.ts:15",{"_index":1554,"title":{},"body":{"classes/ProtoArtifact.html":{}}}],["artifact.ts:19",{"_index":1553,"title":{},"body":{"classes/ProtoArtifact.html":{}}}],["artifact.ts:26",{"_index":1558,"title":{},"body":{"classes/ProtoArtifact.html":{}}}],["artifact/collection/museum",{"_index":459,"title":{},"body":{"classes/BasicEntryBuilder.html":{}}}],["artifactbuilder",{"_index":309,"title":{"classes/ArtifactBuilder.html":{}},"body":{"classes/ArtifactBuilder.html":{},"components/EditOrCreateComponent.html":{},"classes/PrototypeBuilder.html":{},"coverage.html":{}}}],["artifactlist",{"_index":1567,"title":{},"body":{"classes/ProtoCollection.html":{}}}],["artifacts",{"_index":506,"title":{},"body":{"classes/Collection.html":{},"classes/CollectionBuilder.html":{},"components/EntryListComponent.html":{},"components/HomeComponent.html":{},"classes/ProtoCollection.html":{},"components/WikiEntryViewComponent.html":{},"index.html":{}}}],["artifacts(artifacts",{"_index":524,"title":{},"body":{"classes/CollectionBuilder.html":{}}}],["artifacts(protocollection.artifactlist",{"_index":1577,"title":{},"body":{"classes/ProtoCollection.html":{}}}],["artifacts(res.artifactlist",{"_index":1647,"title":{},"body":{"classes/PrototypeBuilder.html":{}}}],["artifactservice",{"_index":364,"title":{"injectables/ArtifactService.html":{}},"body":{"injectables/ArtifactService.html":{},"components/EditOrCreateComponent.html":{},"injectables/GetByCategoryService.html":{},"components/ViewComponent.html":{},"components/WikiEntryViewComponent.html":{},"coverage.html":{}}}],["ascending",{"_index":1998,"title":{},"body":{"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{}}}],["ask",{"_index":2177,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["asking",{"_index":583,"title":{},"body":{"components/ConfirmationModalComponent.html":{},"components/UserEditListComponent.html":{}}}],["associated",{"_index":1555,"title":{},"body":{"classes/ProtoArtifact.html":{}}}],["assume",{"_index":491,"title":{},"body":{"classes/BasicUserInfo.html":{}}}],["asterisk",{"_index":2607,"title":{},"body":{"miscellaneous/variables.html":{}}}],["asterisks",{"_index":2610,"title":{},"body":{"miscellaneous/variables.html":{}}}],["async",{"_index":1174,"title":{},"body":{"components/LoginComponent.html":{}}}],["attempt",{"_index":1102,"title":{},"body":{"components/LoginComponent.html":{},"injectables/LoginService.html":{},"injectables/UserInfoService.html":{},"components/UserMuseumListComponent.html":{}}}],["attempted",{"_index":1223,"title":{},"body":{"injectables/LoginService.html":{}}}],["auto",{"_index":1027,"title":{},"body":{"components/FooterComponent.html":{},"components/NavigationBarComponent.html":{}}}],["automatically",{"_index":486,"title":{},"body":{"classes/BasicUserInfo.html":{},"components/EditOrCreateComponent.html":{},"classes/User.html":{},"injectables/UserInfoService.html":{}}}],["available",{"_index":1530,"title":{},"body":{"classes/ProjectConfig.html":{},"components/TagSelectionComponent.html":{},"components/WikiEntryViewComponent.html":{},"modules.html":{}}}],["awesome",{"_index":2006,"title":{},"body":{"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{}}}],["back",{"_index":869,"title":{},"body":{"components/EditOrCreateComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryViewComponent.html":{}}}],["backend",{"_index":734,"title":{},"body":{"components/EditComponent.html":{},"components/LoadingComponent.html":{},"components/ModalMessageComponent.html":{},"components/MuseumListComponent.html":{},"classes/ProjectConfig.html":{},"classes/ProtoCollection.html":{},"classes/ProtoEdit.html":{},"classes/ProtoMuseum.html":{},"classes/ProtoUser.html":{},"classes/ServerConfig.html":{},"components/TagSelectionComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"index.html":{}}}],["bar",{"_index":1441,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["bar'},{'name",{"_index":90,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/CollectionListComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/CreateComponent.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"components/EntryListComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownDisplayComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/ModalMessageComponent.html":{},"components/MuseumListComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordModalComponent.html":{},"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{},"components/TagSelectionComponent.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryEditorComponent.html":{},"components/WikiEntryViewComponent.html":{}}}],["bar.component",{"_index":44,"title":{},"body":{"components/AboutComponent.html":{},"modules/AppModule.html":{},"components/HomeComponent.html":{}}}],["bar.component.css",{"_index":1442,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["bar.component.html",{"_index":1443,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["bar.component.ts",{"_index":1440,"title":{},"body":{"components/NavigationBarComponent.html":{},"coverage.html":{}}}],["bar.component.ts:18",{"_index":1462,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["bar.component.ts:22",{"_index":1448,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["bar.component.ts:46",{"_index":1457,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["bar.component.ts:61",{"_index":1460,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["bar/navigation",{"_index":43,"title":{},"body":{"components/AboutComponent.html":{},"modules/AppModule.html":{},"components/HomeComponent.html":{},"components/NavigationBarComponent.html":{},"coverage.html":{}}}],["based",{"_index":959,"title":{},"body":{"components/EntryListComponent.html":{},"components/LoginComponent.html":{},"classes/Museum.html":{},"components/NavigationBarComponent.html":{},"classes/ProjectConfig.html":{},"injectables/ProjectConfigService.html":{},"classes/ServerConfig.html":{},"injectables/ServerConfigService.html":{},"classes/Tag.html":{},"components/UserMuseumListComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{}}}],["basic",{"_index":308,"title":{},"body":{"classes/Artifact.html":{},"classes/ArtifactBuilder.html":{},"classes/BasicEntryBuilder.html":{},"classes/BasicUserInfo.html":{},"classes/Collection.html":{},"classes/CollectionBuilder.html":{},"classes/Museum.html":{},"classes/ProtoArtifact.html":{},"classes/User.html":{},"classes/WikiEntry.html":{},"classes/WikiEntryBuilder.html":{}}}],["basicentry",{"_index":292,"title":{"classes/BasicEntry.html":{}},"body":{"classes/Artifact.html":{},"classes/ArtifactBuilder.html":{},"classes/BasicEntry.html":{},"classes/BasicEntryBuilder.html":{},"classes/Collection.html":{},"classes/CollectionBuilder.html":{},"components/CollectionListComponent.html":{},"components/EditOrCreateComponent.html":{},"classes/Museum.html":{},"classes/ProtoArtifact.html":{},"classes/Tag.html":{},"components/TagSelectionComponent.html":{},"classes/User.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"classes/WikiEntry.html":{},"coverage.html":{}}}],["basicentry:12",{"_index":306,"title":{},"body":{"classes/Artifact.html":{},"classes/Collection.html":{},"classes/Museum.html":{},"classes/WikiEntry.html":{}}}],["basicentry:8",{"_index":307,"title":{},"body":{"classes/Artifact.html":{},"classes/Collection.html":{},"classes/Museum.html":{},"classes/WikiEntry.html":{}}}],["basicentrybuilder",{"_index":323,"title":{"classes/BasicEntryBuilder.html":{}},"body":{"classes/ArtifactBuilder.html":{},"classes/BasicEntryBuilder.html":{},"classes/CollectionBuilder.html":{},"components/EditOrCreateComponent.html":{},"classes/MuseumBuilder.html":{},"classes/WikiEntryBuilder.html":{},"coverage.html":{}}}],["basicentrybuilder().id(this.museumid).build",{"_index":863,"title":{},"body":{"components/EditOrCreateComponent.html":{}}}],["basicentrybuilder:13",{"_index":324,"title":{},"body":{"classes/ArtifactBuilder.html":{},"classes/CollectionBuilder.html":{},"classes/MuseumBuilder.html":{},"classes/WikiEntryBuilder.html":{}}}],["basicentrybuilder:33",{"_index":355,"title":{},"body":{"classes/ArtifactBuilder.html":{},"classes/CollectionBuilder.html":{},"classes/MuseumBuilder.html":{},"classes/WikiEntryBuilder.html":{}}}],["basicentrybuilder:43",{"_index":353,"title":{},"body":{"classes/ArtifactBuilder.html":{},"classes/CollectionBuilder.html":{},"classes/MuseumBuilder.html":{},"classes/WikiEntryBuilder.html":{}}}],["basicentrybuilder:51",{"_index":351,"title":{},"body":{"classes/ArtifactBuilder.html":{},"classes/CollectionBuilder.html":{},"classes/MuseumBuilder.html":{},"classes/WikiEntryBuilder.html":{}}}],["basicentrybuilder:58",{"_index":356,"title":{},"body":{"classes/ArtifactBuilder.html":{},"classes/CollectionBuilder.html":{},"classes/MuseumBuilder.html":{},"classes/WikiEntryBuilder.html":{}}}],["basicuserinfo",{"_index":479,"title":{"classes/BasicUserInfo.html":{}},"body":{"classes/BasicUserInfo.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"injectables/MuseumService.html":{},"classes/ProtoEdit.html":{},"classes/User.html":{},"injectables/UserInfoService.html":{},"coverage.html":{}}}],["basicuserinfo(cookieservice.get('username",{"_index":2102,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["basicuserinfo(this.username",{"_index":1149,"title":{},"body":{"components/LoginComponent.html":{}}}],["basicuserinfo:10",{"_index":1944,"title":{},"body":{"classes/User.html":{}}}],["basicuserinfo:14",{"_index":1943,"title":{},"body":{"classes/User.html":{}}}],["become",{"_index":464,"title":{},"body":{"classes/BasicEntryBuilder.html":{},"components/HomeComponent.html":{}}}],["becomes",{"_index":960,"title":{},"body":{"components/EntryListComponent.html":{}}}],["before",{"_index":1142,"title":{},"body":{"components/LoginComponent.html":{}}}],["being",{"_index":1585,"title":{},"body":{"classes/ProtoEdit.html":{},"components/ViewComponent.html":{}}}],["belong",{"_index":511,"title":{},"body":{"classes/Collection.html":{},"components/CreateComponent.html":{}}}],["belonging",{"_index":527,"title":{},"body":{"classes/CollectionBuilder.html":{},"classes/ProtoMuseum.html":{},"components/ViewComponent.html":{}}}],["belongs",{"_index":294,"title":{},"body":{"classes/Artifact.html":{},"classes/ArtifactBuilder.html":{},"classes/Collection.html":{},"classes/CollectionBuilder.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"classes/ProtoArtifact.html":{},"classes/ProtoCollection.html":{}}}],["binary",{"_index":2039,"title":{},"body":{"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{}}}],["binding",{"_index":1078,"title":{},"body":{"components/LoadingComponent.html":{},"components/MarkdownDisplayComponent.html":{},"components/UserMuseumListComponent.html":{}}}],["blocked",{"_index":1097,"title":{},"body":{"components/LoginComponent.html":{},"guards/LoginGuardService.html":{}}}],["body",{"_index":432,"title":{},"body":{"injectables/ArtifactService.html":{}}}],["body).topromise",{"_index":442,"title":{},"body":{"injectables/ArtifactService.html":{}}}],["bold",{"_index":2609,"title":{},"body":{"miscellaneous/variables.html":{}}}],["boolean",{"_index":726,"title":{},"body":{"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"injectables/EditService.html":{},"components/LoadingComponent.html":{},"guards/LoginGuardService.html":{},"components/MarkdownEditorComponent.html":{},"components/ModalMessageComponent.html":{},"components/NavigationBarComponent.html":{},"classes/ProjectConfig.html":{},"classes/ServerResponse.html":{},"classes/Tag.html":{},"components/TagSelectionComponent.html":{},"components/UserEditListComponent.html":{},"injectables/UserInfoService.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryViewComponent.html":{}}}],["bootstrap",{"_index":143,"title":{},"body":{"modules/AppModule.html":{},"components/ConfirmationModalComponent.html":{},"components/EditOrCreateComponent.html":{},"components/EntryListComponent.html":{},"components/LoginComponent.html":{},"components/ModalMessageComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordModalComponent.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryViewComponent.html":{},"dependencies.html":{},"overview.html":{}}}],["bootstrap/ng",{"_index":202,"title":{},"body":{"modules/AppModule.html":{},"components/ConfirmationModalComponent.html":{},"components/EditOrCreateComponent.html":{},"components/LoginComponent.html":{},"components/ModalMessageComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordModalComponent.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryViewComponent.html":{},"dependencies.html":{}}}],["borashvili",{"_index":1014,"title":{},"body":{"components/FooterComponent.html":{}}}],["border",{"_index":1734,"title":{},"body":{"components/RegistrationComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryEditorComponent.html":{}}}],["bottom",{"_index":999,"title":{},"body":{"components/EntryListComponent.html":{},"components/ModalMessageComponent.html":{}}}],["box",{"_index":608,"title":{},"body":{"components/ConfirmationModalComponent.html":{},"components/EntryListComponent.html":{},"components/ModalMessageComponent.html":{}}}],["boxes",{"_index":1770,"title":{},"body":{"components/SearchComponent.html":{}}}],["break",{"_index":2324,"title":{},"body":{"components/ViewEditComponent.html":{}}}],["brief",{"_index":2598,"title":{},"body":{"miscellaneous/variables.html":{}}}],["browse",{"_index":2569,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":159,"title":{},"body":{"modules/AppModule.html":{},"classes/AppPage.html":{},"classes/ServerCannotConnect.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":218,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":217,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":157,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":317,"title":{},"body":{"classes/ArtifactBuilder.html":{},"classes/BasicEntryBuilder.html":{},"classes/CollectionBuilder.html":{},"classes/EditBuilder.html":{},"components/EditOrCreateComponent.html":{},"classes/Mocker.html":{},"classes/MuseumBuilder.html":{},"classes/ProtoCollection.html":{},"classes/ProtoEdit.html":{},"classes/PrototypeBuilder.html":{},"classes/WikiEntryBuilder.html":{},"components/WikiEntryEditorComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["builder",{"_index":312,"title":{},"body":{"classes/ArtifactBuilder.html":{},"classes/BasicEntryBuilder.html":{},"classes/CollectionBuilder.html":{},"classes/EditBuilder.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"classes/Mocker.html":{},"classes/MuseumBuilder.html":{},"classes/ProtoCollection.html":{},"classes/ProtoEdit.html":{},"classes/PrototypeBuilder.html":{},"injectables/UserInfoService.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"classes/WikiEntry.html":{},"classes/WikiEntryBuilder.html":{},"components/WikiEntryEditorComponent.html":{}}}],["builder.ts",{"_index":311,"title":{},"body":{"classes/ArtifactBuilder.html":{},"classes/BasicEntryBuilder.html":{},"classes/CollectionBuilder.html":{},"classes/EditBuilder.html":{},"classes/MuseumBuilder.html":{},"classes/PrototypeBuilder.html":{},"classes/WikiEntryBuilder.html":{},"coverage.html":{}}}],["builder.ts:107",{"_index":685,"title":{},"body":{"classes/EditBuilder.html":{}}}],["builder.ts:117",{"_index":679,"title":{},"body":{"classes/EditBuilder.html":{}}}],["builder.ts:13",{"_index":466,"title":{},"body":{"classes/BasicEntryBuilder.html":{},"classes/EditBuilder.html":{}}}],["builder.ts:21",{"_index":335,"title":{},"body":{"classes/ArtifactBuilder.html":{},"classes/PrototypeBuilder.html":{}}}],["builder.ts:22",{"_index":528,"title":{},"body":{"classes/CollectionBuilder.html":{},"classes/MuseumBuilder.html":{}}}],["builder.ts:24",{"_index":2348,"title":{},"body":{"classes/WikiEntryBuilder.html":{}}}],["builder.ts:27",{"_index":686,"title":{},"body":{"classes/EditBuilder.html":{}}}],["builder.ts:30",{"_index":1400,"title":{},"body":{"classes/MuseumBuilder.html":{}}}],["builder.ts:31",{"_index":329,"title":{},"body":{"classes/ArtifactBuilder.html":{}}}],["builder.ts:32",{"_index":525,"title":{},"body":{"classes/CollectionBuilder.html":{}}}],["builder.ts:33",{"_index":472,"title":{},"body":{"classes/BasicEntryBuilder.html":{}}}],["builder.ts:34",{"_index":2347,"title":{},"body":{"classes/WikiEntryBuilder.html":{}}}],["builder.ts:37",{"_index":693,"title":{},"body":{"classes/EditBuilder.html":{}}}],["builder.ts:39",{"_index":326,"title":{},"body":{"classes/ArtifactBuilder.html":{}}}],["builder.ts:43",{"_index":471,"title":{},"body":{"classes/BasicEntryBuilder.html":{}}}],["builder.ts:44",{"_index":2346,"title":{},"body":{"classes/WikiEntryBuilder.html":{}}}],["builder.ts:47",{"_index":681,"title":{},"body":{"classes/EditBuilder.html":{}}}],["builder.ts:51",{"_index":470,"title":{},"body":{"classes/BasicEntryBuilder.html":{}}}],["builder.ts:54",{"_index":2350,"title":{},"body":{"classes/WikiEntryBuilder.html":{}}}],["builder.ts:57",{"_index":678,"title":{},"body":{"classes/EditBuilder.html":{}}}],["builder.ts:58",{"_index":473,"title":{},"body":{"classes/BasicEntryBuilder.html":{}}}],["builder.ts:66",{"_index":2345,"title":{},"body":{"classes/WikiEntryBuilder.html":{}}}],["builder.ts:67",{"_index":683,"title":{},"body":{"classes/EditBuilder.html":{}}}],["builder.ts:73",{"_index":2349,"title":{},"body":{"classes/WikiEntryBuilder.html":{}}}],["builder.ts:77",{"_index":688,"title":{},"body":{"classes/EditBuilder.html":{}}}],["builder.ts:8",{"_index":320,"title":{},"body":{"classes/ArtifactBuilder.html":{},"classes/MuseumBuilder.html":{},"classes/WikiEntryBuilder.html":{}}}],["builder.ts:87",{"_index":674,"title":{},"body":{"classes/EditBuilder.html":{}}}],["builder.ts:9",{"_index":522,"title":{},"body":{"classes/CollectionBuilder.html":{}}}],["builder.ts:97",{"_index":690,"title":{},"body":{"classes/EditBuilder.html":{}}}],["builders/wiki",{"_index":2340,"title":{},"body":{"classes/WikiEntry.html":{}}}],["buildfromprototype",{"_index":1640,"title":{},"body":{"classes/PrototypeBuilder.html":{}}}],["buildfromprototype(prototype",{"_index":1641,"title":{},"body":{"classes/PrototypeBuilder.html":{}}}],["builds",{"_index":456,"title":{},"body":{"classes/BasicEntryBuilder.html":{}}}],["built",{"_index":1401,"title":{},"body":{"classes/MuseumBuilder.html":{},"classes/PrototypeBuilder.html":{}}}],["button",{"_index":605,"title":{},"body":{"components/ConfirmationModalComponent.html":{},"components/NavigationBarComponent.html":{},"components/ResetPasswordModalComponent.html":{},"components/WikiEntryViewComponent.html":{}}}],["button:focus",{"_index":1473,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["buttons",{"_index":2191,"title":{},"body":{"components/ViewComponent.html":{}}}],["called",{"_index":2170,"title":{},"body":{"components/UserProfileComponent.html":{},"index.html":{}}}],["calls",{"_index":1099,"title":{},"body":{"components/LoginComponent.html":{}}}],["canactivate",{"_index":274,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/LoginGuardService.html":{}}}],["canactivate(route",{"_index":1192,"title":{},"body":{"guards/LoginGuardService.html":{}}}],["candelete",{"_index":2405,"title":{},"body":{"components/WikiEntryViewComponent.html":{}}}],["canedit",{"_index":2406,"title":{},"body":{"components/WikiEntryViewComponent.html":{}}}],["cansubmit",{"_index":773,"title":{},"body":{"components/EditOrCreateComponent.html":{}}}],["capitalize",{"_index":2286,"title":{},"body":{"components/ViewEditComponent.html":{}}}],["capitalizefirstletter",{"_index":818,"title":{},"body":{"components/EditOrCreateComponent.html":{},"components/UserEditListComponent.html":{},"components/ViewEditComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["capitalizefirstletter(category",{"_index":2330,"title":{},"body":{"components/ViewEditComponent.html":{}}}],["capitalizefirstletter(entry.category",{"_index":2048,"title":{},"body":{"components/UserEditListComponent.html":{}}}],["capitalizefirstletter(str",{"_index":2517,"title":{},"body":{"miscellaneous/functions.html":{}}}],["capitalizefirstletter(this.category",{"_index":850,"title":{},"body":{"components/EditOrCreateComponent.html":{}}}],["capitalizefirstletter(type",{"_index":2331,"title":{},"body":{"components/ViewEditComponent.html":{}}}],["capitalizes",{"_index":1994,"title":{},"body":{"components/UserEditListComponent.html":{},"miscellaneous/functions.html":{}}}],["cards",{"_index":907,"title":{},"body":{"components/EntryListComponent.html":{}}}],["care",{"_index":1053,"title":{},"body":{"components/HomeComponent.html":{},"components/LoadingComponent.html":{}}}],["case",{"_index":2322,"title":{},"body":{"components/ViewEditComponent.html":{}}}],["categories",{"_index":1292,"title":{},"body":{"classes/Mocker.html":{}}}],["category",{"_index":614,"title":{},"body":{"components/CreateComponent.html":{},"classes/Edit.html":{},"classes/EditBuilder.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"injectables/EditService.html":{},"components/EntryListComponent.html":{},"injectables/GetByCategoryService.html":{},"classes/ProtoEdit.html":{},"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{},"components/UserEditListComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryViewComponent.html":{}}}],["category'},{'name",{"_index":102,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/CollectionListComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/CreateComponent.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"components/EntryListComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownDisplayComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/ModalMessageComponent.html":{},"components/MuseumListComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordModalComponent.html":{},"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{},"components/TagSelectionComponent.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryEditorComponent.html":{},"components/WikiEntryViewComponent.html":{}}}],["category(category",{"_index":680,"title":{},"body":{"classes/EditBuilder.html":{}}}],["category(protoedit.category",{"_index":1601,"title":{},"body":{"classes/ProtoEdit.html":{}}}],["category.component",{"_index":178,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["category.component.css",{"_index":1789,"title":{},"body":{"components/SearchInCategoryComponent.html":{}}}],["category.component.html",{"_index":1790,"title":{},"body":{"components/SearchInCategoryComponent.html":{}}}],["category.component.ts",{"_index":1788,"title":{},"body":{"components/SearchInCategoryComponent.html":{},"coverage.html":{}}}],["category.component.ts:20",{"_index":1794,"title":{},"body":{"components/SearchInCategoryComponent.html":{}}}],["category.component.ts:24",{"_index":1796,"title":{},"body":{"components/SearchInCategoryComponent.html":{}}}],["category.component.ts:29",{"_index":1792,"title":{},"body":{"components/SearchInCategoryComponent.html":{}}}],["category.component.ts:42",{"_index":1793,"title":{},"body":{"components/SearchInCategoryComponent.html":{}}}],["category.service",{"_index":738,"title":{},"body":{"components/EditComponent.html":{},"components/ViewEditComponent.html":{}}}],["category.service.ts",{"_index":1029,"title":{},"body":{"injectables/GetByCategoryService.html":{},"coverage.html":{}}}],["category.service.ts:18",{"_index":1032,"title":{},"body":{"injectables/GetByCategoryService.html":{}}}],["category.service.ts:38",{"_index":1034,"title":{},"body":{"injectables/GetByCategoryService.html":{}}}],["category.tolowercase()}}s",{"_index":998,"title":{},"body":{"components/EntryListComponent.html":{}}}],["category/search",{"_index":177,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/SearchInCategoryComponent.html":{},"coverage.html":{}}}],["certain",{"_index":285,"title":{},"body":{"classes/Artifact.html":{},"components/EditComponent.html":{},"components/EntryListComponent.html":{},"guards/LoginGuardService.html":{},"components/MuseumListComponent.html":{},"components/NavigationBarComponent.html":{},"components/SearchInCategoryComponent.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"classes/WikiEntryBuilder.html":{},"classes/Wrapper.html":{}}}],["change",{"_index":636,"title":{},"body":{"classes/Edit.html":{},"components/NavigationBarComponent.html":{},"components/TagSelectionComponent.html":{},"components/UserMuseumListComponent.html":{}}}],["changed",{"_index":648,"title":{},"body":{"classes/Edit.html":{},"components/NavigationBarComponent.html":{},"classes/ProtoEdit.html":{},"components/UserEditListComponent.html":{},"injectables/UserInfoService.html":{},"components/UserMuseumListComponent.html":{},"components/ViewEditComponent.html":{}}}],["changedentry",{"_index":2258,"title":{},"body":{"components/ViewEditComponent.html":{}}}],["changes",{"_index":792,"title":{},"body":{"components/EditOrCreateComponent.html":{},"components/EntryListComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/MarkdownDisplayComponent.html":{},"components/TagSelectionComponent.html":{},"components/UserProfileComponent.html":{}}}],["changes.existingcollections",{"_index":1916,"title":{},"body":{"components/TagSelectionComponent.html":{}}}],["changes.museumid",{"_index":1910,"title":{},"body":{"components/TagSelectionComponent.html":{}}}],["characters",{"_index":1726,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["cheatsheet",{"_index":2613,"title":{},"body":{"miscellaneous/variables.html":{}}}],["check",{"_index":1106,"title":{},"body":{"components/LoginComponent.html":{},"classes/ServerCannotConnect.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"index.html":{}}}],["checking",{"_index":970,"title":{},"body":{"components/EntryListComponent.html":{},"classes/Wrapper.html":{}}}],["checkmark",{"_index":1362,"title":{},"body":{"components/ModalMessageComponent.html":{}}}],["checks",{"_index":1189,"title":{},"body":{"guards/LoginGuardService.html":{}}}],["choose",{"_index":1830,"title":{},"body":{"classes/ServerConfig.html":{}}}],["chose",{"_index":2160,"title":{},"body":{"components/UserMuseumListComponent.html":{}}}],["circle",{"_index":1361,"title":{},"body":{"components/ModalMessageComponent.html":{}}}],["class",{"_index":46,"title":{"classes/AppPage.html":{},"classes/Artifact.html":{},"classes/ArtifactBuilder.html":{},"classes/BasicEntry.html":{},"classes/BasicEntryBuilder.html":{},"classes/BasicUserInfo.html":{},"classes/Collection.html":{},"classes/CollectionBuilder.html":{},"classes/Edit.html":{},"classes/EditBuilder.html":{},"classes/HashHelper.html":{},"classes/Mocker.html":{},"classes/Museum.html":{},"classes/MuseumBuilder.html":{},"classes/ProjectConfig.html":{},"classes/ProtoArtifact.html":{},"classes/ProtoCollection.html":{},"classes/ProtoEdit.html":{},"classes/ProtoMuseum.html":{},"classes/ProtoUser.html":{},"classes/PrototypeBuilder.html":{},"classes/ServerCannotConnect.html":{},"classes/ServerConfig.html":{},"classes/ServerResponse.html":{},"classes/Tag.html":{},"classes/User.html":{},"classes/WikiEntry.html":{},"classes/WikiEntryBuilder.html":{},"classes/Wrapper.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"classes/Artifact.html":{},"classes/ArtifactBuilder.html":{},"injectables/ArtifactService.html":{},"classes/BasicEntry.html":{},"classes/BasicEntryBuilder.html":{},"classes/BasicUserInfo.html":{},"classes/Collection.html":{},"classes/CollectionBuilder.html":{},"components/CollectionListComponent.html":{},"injectables/CollectionService.html":{},"components/ConfirmationModalComponent.html":{},"components/CreateComponent.html":{},"classes/Edit.html":{},"classes/EditBuilder.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"injectables/EditService.html":{},"components/EntryListComponent.html":{},"components/FooterComponent.html":{},"injectables/GetByCategoryService.html":{},"classes/HashHelper.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardService.html":{},"injectables/LoginService.html":{},"components/MarkdownDisplayComponent.html":{},"components/MarkdownEditorComponent.html":{},"pipes/MarkedPipe.html":{},"classes/Mocker.html":{},"components/ModalMessageComponent.html":{},"classes/Museum.html":{},"classes/MuseumBuilder.html":{},"components/MuseumListComponent.html":{},"injectables/MuseumService.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"injectables/PreviousRouteService.html":{},"classes/ProjectConfig.html":{},"injectables/ProjectConfigService.html":{},"classes/ProtoArtifact.html":{},"classes/ProtoCollection.html":{},"classes/ProtoEdit.html":{},"classes/ProtoMuseum.html":{},"classes/ProtoUser.html":{},"classes/PrototypeBuilder.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordModalComponent.html":{},"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{},"classes/ServerCannotConnect.html":{},"classes/ServerConfig.html":{},"injectables/ServerConfigService.html":{},"classes/ServerResponse.html":{},"classes/Tag.html":{},"components/TagSelectionComponent.html":{},"pipes/TextLimitPipe.html":{},"classes/User.html":{},"components/UserEditListComponent.html":{},"injectables/UserInfoService.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"classes/WikiEntry.html":{},"classes/WikiEntryBuilder.html":{},"components/WikiEntryEditorComponent.html":{},"components/WikiEntryViewComponent.html":{},"classes/Wrapper.html":{},"coverage.html":{}}}],["classes",{"_index":251,"title":{},"body":{"classes/AppPage.html":{},"classes/Artifact.html":{},"classes/ArtifactBuilder.html":{},"classes/BasicEntry.html":{},"classes/BasicEntryBuilder.html":{},"classes/BasicUserInfo.html":{},"classes/Collection.html":{},"classes/CollectionBuilder.html":{},"classes/Edit.html":{},"classes/EditBuilder.html":{},"classes/HashHelper.html":{},"classes/Mocker.html":{},"classes/Museum.html":{},"classes/MuseumBuilder.html":{},"classes/ProjectConfig.html":{},"classes/ProtoArtifact.html":{},"classes/ProtoCollection.html":{},"classes/ProtoEdit.html":{},"classes/ProtoMuseum.html":{},"classes/ProtoUser.html":{},"classes/PrototypeBuilder.html":{},"classes/ServerCannotConnect.html":{},"classes/ServerConfig.html":{},"classes/ServerResponse.html":{},"classes/Tag.html":{},"classes/User.html":{},"classes/WikiEntry.html":{},"classes/WikiEntryBuilder.html":{},"classes/Wrapper.html":{},"overview.html":{}}}],["clearcookies",{"_index":2063,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["cli",{"_index":2566,"title":{},"body":{"index.html":{}}}],["click",{"_index":602,"title":{},"body":{"components/ConfirmationModalComponent.html":{},"components/ViewComponent.html":{}}}],["clicked",{"_index":1455,"title":{},"body":{"components/NavigationBarComponent.html":{},"components/ResetPasswordModalComponent.html":{},"components/UserMuseumListComponent.html":{}}}],["clicks",{"_index":927,"title":{},"body":{"components/EntryListComponent.html":{},"components/ResetPasswordModalComponent.html":{},"components/TagSelectionComponent.html":{}}}],["client",{"_index":1215,"title":{},"body":{"injectables/LoginService.html":{}}}],["clone",{"_index":2524,"title":{},"body":{"index.html":{}}}],["close",{"_index":1381,"title":{},"body":{"components/ModalMessageComponent.html":{},"components/ResetPasswordModalComponent.html":{}}}],["closed",{"_index":601,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["closing",{"_index":2433,"title":{},"body":{"classes/Wrapper.html":{}}}],["cluster_appmodule",{"_index":146,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":149,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":147,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":148,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":1278,"title":{},"body":{"pipes/MarkedPipe.html":{}}}],["coded",{"_index":1114,"title":{},"body":{"components/LoginComponent.html":{}}}],["collection",{"_index":60,"title":{"classes/Collection.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"classes/ArtifactBuilder.html":{},"injectables/ArtifactService.html":{},"classes/Collection.html":{},"classes/CollectionBuilder.html":{},"components/CollectionListComponent.html":{},"injectables/CollectionService.html":{},"components/ConfirmationModalComponent.html":{},"components/CreateComponent.html":{},"classes/Edit.html":{},"classes/EditBuilder.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"components/EntryListComponent.html":{},"components/FooterComponent.html":{},"injectables/GetByCategoryService.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownDisplayComponent.html":{},"components/MarkdownEditorComponent.html":{},"classes/Mocker.html":{},"components/ModalMessageComponent.html":{},"components/MuseumListComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"classes/ProtoCollection.html":{},"classes/ProtoEdit.html":{},"classes/PrototypeBuilder.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordModalComponent.html":{},"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{},"classes/Tag.html":{},"components/TagSelectionComponent.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"classes/WikiEntry.html":{},"components/WikiEntryEditorComponent.html":{},"components/WikiEntryViewComponent.html":{},"coverage.html":{}}}],["collection(protocollection.tocollection(protoedit.collection",{"_index":1599,"title":{},"body":{"classes/ProtoEdit.html":{}}}],["collection(value",{"_index":682,"title":{},"body":{"classes/EditBuilder.html":{}}}],["collection.artifacts",{"_index":2249,"title":{},"body":{"components/ViewComponent.html":{}}}],["collection.id",{"_index":435,"title":{},"body":{"injectables/ArtifactService.html":{}}}],["collection.museum",{"_index":2251,"title":{},"body":{"components/ViewComponent.html":{}}}],["collection.museum.id",{"_index":580,"title":{},"body":{"injectables/CollectionService.html":{}}}],["collection.ts",{"_index":1566,"title":{},"body":{"classes/ProtoCollection.html":{},"coverage.html":{}}}],["collection.ts:13",{"_index":1572,"title":{},"body":{"classes/ProtoCollection.html":{}}}],["collection.ts:17",{"_index":1570,"title":{},"body":{"classes/ProtoCollection.html":{}}}],["collection.ts:21",{"_index":1569,"title":{},"body":{"classes/ProtoCollection.html":{}}}],["collection.ts:28",{"_index":1574,"title":{},"body":{"classes/ProtoCollection.html":{}}}],["collection1",{"_index":1329,"title":{},"body":{"classes/Mocker.html":{}}}],["collection2",{"_index":1330,"title":{},"body":{"classes/Mocker.html":{}}}],["collectionbuilder",{"_index":520,"title":{"classes/CollectionBuilder.html":{}},"body":{"classes/CollectionBuilder.html":{},"components/EditOrCreateComponent.html":{},"classes/ProtoCollection.html":{},"classes/ProtoEdit.html":{},"classes/PrototypeBuilder.html":{},"coverage.html":{}}}],["collectionlist",{"_index":288,"title":{},"body":{"classes/Artifact.html":{},"classes/ArtifactBuilder.html":{},"components/CollectionListComponent.html":{},"classes/Museum.html":{},"classes/ProtoArtifact.html":{},"classes/ProtoMuseum.html":{}}}],["collectionlist(collection",{"_index":328,"title":{},"body":{"classes/ArtifactBuilder.html":{}}}],["collectionlist(res.collectionlist",{"_index":1651,"title":{},"body":{"classes/PrototypeBuilder.html":{}}}],["collectionlist(this.tagselection.getallselectedtags",{"_index":864,"title":{},"body":{"components/EditOrCreateComponent.html":{}}}],["collectionlistcomponent",{"_index":59,"title":{"components/CollectionListComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CollectionListComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/CreateComponent.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"components/EntryListComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownDisplayComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/ModalMessageComponent.html":{},"components/MuseumListComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordModalComponent.html":{},"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{},"components/TagSelectionComponent.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryEditorComponent.html":{},"components/WikiEntryViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["collections",{"_index":284,"title":{},"body":{"classes/Artifact.html":{},"classes/ArtifactBuilder.html":{},"components/CollectionListComponent.html":{},"components/EntryListComponent.html":{},"components/HomeComponent.html":{},"classes/Museum.html":{},"classes/MuseumBuilder.html":{},"classes/ProtoArtifact.html":{},"classes/ProtoMuseum.html":{},"components/TagSelectionComponent.html":{},"components/ViewComponent.html":{}}}],["collections(collections",{"_index":1402,"title":{},"body":{"classes/MuseumBuilder.html":{}}}],["collectionservice",{"_index":557,"title":{"injectables/CollectionService.html":{}},"body":{"injectables/CollectionService.html":{},"components/EditOrCreateComponent.html":{},"injectables/GetByCategoryService.html":{},"components/ViewComponent.html":{},"coverage.html":{}}}],["color",{"_index":1735,"title":{},"body":{"components/RegistrationComponent.html":{},"components/WikiEntryEditorComponent.html":{}}}],["colume",{"_index":1988,"title":{},"body":{"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{}}}],["column",{"_index":1986,"title":{},"body":{"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{}}}],["columnnametofieldname",{"_index":1949,"title":{},"body":{"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{}}}],["columns",{"_index":1979,"title":{},"body":{"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{}}}],["columnsortstatus",{"_index":1950,"title":{},"body":{"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{}}}],["columnstodisplay",{"_index":1951,"title":{},"body":{"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{}}}],["columnstosort",{"_index":1952,"title":{},"body":{"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{}}}],["combination",{"_index":1852,"title":{},"body":{"classes/ServerResponse.html":{}}}],["come",{"_index":2021,"title":{},"body":{"components/UserEditListComponent.html":{}}}],["commas",{"_index":535,"title":{},"body":{"components/CollectionListComponent.html":{}}}],["compare",{"_index":2033,"title":{},"body":{"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{}}}],["compared",{"_index":2027,"title":{},"body":{"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{}}}],["comparison",{"_index":2035,"title":{},"body":{"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{}}}],["comparisons",{"_index":803,"title":{},"body":{"components/EditOrCreateComponent.html":{}}}],["complete",{"_index":1218,"title":{},"body":{"injectables/LoginService.html":{},"injectables/UserInfoService.html":{},"components/UserProfileComponent.html":{},"components/ViewEditComponent.html":{},"index.html":{}}}],["compodoc",{"_index":2562,"title":{},"body":{"index.html":{}}}],["component",{"_index":0,"title":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/CollectionListComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/CreateComponent.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"components/EntryListComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownDisplayComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/ModalMessageComponent.html":{},"components/MuseumListComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordModalComponent.html":{},"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{},"components/TagSelectionComponent.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryEditorComponent.html":{},"components/WikiEntryViewComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CollectionListComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/CreateComponent.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"components/EntryListComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownDisplayComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/ModalMessageComponent.html":{},"components/MuseumListComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordModalComponent.html":{},"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{},"components/TagSelectionComponent.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryEditorComponent.html":{},"components/WikiEntryViewComponent.html":{},"coverage.html":{}}}],["component/service",{"_index":2088,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["component_template",{"_index":54,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/CollectionListComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/CreateComponent.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"components/EntryListComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownDisplayComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/ModalMessageComponent.html":{},"components/MuseumListComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordModalComponent.html":{},"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{},"components/TagSelectionComponent.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryEditorComponent.html":{},"components/WikiEntryViewComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/CollectionListComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/CreateComponent.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"components/EntryListComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownDisplayComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/ModalMessageComponent.html":{},"components/MuseumListComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordModalComponent.html":{},"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{},"components/TagSelectionComponent.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryEditorComponent.html":{},"components/WikiEntryViewComponent.html":{},"overview.html":{}}}],["computer",{"_index":2558,"title":{},"body":{"index.html":{}}}],["concatenate",{"_index":981,"title":{},"body":{"components/EntryListComponent.html":{}}}],["conducted",{"_index":1776,"title":{},"body":{"components/SearchComponent.html":{}}}],["config",{"_index":768,"title":{},"body":{"components/EditOrCreateComponent.html":{},"components/EntryListComponent.html":{},"injectables/MuseumService.html":{},"classes/ProjectConfig.html":{},"injectables/ProjectConfigService.html":{},"classes/ServerConfig.html":{},"injectables/ServerConfigService.html":{},"components/TagSelectionComponent.html":{},"components/ViewComponent.html":{}}}],["config.service",{"_index":408,"title":{},"body":{"injectables/ArtifactService.html":{},"injectables/CollectionService.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"injectables/EditService.html":{},"components/EntryListComponent.html":{},"injectables/GetByCategoryService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"injectables/MuseumService.html":{},"injectables/ServerConfigService.html":{},"components/TagSelectionComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{}}}],["config.service.ts",{"_index":1541,"title":{},"body":{"injectables/ProjectConfigService.html":{},"injectables/ServerConfigService.html":{},"coverage.html":{}}}],["config.service.ts:15",{"_index":1546,"title":{},"body":{"injectables/ProjectConfigService.html":{}}}],["config.service.ts:17",{"_index":1839,"title":{},"body":{"injectables/ServerConfigService.html":{}}}],["config.service.ts:29",{"_index":1547,"title":{},"body":{"injectables/ProjectConfigService.html":{}}}],["config.service.ts:31",{"_index":1840,"title":{},"body":{"injectables/ServerConfigService.html":{}}}],["config/project",{"_index":417,"title":{},"body":{"injectables/ArtifactService.html":{},"injectables/EditService.html":{}}}],["config/projectconfig",{"_index":418,"title":{},"body":{"injectables/ArtifactService.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"injectables/EditService.html":{},"components/EntryListComponent.html":{},"components/LoginComponent.html":{},"injectables/ProjectConfigService.html":{},"injectables/ServerConfigService.html":{},"components/TagSelectionComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{}}}],["config/server",{"_index":407,"title":{},"body":{"injectables/ArtifactService.html":{},"injectables/CollectionService.html":{},"injectables/EditService.html":{},"injectables/GetByCategoryService.html":{},"injectables/LoginService.html":{},"injectables/MuseumService.html":{}}}],["config/servercannotconnect",{"_index":1085,"title":{},"body":{"components/LoadingComponent.html":{},"components/ModalMessageComponent.html":{}}}],["config/serverconfig",{"_index":572,"title":{},"body":{"injectables/CollectionService.html":{},"injectables/ServerConfigService.html":{}}}],["configs",{"_index":784,"title":{},"body":{"components/EditOrCreateComponent.html":{}}}],["configuration",{"_index":404,"title":{},"body":{"injectables/ArtifactService.html":{},"components/EditComponent.html":{},"injectables/EditService.html":{},"components/EntryListComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"classes/ProjectConfig.html":{},"injectables/ProjectConfigService.html":{},"classes/ServerConfig.html":{},"injectables/ServerConfigService.html":{},"components/TagSelectionComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{}}}],["configurations",{"_index":1503,"title":{},"body":{"classes/ProjectConfig.html":{}}}],["configured",{"_index":1520,"title":{},"body":{"classes/ProjectConfig.html":{}}}],["confirm",{"_index":584,"title":{},"body":{"components/ConfirmationModalComponent.html":{},"components/UserMuseumListComponent.html":{}}}],["confirmation",{"_index":63,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/CollectionListComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/CreateComponent.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"components/EntryListComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownDisplayComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/ModalMessageComponent.html":{},"components/MuseumListComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordModalComponent.html":{},"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{},"components/TagSelectionComponent.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryEditorComponent.html":{},"components/WikiEntryViewComponent.html":{}}}],["confirmationmodalcomponent",{"_index":62,"title":{"components/ConfirmationModalComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CollectionListComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/CreateComponent.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"components/EntryListComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownDisplayComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/ModalMessageComponent.html":{},"components/MuseumListComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordModalComponent.html":{},"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{},"components/TagSelectionComponent.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryEditorComponent.html":{},"components/WikiEntryViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["confirmationmodalcomponent.message",{"_index":2154,"title":{},"body":{"components/UserMuseumListComponent.html":{}}}],["confirmationmodalcomponent.modal",{"_index":2156,"title":{},"body":{"components/UserMuseumListComponent.html":{}}}],["confirmationmodalcomponent.title",{"_index":2153,"title":{},"body":{"components/UserMuseumListComponent.html":{}}}],["confirmmodal",{"_index":2150,"title":{},"body":{"components/UserMuseumListComponent.html":{}}}],["confirmmodal.componentinstance",{"_index":2152,"title":{},"body":{"components/UserMuseumListComponent.html":{}}}],["confirmmodal.result.then",{"_index":2157,"title":{},"body":{"components/UserMuseumListComponent.html":{}}}],["connect",{"_index":1410,"title":{},"body":{"components/MuseumListComponent.html":{}}}],["connected",{"_index":1807,"title":{},"body":{"classes/ServerCannotConnect.html":{}}}],["connection",{"_index":1081,"title":{},"body":{"components/LoadingComponent.html":{},"index.html":{}}}],["consequence",{"_index":588,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["console",{"_index":716,"title":{},"body":{"components/EditComponent.html":{},"classes/ProjectConfig.html":{},"classes/ServerCannotConnect.html":{}}}],["console.log('add",{"_index":438,"title":{},"body":{"injectables/ArtifactService.html":{}}}],["console.log('current",{"_index":2308,"title":{},"body":{"components/ViewEditComponent.html":{}}}],["console.log('existing",{"_index":760,"title":{},"body":{"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{}}}],["console.log('modal",{"_index":1178,"title":{},"body":{"components/LoginComponent.html":{}}}],["console.log('mode",{"_index":833,"title":{},"body":{"components/EditOrCreateComponent.html":{}}}],["console.log('received",{"_index":2315,"title":{},"body":{"components/ViewEditComponent.html":{}}}],["console.log('search",{"_index":985,"title":{},"body":{"components/EntryListComponent.html":{}}}],["console.log('user",{"_index":2184,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["console.log(body",{"_index":441,"title":{},"body":{"injectables/ArtifactService.html":{}}}],["console.log(dismiss",{"_index":1181,"title":{},"body":{"components/LoginComponent.html":{}}}],["console.log(editorcreatecomponent.name",{"_index":832,"title":{},"body":{"components/EditOrCreateComponent.html":{}}}],["console.log(err",{"_index":764,"title":{},"body":{"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"components/ViewEditComponent.html":{}}}],["console.log(error",{"_index":1162,"title":{},"body":{"components/LoginComponent.html":{},"components/MuseumListComponent.html":{},"components/RegistrationComponent.html":{},"components/TagSelectionComponent.html":{},"injectables/UserInfoService.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{}}}],["console.log(newartifact",{"_index":866,"title":{},"body":{"components/EditOrCreateComponent.html":{}}}],["console.log(newcollection",{"_index":860,"title":{},"body":{"components/EditOrCreateComponent.html":{}}}],["console.log(newmuseum",{"_index":855,"title":{},"body":{"components/EditOrCreateComponent.html":{}}}],["console.log(res",{"_index":837,"title":{},"body":{"components/EditOrCreateComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{}}}],["console.log(response",{"_index":2241,"title":{},"body":{"components/ViewComponent.html":{}}}],["console.log(this.existingobject",{"_index":761,"title":{},"body":{"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{}}}],["console.log(this.searchtext",{"_index":986,"title":{},"body":{"components/EntryListComponent.html":{}}}],["console.log(this.tags",{"_index":1915,"title":{},"body":{"components/TagSelectionComponent.html":{}}}],["console.log(this.tagselection.getallselectedtags",{"_index":865,"title":{},"body":{"components/EditOrCreateComponent.html":{}}}],["console.log(url",{"_index":440,"title":{},"body":{"injectables/ArtifactService.html":{}}}],["const",{"_index":264,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/ArtifactService.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"injectables/EditService.html":{},"components/EntryListComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardService.html":{},"classes/Mocker.html":{},"injectables/MuseumService.html":{},"classes/PrototypeBuilder.html":{},"components/RegistrationComponent.html":{},"pipes/TextLimitPipe.html":{},"components/UserEditListComponent.html":{},"injectables/UserInfoService.html":{},"components/UserMuseumListComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"classes/WikiEntryBuilder.html":{},"components/WikiEntryEditorComponent.html":{},"components/WikiEntryViewComponent.html":{}}}],["construct",{"_index":1146,"title":{},"body":{"components/LoginComponent.html":{}}}],["constructor",{"_index":319,"title":{},"body":{"classes/ArtifactBuilder.html":{},"injectables/ArtifactService.html":{},"classes/BasicEntry.html":{},"classes/BasicEntryBuilder.html":{},"classes/BasicUserInfo.html":{},"classes/Collection.html":{},"classes/CollectionBuilder.html":{},"injectables/CollectionService.html":{},"components/ConfirmationModalComponent.html":{},"components/CreateComponent.html":{},"classes/EditBuilder.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"injectables/EditService.html":{},"components/EntryListComponent.html":{},"components/FooterComponent.html":{},"injectables/GetByCategoryService.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardService.html":{},"injectables/LoginService.html":{},"components/MarkdownEditorComponent.html":{},"classes/Museum.html":{},"classes/MuseumBuilder.html":{},"components/MuseumListComponent.html":{},"injectables/MuseumService.html":{},"components/NavigationBarComponent.html":{},"injectables/PreviousRouteService.html":{},"classes/ProjectConfig.html":{},"injectables/ProjectConfigService.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordModalComponent.html":{},"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{},"classes/ServerConfig.html":{},"injectables/ServerConfigService.html":{},"classes/ServerResponse.html":{},"classes/Tag.html":{},"components/TagSelectionComponent.html":{},"classes/User.html":{},"components/UserEditListComponent.html":{},"injectables/UserInfoService.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"classes/WikiEntry.html":{},"classes/WikiEntryBuilder.html":{},"components/WikiEntryEditorComponent.html":{},"components/WikiEntryViewComponent.html":{},"classes/Wrapper.html":{}}}],["constructor(@optional",{"_index":1548,"title":{},"body":{"injectables/ProjectConfigService.html":{}}}],["constructor(activatedroute",{"_index":2269,"title":{},"body":{"components/ViewEditComponent.html":{}}}],["constructor(editservice",{"_index":1963,"title":{},"body":{"components/UserEditListComponent.html":{}}}],["constructor(entry",{"_index":1855,"title":{},"body":{"classes/Tag.html":{}}}],["constructor(http",{"_index":876,"title":{},"body":{"injectables/EditService.html":{},"injectables/LoginService.html":{}}}],["constructor(loginservice",{"_index":1741,"title":{},"body":{"components/ResetPasswordModalComponent.html":{},"injectables/UserInfoService.html":{}}}],["constructor(museumservice",{"_index":1031,"title":{},"body":{"injectables/GetByCategoryService.html":{},"components/TagSelectionComponent.html":{}}}],["constructor(name",{"_index":446,"title":{},"body":{"classes/BasicEntry.html":{},"classes/Museum.html":{},"classes/WikiEntry.html":{}}}],["constructor(private",{"_index":420,"title":{},"body":{"injectables/ArtifactService.html":{},"injectables/CollectionService.html":{},"components/CreateComponent.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"injectables/EditService.html":{},"components/EntryListComponent.html":{},"injectables/GetByCategoryService.html":{},"components/LoginComponent.html":{},"guards/LoginGuardService.html":{},"injectables/LoginService.html":{},"components/MuseumListComponent.html":{},"injectables/MuseumService.html":{},"components/NavigationBarComponent.html":{},"injectables/PreviousRouteService.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordModalComponent.html":{},"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{},"classes/ServerConfig.html":{},"injectables/ServerConfigService.html":{},"components/TagSelectionComponent.html":{},"components/UserEditListComponent.html":{},"injectables/UserInfoService.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryViewComponent.html":{}}}],["constructor(projectconfig",{"_index":1545,"title":{},"body":{"injectables/ProjectConfigService.html":{},"classes/ServerConfig.html":{}}}],["constructor(projectconfigservice",{"_index":1838,"title":{},"body":{"injectables/ServerConfigService.html":{}}}],["constructor(route",{"_index":616,"title":{},"body":{"components/CreateComponent.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"components/SearchInCategoryComponent.html":{},"components/ViewComponent.html":{}}}],["constructor(router",{"_index":922,"title":{},"body":{"components/EntryListComponent.html":{},"components/LoginComponent.html":{},"components/MuseumListComponent.html":{},"components/NavigationBarComponent.html":{},"injectables/PreviousRouteService.html":{},"components/RegistrationComponent.html":{},"components/SearchComponent.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/WikiEntryViewComponent.html":{}}}],["constructor(self",{"_index":507,"title":{},"body":{"classes/Collection.html":{}}}],["constructor(serverconfigservice",{"_index":377,"title":{},"body":{"injectables/ArtifactService.html":{},"injectables/CollectionService.html":{},"injectables/MuseumService.html":{}}}],["constructor(success",{"_index":1844,"title":{},"body":{"classes/ServerResponse.html":{}}}],["constructor(testing",{"_index":1511,"title":{},"body":{"classes/ProjectConfig.html":{}}}],["constructor(type",{"_index":465,"title":{},"body":{"classes/BasicEntryBuilder.html":{},"classes/WikiEntryBuilder.html":{}}}],["constructor(userinfoservice",{"_index":1187,"title":{},"body":{"guards/LoginGuardService.html":{}}}],["constructor(username",{"_index":483,"title":{},"body":{"classes/BasicUserInfo.html":{},"classes/User.html":{}}}],["constructor(value",{"_index":2434,"title":{},"body":{"classes/Wrapper.html":{}}}],["contain",{"_index":1724,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["containing",{"_index":509,"title":{},"body":{"classes/Collection.html":{},"components/EntryListComponent.html":{},"components/MarkdownDisplayComponent.html":{},"components/ModalMessageComponent.html":{},"classes/Museum.html":{},"classes/ProtoUser.html":{},"components/RegistrationComponent.html":{},"components/WikiEntryEditorComponent.html":{},"components/WikiEntryViewComponent.html":{}}}],["contains",{"_index":124,"title":{},"body":{"components/AppComponent.html":{},"components/CollectionListComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/EditComponent.html":{},"components/ModalMessageComponent.html":{},"classes/ProtoCollection.html":{},"components/TagSelectionComponent.html":{}}}],["content",{"_index":599,"title":{},"body":{"components/ConfirmationModalComponent.html":{},"components/ViewComponent.html":{},"components/WikiEntryViewComponent.html":{}}}],["contentparent.name",{"_index":2255,"title":{},"body":{"components/ViewComponent.html":{}}}],["contentparents",{"_index":2196,"title":{},"body":{"components/ViewComponent.html":{}}}],["contentsublist",{"_index":2197,"title":{},"body":{"components/ViewComponent.html":{}}}],["context",{"_index":2475,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["continue",{"_index":1198,"title":{},"body":{"guards/LoginGuardService.html":{}}}],["control",{"_index":1260,"title":{},"body":{"components/MarkdownEditorComponent.html":{}}}],["convert",{"_index":485,"title":{},"body":{"classes/BasicUserInfo.html":{},"components/CollectionListComponent.html":{},"classes/ProtoEdit.html":{},"classes/ProtoUser.html":{},"components/UserProfileComponent.html":{}}}],["converted",{"_index":1560,"title":{},"body":{"classes/ProtoArtifact.html":{},"classes/ProtoCollection.html":{},"classes/ProtoEdit.html":{},"classes/ProtoUser.html":{}}}],["converts",{"_index":1559,"title":{},"body":{"classes/ProtoArtifact.html":{},"classes/ProtoCollection.html":{}}}],["cookie",{"_index":2096,"title":{},"body":{"injectables/UserInfoService.html":{},"dependencies.html":{}}}],["cookies",{"_index":2070,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["cookieservice",{"_index":2068,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["cookieservice.check('password",{"_index":2100,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["cookieservice.check('username",{"_index":2099,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["cookieservice.get('password",{"_index":2103,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["copy",{"_index":350,"title":{},"body":{"classes/ArtifactBuilder.html":{},"classes/CollectionBuilder.html":{},"components/FooterComponent.html":{},"classes/Museum.html":{},"classes/MuseumBuilder.html":{},"classes/WikiEntryBuilder.html":{}}}],["copyright",{"_index":1011,"title":{},"body":{"components/FooterComponent.html":{}}}],["core",{"_index":2490,"title":{},"body":{"dependencies.html":{}}}],["correct",{"_index":1675,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["corresponding",{"_index":336,"title":{},"body":{"classes/ArtifactBuilder.html":{},"components/EditComponent.html":{},"pipes/MarkedPipe.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{}}}],["coverage",{"_index":2437,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cpp",{"_index":1827,"title":{},"body":{"classes/ServerConfig.html":{}}}],["create",{"_index":327,"title":{},"body":{"classes/ArtifactBuilder.html":{},"classes/BasicUserInfo.html":{},"classes/Collection.html":{},"components/CreateComponent.html":{},"classes/EditBuilder.html":{},"components/EditOrCreateComponent.html":{},"components/EntryListComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/Mocker.html":{},"components/RegistrationComponent.html":{},"classes/User.html":{},"injectables/UserInfoService.html":{},"miscellaneous/enumerations.html":{}}}],["create'},{'name",{"_index":66,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/CollectionListComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/CreateComponent.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"components/EntryListComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownDisplayComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/ModalMessageComponent.html":{},"components/MuseumListComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordModalComponent.html":{},"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{},"components/TagSelectionComponent.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryEditorComponent.html":{},"components/WikiEntryViewComponent.html":{}}}],["create.component",{"_index":188,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["create.component.css",{"_index":612,"title":{},"body":{"components/CreateComponent.html":{},"components/EditOrCreateComponent.html":{}}}],["create.component.html",{"_index":613,"title":{},"body":{"components/CreateComponent.html":{},"components/EditOrCreateComponent.html":{}}}],["create.component.ts",{"_index":766,"title":{},"body":{"components/EditOrCreateComponent.html":{},"coverage.html":{}}}],["create.component.ts:105",{"_index":796,"title":{},"body":{"components/EditOrCreateComponent.html":{}}}],["create.component.ts:120",{"_index":799,"title":{},"body":{"components/EditOrCreateComponent.html":{}}}],["create.component.ts:143",{"_index":791,"title":{},"body":{"components/EditOrCreateComponent.html":{}}}],["create.component.ts:151",{"_index":800,"title":{},"body":{"components/EditOrCreateComponent.html":{}}}],["create.component.ts:38",{"_index":787,"title":{},"body":{"components/EditOrCreateComponent.html":{}}}],["create.component.ts:42",{"_index":790,"title":{},"body":{"components/EditOrCreateComponent.html":{}}}],["create.component.ts:47",{"_index":788,"title":{},"body":{"components/EditOrCreateComponent.html":{}}}],["create.component.ts:52",{"_index":804,"title":{},"body":{"components/EditOrCreateComponent.html":{}}}],["create.component.ts:58",{"_index":789,"title":{},"body":{"components/EditOrCreateComponent.html":{}}}],["create.component.ts:62",{"_index":802,"title":{},"body":{"components/EditOrCreateComponent.html":{}}}],["create.component.ts:68",{"_index":811,"title":{},"body":{"components/EditOrCreateComponent.html":{}}}],["create.component.ts:74",{"_index":807,"title":{},"body":{"components/EditOrCreateComponent.html":{}}}],["create.component.ts:79",{"_index":780,"title":{},"body":{"components/EditOrCreateComponent.html":{}}}],["create/:category",{"_index":273,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["create/:category/:museumid",{"_index":275,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["create/edit",{"_index":187,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EditOrCreateComponent.html":{},"coverage.html":{}}}],["create/view",{"_index":926,"title":{},"body":{"components/EntryListComponent.html":{}}}],["createcomponent",{"_index":65,"title":{"components/CreateComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CollectionListComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/CreateComponent.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"components/EntryListComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownDisplayComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/ModalMessageComponent.html":{},"components/MuseumListComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordModalComponent.html":{},"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{},"components/TagSelectionComponent.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryEditorComponent.html":{},"components/WikiEntryViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["created",{"_index":325,"title":{},"body":{"classes/ArtifactBuilder.html":{},"injectables/ArtifactService.html":{},"classes/BasicEntryBuilder.html":{},"classes/CollectionBuilder.html":{},"classes/MuseumBuilder.html":{},"injectables/MuseumService.html":{},"injectables/ProjectConfigService.html":{},"classes/Tag.html":{},"classes/WikiEntryBuilder.html":{},"components/WikiEntryEditorComponent.html":{},"classes/Wrapper.html":{}}}],["createitem",{"_index":915,"title":{},"body":{"components/EntryListComponent.html":{}}}],["createmode",{"_index":769,"title":{},"body":{"components/EditOrCreateComponent.html":{}}}],["creates",{"_index":321,"title":{},"body":{"classes/ArtifactBuilder.html":{},"classes/BasicEntryBuilder.html":{},"classes/CollectionBuilder.html":{},"classes/EditBuilder.html":{},"classes/HashHelper.html":{},"classes/Museum.html":{},"classes/MuseumBuilder.html":{},"classes/ProjectConfig.html":{},"injectables/ProjectConfigService.html":{},"injectables/ServerConfigService.html":{},"classes/Tag.html":{},"classes/WikiEntryBuilder.html":{}}}],["creating",{"_index":566,"title":{},"body":{"injectables/CollectionService.html":{}}}],["credentials",{"_index":1220,"title":{},"body":{"injectables/LoginService.html":{}}}],["credits",{"_index":2372,"title":{},"body":{"components/WikiEntryEditorComponent.html":{}}}],["crud",{"_index":370,"title":{},"body":{"injectables/ArtifactService.html":{},"injectables/CollectionService.html":{},"injectables/MuseumService.html":{}}}],["cs205",{"_index":2522,"title":{},"body":{"index.html":{}}}],["curator",{"_index":1060,"title":{},"body":{"components/HomeComponent.html":{},"classes/ProtoUser.html":{},"classes/User.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{}}}],["current",{"_index":620,"title":{},"body":{"components/CreateComponent.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"components/EntryListComponent.html":{},"components/MarkdownEditorComponent.html":{},"injectables/ProjectConfigService.html":{},"classes/ProtoArtifact.html":{},"components/SearchInCategoryComponent.html":{},"classes/ServerConfig.html":{},"injectables/ServerConfigService.html":{},"classes/Tag.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryViewComponent.html":{},"index.html":{}}}],["currententry",{"_index":2259,"title":{},"body":{"components/ViewEditComponent.html":{}}}],["currently",{"_index":16,"title":{},"body":{"components/AboutComponent.html":{},"components/CollectionListComponent.html":{},"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{},"classes/ServerConfig.html":{},"components/ViewComponent.html":{},"components/WikiEntryEditorComponent.html":{},"miscellaneous/variables.html":{}}}],["currentusername",{"_index":2260,"title":{},"body":{"components/ViewEditComponent.html":{}}}],["cursor",{"_index":1272,"title":{},"body":{"components/MarkdownEditorComponent.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{}}}],["custom",{"_index":338,"title":{},"body":{"classes/ArtifactBuilder.html":{},"classes/CollectionBuilder.html":{},"classes/MuseumBuilder.html":{},"classes/WikiEntryBuilder.html":{}}}],["data",{"_index":729,"title":{},"body":{"components/EditComponent.html":{},"components/LoadingComponent.html":{},"classes/ProjectConfig.html":{},"classes/ServerConfig.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"index.html":{}}}],["database",{"_index":1751,"title":{},"body":{"components/SearchComponent.html":{},"components/ViewEditComponent.html":{}}}],["date",{"_index":640,"title":{},"body":{"classes/Edit.html":{},"classes/EditBuilder.html":{},"classes/ProtoEdit.html":{},"components/UserEditListComponent.html":{}}}],["date(protoedit.time",{"_index":1603,"title":{},"body":{"classes/ProtoEdit.html":{}}}],["date(value",{"_index":684,"title":{},"body":{"classes/EditBuilder.html":{}}}],["date:'short",{"_index":2051,"title":{},"body":{"components/UserEditListComponent.html":{}}}],["date:\\'short",{"_index":2056,"title":{},"body":{"components/UserEditListComponent.html":{}}}],["datepipe",{"_index":248,"title":{},"body":{"modules/AppModule.html":{}}}],["debugging",{"_index":1524,"title":{},"body":{"classes/ProjectConfig.html":{}}}],["declarations",{"_index":142,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["decorators",{"_index":805,"title":{},"body":{"components/EditOrCreateComponent.html":{}}}],["default",{"_index":133,"title":{},"body":{"components/AppComponent.html":{},"injectables/ArtifactService.html":{},"injectables/CollectionService.html":{},"components/CreateComponent.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"components/EntryListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"classes/Mocker.html":{},"components/ModalMessageComponent.html":{},"components/MuseumListComponent.html":{},"injectables/MuseumService.html":{},"components/NavigationBarComponent.html":{},"classes/ProjectConfig.html":{},"components/RegistrationComponent.html":{},"components/SearchComponent.html":{},"classes/ServerCannotConnect.html":{},"classes/ServerConfig.html":{},"classes/Tag.html":{},"pipes/TextLimitPipe.html":{},"components/UserEditListComponent.html":{},"injectables/UserInfoService.html":{},"components/UserMuseumListComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryEditorComponent.html":{},"miscellaneous/variables.html":{}}}],["default_search_category",{"_index":1754,"title":{},"body":{"components/SearchComponent.html":{}}}],["defined",{"_index":30,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"classes/Artifact.html":{},"classes/ArtifactBuilder.html":{},"injectables/ArtifactService.html":{},"classes/BasicEntry.html":{},"classes/BasicEntryBuilder.html":{},"classes/BasicUserInfo.html":{},"classes/Collection.html":{},"classes/CollectionBuilder.html":{},"components/CollectionListComponent.html":{},"injectables/CollectionService.html":{},"components/ConfirmationModalComponent.html":{},"components/CreateComponent.html":{},"classes/Edit.html":{},"classes/EditBuilder.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"injectables/EditService.html":{},"components/EntryListComponent.html":{},"components/FooterComponent.html":{},"injectables/GetByCategoryService.html":{},"classes/HashHelper.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardService.html":{},"injectables/LoginService.html":{},"components/MarkdownDisplayComponent.html":{},"components/MarkdownEditorComponent.html":{},"pipes/MarkedPipe.html":{},"classes/Mocker.html":{},"components/ModalMessageComponent.html":{},"classes/Museum.html":{},"classes/MuseumBuilder.html":{},"components/MuseumListComponent.html":{},"injectables/MuseumService.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"injectables/PreviousRouteService.html":{},"classes/ProjectConfig.html":{},"injectables/ProjectConfigService.html":{},"classes/ProtoArtifact.html":{},"classes/ProtoCollection.html":{},"classes/ProtoEdit.html":{},"classes/ProtoMuseum.html":{},"classes/ProtoUser.html":{},"classes/PrototypeBuilder.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordModalComponent.html":{},"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{},"classes/ServerCannotConnect.html":{},"classes/ServerConfig.html":{},"injectables/ServerConfigService.html":{},"classes/ServerResponse.html":{},"classes/Tag.html":{},"components/TagSelectionComponent.html":{},"pipes/TextLimitPipe.html":{},"classes/User.html":{},"components/UserEditListComponent.html":{},"injectables/UserInfoService.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"classes/WikiEntry.html":{},"classes/WikiEntryBuilder.html":{},"components/WikiEntryEditorComponent.html":{},"components/WikiEntryViewComponent.html":{},"classes/Wrapper.html":{}}}],["delete",{"_index":400,"title":{},"body":{"injectables/ArtifactService.html":{},"classes/Edit.html":{},"classes/Mocker.html":{},"injectables/MuseumService.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/WikiEntryViewComponent.html":{},"miscellaneous/variables.html":{}}}],["delete(entry",{"_index":2142,"title":{},"body":{"components/UserMuseumListComponent.html":{}}}],["deleteartifact",{"_index":375,"title":{},"body":{"injectables/ArtifactService.html":{}}}],["deleteartifact(id",{"_index":398,"title":{},"body":{"injectables/ArtifactService.html":{}}}],["deleteartifact(this.wikientry.id",{"_index":2421,"title":{},"body":{"components/WikiEntryViewComponent.html":{}}}],["deleted",{"_index":1429,"title":{},"body":{"injectables/MuseumService.html":{},"components/UserMuseumListComponent.html":{},"components/WikiEntryViewComponent.html":{}}}],["deletemuseum",{"_index":1420,"title":{},"body":{"injectables/MuseumService.html":{}}}],["deletemuseum(museumid",{"_index":1427,"title":{},"body":{"injectables/MuseumService.html":{}}}],["deletion",{"_index":668,"title":{},"body":{"classes/Edit.html":{},"components/UserMuseumListComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryViewComponent.html":{}}}],["denied",{"_index":644,"title":{},"body":{"classes/Edit.html":{},"classes/Mocker.html":{},"components/UserEditListComponent.html":{},"components/ViewEditComponent.html":{}}}],["deny",{"_index":1957,"title":{},"body":{"components/UserEditListComponent.html":{},"components/ViewEditComponent.html":{}}}],["deny(entry",{"_index":1975,"title":{},"body":{"components/UserEditListComponent.html":{},"components/ViewEditComponent.html":{}}}],["dependencies",{"_index":141,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["deployed",{"_index":1821,"title":{},"body":{"classes/ServerConfig.html":{}}}],["deployment",{"_index":1527,"title":{},"body":{"classes/ProjectConfig.html":{}}}],["deploymentserverurl",{"_index":1814,"title":{},"body":{"classes/ServerConfig.html":{}}}],["descending",{"_index":1999,"title":{},"body":{"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{}}}],["describes",{"_index":635,"title":{},"body":{"classes/Edit.html":{}}}],["description",{"_index":11,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"classes/Artifact.html":{},"classes/ArtifactBuilder.html":{},"injectables/ArtifactService.html":{},"classes/BasicEntry.html":{},"classes/BasicEntryBuilder.html":{},"classes/BasicUserInfo.html":{},"classes/Collection.html":{},"classes/CollectionBuilder.html":{},"components/CollectionListComponent.html":{},"injectables/CollectionService.html":{},"components/ConfirmationModalComponent.html":{},"components/CreateComponent.html":{},"classes/Edit.html":{},"classes/EditBuilder.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"injectables/EditService.html":{},"components/EntryListComponent.html":{},"components/FooterComponent.html":{},"injectables/GetByCategoryService.html":{},"classes/HashHelper.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardService.html":{},"injectables/LoginService.html":{},"components/MarkdownDisplayComponent.html":{},"components/MarkdownEditorComponent.html":{},"pipes/MarkedPipe.html":{},"classes/Mocker.html":{},"components/ModalMessageComponent.html":{},"classes/Museum.html":{},"classes/MuseumBuilder.html":{},"components/MuseumListComponent.html":{},"injectables/MuseumService.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"injectables/PreviousRouteService.html":{},"classes/ProjectConfig.html":{},"injectables/ProjectConfigService.html":{},"classes/ProtoArtifact.html":{},"classes/ProtoCollection.html":{},"classes/ProtoEdit.html":{},"classes/ProtoMuseum.html":{},"classes/ProtoUser.html":{},"classes/PrototypeBuilder.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordModalComponent.html":{},"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{},"classes/ServerCannotConnect.html":{},"classes/ServerConfig.html":{},"injectables/ServerConfigService.html":{},"classes/ServerResponse.html":{},"classes/Tag.html":{},"components/TagSelectionComponent.html":{},"pipes/TextLimitPipe.html":{},"classes/User.html":{},"components/UserEditListComponent.html":{},"injectables/UserInfoService.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"classes/WikiEntry.html":{},"classes/WikiEntryBuilder.html":{},"components/WikiEntryEditorComponent.html":{},"components/WikiEntryViewComponent.html":{},"classes/Wrapper.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["description(description",{"_index":339,"title":{},"body":{"classes/ArtifactBuilder.html":{},"classes/CollectionBuilder.html":{},"classes/MuseumBuilder.html":{},"classes/WikiEntryBuilder.html":{}}}],["description(form.get('description').value",{"_index":2395,"title":{},"body":{"components/WikiEntryEditorComponent.html":{}}}],["description\\nthis",{"_index":1325,"title":{},"body":{"classes/Mocker.html":{}}}],["descriptionformcontrol",{"_index":1255,"title":{},"body":{"components/MarkdownEditorComponent.html":{}}}],["desired",{"_index":544,"title":{},"body":{"components/CollectionListComponent.html":{},"classes/EditBuilder.html":{},"components/UserMuseumListComponent.html":{}}}],["despite",{"_index":2403,"title":{},"body":{"components/WikiEntryViewComponent.html":{}}}],["destination",{"_index":950,"title":{},"body":{"components/EntryListComponent.html":{},"guards/LoginGuardService.html":{},"components/MuseumListComponent.html":{},"components/NavigationBarComponent.html":{}}}],["detailed",{"_index":12,"title":{},"body":{"components/AboutComponent.html":{},"classes/Artifact.html":{},"classes/Collection.html":{},"injectables/EditService.html":{},"classes/Museum.html":{},"classes/User.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"classes/WikiEntry.html":{}}}],["details",{"_index":1810,"title":{},"body":{"classes/ServerCannotConnect.html":{},"classes/ServerResponse.html":{},"components/UserMuseumListComponent.html":{},"components/ViewEditComponent.html":{}}}],["determine",{"_index":1096,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/WikiEntryViewComponent.html":{}}}],["determines",{"_index":1818,"title":{},"body":{"classes/ServerConfig.html":{},"components/WikiEntryViewComponent.html":{}}}],["determining",{"_index":713,"title":{},"body":{"components/EditComponent.html":{}}}],["detrimental",{"_index":587,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["dev",{"_index":2540,"title":{},"body":{"index.html":{}}}],["development",{"_index":48,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["dictionary",{"_index":1891,"title":{},"body":{"components/TagSelectionComponent.html":{}}}],["different",{"_index":961,"title":{},"body":{"components/EntryListComponent.html":{}}}],["direct",{"_index":1355,"title":{},"body":{"components/ModalMessageComponent.html":{}}}],["directive",{"_index":52,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/CollectionListComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/CreateComponent.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"components/EntryListComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownDisplayComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/ModalMessageComponent.html":{},"components/MuseumListComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordModalComponent.html":{},"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{},"components/TagSelectionComponent.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryEditorComponent.html":{},"components/WikiEntryViewComponent.html":{}}}],["directives",{"_index":117,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/CollectionListComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/CreateComponent.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"components/EntryListComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownDisplayComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/ModalMessageComponent.html":{},"components/MuseumListComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordModalComponent.html":{},"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{},"components/TagSelectionComponent.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryEditorComponent.html":{},"components/WikiEntryViewComponent.html":{}}}],["directly",{"_index":1211,"title":{},"body":{"injectables/LoginService.html":{}}}],["directory",{"_index":2533,"title":{},"body":{"index.html":{}}}],["disabled",{"_index":1271,"title":{},"body":{"components/MarkdownEditorComponent.html":{}}}],["dismiss",{"_index":1177,"title":{},"body":{"components/LoginComponent.html":{}}}],["dismissed",{"_index":1179,"title":{},"body":{"components/LoginComponent.html":{}}}],["dismissreason",{"_index":2159,"title":{},"body":{"components/UserMuseumListComponent.html":{}}}],["display",{"_index":541,"title":{},"body":{"components/CollectionListComponent.html":{},"components/EntryListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownDisplayComponent.html":{},"components/ModalMessageComponent.html":{},"components/MuseumListComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RegistrationComponent.html":{},"classes/ServerCannotConnect.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{}}}],["display'},{'name",{"_index":83,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/CollectionListComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/CreateComponent.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"components/EntryListComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownDisplayComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/ModalMessageComponent.html":{},"components/MuseumListComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordModalComponent.html":{},"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{},"components/TagSelectionComponent.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryEditorComponent.html":{},"components/WikiEntryViewComponent.html":{}}}],["display.component",{"_index":194,"title":{},"body":{"modules/AppModule.html":{}}}],["display.component.css",{"_index":1241,"title":{},"body":{"components/MarkdownDisplayComponent.html":{}}}],["display.component.html",{"_index":1242,"title":{},"body":{"components/MarkdownDisplayComponent.html":{}}}],["display.component.ts",{"_index":1238,"title":{},"body":{"components/MarkdownDisplayComponent.html":{},"coverage.html":{}}}],["display.component.ts:16",{"_index":1244,"title":{},"body":{"components/MarkdownDisplayComponent.html":{}}}],["display.component.ts:21",{"_index":1245,"title":{},"body":{"components/MarkdownDisplayComponent.html":{}}}],["display/markdown",{"_index":193,"title":{},"body":{"modules/AppModule.html":{},"components/MarkdownDisplayComponent.html":{},"coverage.html":{}}}],["displaychanged",{"_index":2261,"title":{},"body":{"components/ViewEditComponent.html":{}}}],["displaycurrent",{"_index":2262,"title":{},"body":{"components/ViewEditComponent.html":{}}}],["displayed",{"_index":300,"title":{},"body":{"classes/Artifact.html":{},"classes/Collection.html":{},"components/CollectionListComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/EntryListComponent.html":{},"classes/Museum.html":{},"components/NavigationBarComponent.html":{},"components/TagSelectionComponent.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"classes/WikiEntry.html":{},"components/WikiEntryViewComponent.html":{}}}],["displaylist",{"_index":912,"title":{},"body":{"components/EntryListComponent.html":{}}}],["displays",{"_index":533,"title":{},"body":{"components/CollectionListComponent.html":{},"components/FooterComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/ModalMessageComponent.html":{},"components/ResetPasswordModalComponent.html":{},"components/UserProfileComponent.html":{}}}],["distribute",{"_index":2553,"title":{},"body":{"index.html":{}}}],["div.left",{"_index":2332,"title":{},"body":{"components/ViewEditComponent.html":{}}}],["divider",{"_index":2333,"title":{},"body":{"components/ViewEditComponent.html":{}}}],["documentation",{"_index":2438,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["documentation/index.html",{"_index":2563,"title":{},"body":{"index.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/CollectionListComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/CreateComponent.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"components/EntryListComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownDisplayComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/ModalMessageComponent.html":{},"components/MuseumListComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordModalComponent.html":{},"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{},"components/TagSelectionComponent.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryEditorComponent.html":{},"components/WikiEntryViewComponent.html":{}}}],["don't",{"_index":2053,"title":{},"body":{"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{}}}],["don\\'t",{"_index":2057,"title":{},"body":{"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{}}}],["down",{"_index":1809,"title":{},"body":{"classes/ServerCannotConnect.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{}}}],["during",{"_index":2583,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dynamic",{"_index":2487,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":322,"title":{},"body":{"classes/ArtifactBuilder.html":{},"classes/BasicEntryBuilder.html":{},"classes/CollectionBuilder.html":{},"classes/MuseumBuilder.html":{},"classes/WikiEntryBuilder.html":{}}}],["e.g",{"_index":2193,"title":{},"body":{"components/ViewComponent.html":{}}}],["e2e",{"_index":253,"title":{},"body":{"classes/AppPage.html":{}}}],["e2e/src/app.po.ts",{"_index":252,"title":{},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["easy",{"_index":2594,"title":{},"body":{"miscellaneous/variables.html":{}}}],["edit",{"_index":70,"title":{"classes/Edit.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/ArtifactService.html":{},"components/CollectionListComponent.html":{},"injectables/CollectionService.html":{},"components/ConfirmationModalComponent.html":{},"components/CreateComponent.html":{},"classes/Edit.html":{},"classes/EditBuilder.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"injectables/EditService.html":{},"components/EntryListComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownDisplayComponent.html":{},"components/MarkdownEditorComponent.html":{},"classes/Mocker.html":{},"components/ModalMessageComponent.html":{},"components/MuseumListComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"classes/ProtoEdit.html":{},"classes/ProtoUser.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordModalComponent.html":{},"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{},"components/TagSelectionComponent.html":{},"classes/User.html":{},"components/UserEditListComponent.html":{},"injectables/UserInfoService.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryEditorComponent.html":{},"components/WikiEntryViewComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["edit'},{'name",{"_index":68,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/CollectionListComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/CreateComponent.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"components/EntryListComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownDisplayComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/ModalMessageComponent.html":{},"components/MuseumListComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordModalComponent.html":{},"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{},"components/TagSelectionComponent.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryEditorComponent.html":{},"components/WikiEntryViewComponent.html":{}}}],["edit.approvalstatus",{"_index":1319,"title":{},"body":{"classes/Mocker.html":{}}}],["edit.category",{"_index":895,"title":{},"body":{"injectables/EditService.html":{},"classes/Mocker.html":{}}}],["edit.component",{"_index":240,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["edit.component.css",{"_index":706,"title":{},"body":{"components/EditComponent.html":{},"components/ViewEditComponent.html":{}}}],["edit.component.html",{"_index":707,"title":{},"body":{"components/EditComponent.html":{},"components/ViewEditComponent.html":{}}}],["edit.component.ts",{"_index":2257,"title":{},"body":{"components/ViewEditComponent.html":{},"coverage.html":{}}}],["edit.component.ts:120",{"_index":2284,"title":{},"body":{"components/ViewEditComponent.html":{}}}],["edit.component.ts:131",{"_index":2274,"title":{},"body":{"components/ViewEditComponent.html":{}}}],["edit.component.ts:157",{"_index":2280,"title":{},"body":{"components/ViewEditComponent.html":{}}}],["edit.component.ts:193",{"_index":2273,"title":{},"body":{"components/ViewEditComponent.html":{}}}],["edit.component.ts:202",{"_index":2272,"title":{},"body":{"components/ViewEditComponent.html":{}}}],["edit.component.ts:212",{"_index":2281,"title":{},"body":{"components/ViewEditComponent.html":{}}}],["edit.component.ts:233",{"_index":2279,"title":{},"body":{"components/ViewEditComponent.html":{}}}],["edit.component.ts:242",{"_index":2277,"title":{},"body":{"components/ViewEditComponent.html":{}}}],["edit.component.ts:38",{"_index":2297,"title":{},"body":{"components/ViewEditComponent.html":{}}}],["edit.component.ts:42",{"_index":2288,"title":{},"body":{"components/ViewEditComponent.html":{}}}],["edit.component.ts:46",{"_index":2301,"title":{},"body":{"components/ViewEditComponent.html":{}}}],["edit.component.ts:51",{"_index":2296,"title":{},"body":{"components/ViewEditComponent.html":{}}}],["edit.component.ts:56",{"_index":2291,"title":{},"body":{"components/ViewEditComponent.html":{}}}],["edit.component.ts:60",{"_index":2290,"title":{},"body":{"components/ViewEditComponent.html":{}}}],["edit.component.ts:65",{"_index":2300,"title":{},"body":{"components/ViewEditComponent.html":{}}}],["edit.component.ts:69",{"_index":2298,"title":{},"body":{"components/ViewEditComponent.html":{}}}],["edit.component.ts:74",{"_index":2295,"title":{},"body":{"components/ViewEditComponent.html":{}}}],["edit.component.ts:78",{"_index":2293,"title":{},"body":{"components/ViewEditComponent.html":{}}}],["edit.component.ts:83",{"_index":2285,"title":{},"body":{"components/ViewEditComponent.html":{}}}],["edit.component.ts:88",{"_index":2292,"title":{},"body":{"components/ViewEditComponent.html":{}}}],["edit.component.ts:90",{"_index":2270,"title":{},"body":{"components/ViewEditComponent.html":{}}}],["edit.id",{"_index":894,"title":{},"body":{"injectables/EditService.html":{},"classes/Mocker.html":{}}}],["edit.ts",{"_index":1578,"title":{},"body":{"classes/ProtoEdit.html":{},"coverage.html":{}}}],["edit.ts:19",{"_index":1587,"title":{},"body":{"classes/ProtoEdit.html":{}}}],["edit.ts:23",{"_index":1592,"title":{},"body":{"classes/ProtoEdit.html":{}}}],["edit.ts:27",{"_index":1584,"title":{},"body":{"classes/ProtoEdit.html":{}}}],["edit.ts:31",{"_index":1582,"title":{},"body":{"classes/ProtoEdit.html":{}}}],["edit.ts:35",{"_index":1586,"title":{},"body":{"classes/ProtoEdit.html":{}}}],["edit.ts:39",{"_index":1588,"title":{},"body":{"classes/ProtoEdit.html":{}}}],["edit.ts:43",{"_index":1580,"title":{},"body":{"classes/ProtoEdit.html":{}}}],["edit.ts:47",{"_index":1591,"title":{},"body":{"classes/ProtoEdit.html":{}}}],["edit.ts:51",{"_index":1589,"title":{},"body":{"classes/ProtoEdit.html":{}}}],["edit.ts:55",{"_index":1590,"title":{},"body":{"classes/ProtoEdit.html":{}}}],["edit.ts:62",{"_index":1595,"title":{},"body":{"classes/ProtoEdit.html":{}}}],["edit.type",{"_index":896,"title":{},"body":{"injectables/EditService.html":{},"classes/Mocker.html":{}}}],["edit/:category/:id",{"_index":276,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["edit/:editid",{"_index":277,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["edit/create",{"_index":786,"title":{},"body":{"components/EditOrCreateComponent.html":{}}}],["edit/create/create.component",{"_index":231,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["edit/edit",{"_index":186,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["edit/edit/edit.component",{"_index":230,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["edit/markdown",{"_index":189,"title":{},"body":{"modules/AppModule.html":{}}}],["edit/mode",{"_index":416,"title":{},"body":{"injectables/ArtifactService.html":{},"injectables/CollectionService.html":{},"injectables/MuseumService.html":{}}}],["edit/tag",{"_index":214,"title":{},"body":{"modules/AppModule.html":{}}}],["edit/view",{"_index":239,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ViewEditComponent.html":{},"coverage.html":{}}}],["edit/wiki",{"_index":195,"title":{},"body":{"modules/AppModule.html":{}}}],["editbuilder",{"_index":669,"title":{"classes/EditBuilder.html":{}},"body":{"classes/EditBuilder.html":{},"classes/ProtoEdit.html":{},"coverage.html":{}}}],["editcomponent",{"_index":67,"title":{"components/EditComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CollectionListComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/CreateComponent.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"components/EntryListComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownDisplayComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/ModalMessageComponent.html":{},"components/MuseumListComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordModalComponent.html":{},"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{},"components/TagSelectionComponent.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryEditorComponent.html":{},"components/WikiEntryViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["edited",{"_index":396,"title":{},"body":{"injectables/ArtifactService.html":{},"components/EditComponent.html":{},"injectables/MuseumService.html":{},"classes/ProtoEdit.html":{},"components/ViewEditComponent.html":{}}}],["editid",{"_index":893,"title":{},"body":{"injectables/EditService.html":{},"components/ViewEditComponent.html":{}}}],["editing",{"_index":567,"title":{},"body":{"injectables/CollectionService.html":{}}}],["editlist",{"_index":1960,"title":{},"body":{"components/UserEditListComponent.html":{}}}],["editor",{"_index":725,"title":{},"body":{"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/WikiEntryEditorComponent.html":{}}}],["editor'},{'name",{"_index":85,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/CollectionListComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/CreateComponent.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"components/EntryListComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownDisplayComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/ModalMessageComponent.html":{},"components/MuseumListComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordModalComponent.html":{},"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{},"components/TagSelectionComponent.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryEditorComponent.html":{},"components/WikiEntryViewComponent.html":{}}}],["editor.component",{"_index":191,"title":{},"body":{"modules/AppModule.html":{},"components/EditOrCreateComponent.html":{}}}],["editor.component.css",{"_index":1250,"title":{},"body":{"components/MarkdownEditorComponent.html":{},"components/WikiEntryEditorComponent.html":{}}}],["editor.component.html",{"_index":1251,"title":{},"body":{"components/MarkdownEditorComponent.html":{},"components/WikiEntryEditorComponent.html":{}}}],["editor.component.ts",{"_index":1248,"title":{},"body":{"components/MarkdownEditorComponent.html":{},"components/WikiEntryEditorComponent.html":{},"coverage.html":{}}}],["editor.component.ts:17",{"_index":1259,"title":{},"body":{"components/MarkdownEditorComponent.html":{}}}],["editor.component.ts:19",{"_index":2371,"title":{},"body":{"components/WikiEntryEditorComponent.html":{}}}],["editor.component.ts:22",{"_index":1263,"title":{},"body":{"components/MarkdownEditorComponent.html":{}}}],["editor.component.ts:24",{"_index":2365,"title":{},"body":{"components/WikiEntryEditorComponent.html":{}}}],["editor.component.ts:27",{"_index":1256,"title":{},"body":{"components/MarkdownEditorComponent.html":{}}}],["editor.component.ts:29",{"_index":2364,"title":{},"body":{"components/WikiEntryEditorComponent.html":{}}}],["editor.component.ts:39",{"_index":1261,"title":{},"body":{"components/MarkdownEditorComponent.html":{}}}],["editor.component.ts:40",{"_index":2367,"title":{},"body":{"components/WikiEntryEditorComponent.html":{}}}],["editor.component.ts:63",{"_index":2366,"title":{},"body":{"components/WikiEntryEditorComponent.html":{}}}],["editor/markdown",{"_index":190,"title":{},"body":{"modules/AppModule.html":{},"components/MarkdownEditorComponent.html":{},"coverage.html":{}}}],["editor/wiki",{"_index":196,"title":{},"body":{"modules/AppModule.html":{},"components/EditOrCreateComponent.html":{},"components/WikiEntryEditorComponent.html":{},"coverage.html":{}}}],["editorcreatecomponent",{"_index":69,"title":{"components/EditOrCreateComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CollectionListComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/CreateComponent.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"components/EntryListComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownDisplayComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/ModalMessageComponent.html":{},"components/MuseumListComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordModalComponent.html":{},"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{},"components/TagSelectionComponent.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryEditorComponent.html":{},"components/WikiEntryViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["edits",{"_index":1303,"title":{},"body":{"classes/Mocker.html":{},"classes/ProtoUser.html":{},"classes/User.html":{},"components/UserEditListComponent.html":{},"components/UserProfileComponent.html":{}}}],["editservice",{"_index":870,"title":{"injectables/EditService.html":{}},"body":{"injectables/EditService.html":{},"components/UserEditListComponent.html":{},"components/ViewEditComponent.html":{},"coverage.html":{}}}],["editsize",{"_index":2127,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["editslist",{"_index":1614,"title":{},"body":{"classes/ProtoUser.html":{},"classes/User.html":{}}}],["eit",{"_index":2289,"title":{},"body":{"components/ViewEditComponent.html":{}}}],["electron",{"_index":2495,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["electron/dist",{"_index":2550,"title":{},"body":{"index.html":{}}}],["element",{"_index":51,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"components/CollectionListComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/CreateComponent.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"components/EntryListComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownDisplayComponent.html":{},"components/MarkdownEditorComponent.html":{},"classes/Mocker.html":{},"components/ModalMessageComponent.html":{},"components/MuseumListComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordModalComponent.html":{},"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{},"components/TagSelectionComponent.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryEditorComponent.html":{},"components/WikiEntryViewComponent.html":{}}}],["elsewhere",{"_index":1116,"title":{},"body":{"components/LoginComponent.html":{}}}],["email",{"_index":1626,"title":{},"body":{"classes/ProtoUser.html":{},"components/RegistrationComponent.html":{},"classes/User.html":{},"components/UserProfileComponent.html":{}}}],["emits",{"_index":1970,"title":{},"body":{"components/UserEditListComponent.html":{},"injectables/UserInfoService.html":{},"components/UserMuseumListComponent.html":{}}}],["empty",{"_index":671,"title":{},"body":{"classes/EditBuilder.html":{},"components/EntryListComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"classes/Museum.html":{}}}],["enable",{"_index":1269,"title":{},"body":{"components/MarkdownEditorComponent.html":{}}}],["encountered",{"_index":1064,"title":{},"body":{"components/LoadingComponent.html":{},"components/MuseumListComponent.html":{}}}],["encounters",{"_index":1349,"title":{},"body":{"components/ModalMessageComponent.html":{}}}],["endpoint",{"_index":384,"title":{},"body":{"injectables/ArtifactService.html":{},"injectables/CollectionService.html":{},"injectables/EditService.html":{},"injectables/LoginService.html":{},"injectables/MuseumService.html":{}}}],["enter",{"_index":1123,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordModalComponent.html":{}}}],["entire",{"_index":1750,"title":{},"body":{"components/SearchComponent.html":{}}}],["entries",{"_index":905,"title":{},"body":{"components/EntryListComponent.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"components/ViewComponent.html":{}}}],["entry",{"_index":72,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/Artifact.html":{},"classes/ArtifactBuilder.html":{},"classes/BasicEntry.html":{},"classes/BasicEntryBuilder.html":{},"classes/Collection.html":{},"classes/CollectionBuilder.html":{},"components/CollectionListComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/CreateComponent.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"components/EntryListComponent.html":{},"components/FooterComponent.html":{},"injectables/GetByCategoryService.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownDisplayComponent.html":{},"components/MarkdownEditorComponent.html":{},"classes/Mocker.html":{},"components/ModalMessageComponent.html":{},"classes/Museum.html":{},"classes/MuseumBuilder.html":{},"components/MuseumListComponent.html":{},"injectables/MuseumService.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"classes/ProtoArtifact.html":{},"classes/ProtoCollection.html":{},"classes/ProtoEdit.html":{},"classes/ProtoMuseum.html":{},"classes/ProtoUser.html":{},"classes/PrototypeBuilder.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordModalComponent.html":{},"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{},"classes/Tag.html":{},"components/TagSelectionComponent.html":{},"classes/User.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"classes/WikiEntry.html":{},"classes/WikiEntryBuilder.html":{},"components/WikiEntryEditorComponent.html":{},"components/WikiEntryViewComponent.html":{},"coverage.html":{}}}],["entry.approvalstatus",{"_index":2049,"title":{},"body":{"components/UserEditListComponent.html":{}}}],["entry.date",{"_index":2050,"title":{},"body":{"components/UserEditListComponent.html":{}}}],["entry.hasownproperty(property",{"_index":2356,"title":{},"body":{"classes/WikiEntryBuilder.html":{}}}],["entry.id",{"_index":979,"title":{},"body":{"components/EntryListComponent.html":{},"classes/Tag.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"components/ViewComponent.html":{}}}],["entry.introduction",{"_index":994,"title":{},"body":{"components/EntryListComponent.html":{}}}],["entry.name",{"_index":555,"title":{},"body":{"components/CollectionListComponent.html":{},"components/EntryListComponent.html":{},"classes/Tag.html":{},"components/UserMuseumListComponent.html":{}}}],["entry.name}.${entry.introduction}`.tolowercase",{"_index":982,"title":{},"body":{"components/EntryListComponent.html":{}}}],["entry.ts",{"_index":444,"title":{},"body":{"classes/BasicEntry.html":{},"classes/WikiEntry.html":{},"coverage.html":{}}}],["entry.ts:12",{"_index":447,"title":{},"body":{"classes/BasicEntry.html":{}}}],["entry.ts:13",{"_index":2339,"title":{},"body":{"classes/WikiEntry.html":{}}}],["entry.ts:18",{"_index":2338,"title":{},"body":{"classes/WikiEntry.html":{}}}],["entry.ts:22",{"_index":2337,"title":{},"body":{"classes/WikiEntry.html":{}}}],["entry.ts:8",{"_index":449,"title":{},"body":{"classes/BasicEntry.html":{}}}],["entry.type",{"_index":2047,"title":{},"body":{"components/UserEditListComponent.html":{}}}],["entry/artifact.service",{"_index":825,"title":{},"body":{"components/EditOrCreateComponent.html":{},"injectables/GetByCategoryService.html":{},"components/ViewComponent.html":{},"components/WikiEntryViewComponent.html":{}}}],["entry/artifact.service.ts",{"_index":367,"title":{},"body":{"injectables/ArtifactService.html":{},"coverage.html":{}}}],["entry/artifact.service.ts:24",{"_index":405,"title":{},"body":{"injectables/ArtifactService.html":{}}}],["entry/artifact.service.ts:28",{"_index":383,"title":{},"body":{"injectables/ArtifactService.html":{}}}],["entry/artifact.service.ts:51",{"_index":402,"title":{},"body":{"injectables/ArtifactService.html":{}}}],["entry/artifact.service.ts:60",{"_index":399,"title":{},"body":{"injectables/ArtifactService.html":{}}}],["entry/artifact.service.ts:74",{"_index":392,"title":{},"body":{"injectables/ArtifactService.html":{}}}],["entry/collection.service",{"_index":822,"title":{},"body":{"components/EditOrCreateComponent.html":{},"injectables/GetByCategoryService.html":{},"components/ViewComponent.html":{}}}],["entry/collection.service.ts",{"_index":558,"title":{},"body":{"injectables/CollectionService.html":{},"coverage.html":{}}}],["entry/collection.service.ts:23",{"_index":562,"title":{},"body":{"injectables/CollectionService.html":{}}}],["entry/collection.service.ts:43",{"_index":569,"title":{},"body":{"injectables/CollectionService.html":{}}}],["entry/collection.service.ts:54",{"_index":565,"title":{},"body":{"injectables/CollectionService.html":{}}}],["entry/museum.service",{"_index":816,"title":{},"body":{"components/EditOrCreateComponent.html":{},"injectables/GetByCategoryService.html":{},"components/MuseumListComponent.html":{},"components/TagSelectionComponent.html":{},"components/UserMuseumListComponent.html":{},"components/ViewComponent.html":{}}}],["entry/museum.service.ts",{"_index":1418,"title":{},"body":{"injectables/MuseumService.html":{},"coverage.html":{}}}],["entry/museum.service.ts:24",{"_index":1423,"title":{},"body":{"injectables/MuseumService.html":{}}}],["entry/museum.service.ts:42",{"_index":1433,"title":{},"body":{"injectables/MuseumService.html":{}}}],["entry/museum.service.ts:51",{"_index":1431,"title":{},"body":{"injectables/MuseumService.html":{}}}],["entry/museum.service.ts:61",{"_index":1425,"title":{},"body":{"injectables/MuseumService.html":{}}}],["entry/museum.service.ts:70",{"_index":1428,"title":{},"body":{"injectables/MuseumService.html":{}}}],["entry1",{"_index":2031,"title":{},"body":{"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{}}}],["entry1[fieldname",{"_index":2040,"title":{},"body":{"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{}}}],["entry2",{"_index":2032,"title":{},"body":{"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{}}}],["entry2[fieldname",{"_index":2041,"title":{},"body":{"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{}}}],["entry[property",{"_index":2358,"title":{},"body":{"classes/WikiEntryBuilder.html":{}}}],["entrylist",{"_index":920,"title":{},"body":{"components/EntryListComponent.html":{}}}],["entrylistcomponent",{"_index":71,"title":{"components/EntryListComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CollectionListComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/CreateComponent.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"components/EntryListComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownDisplayComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/ModalMessageComponent.html":{},"components/MuseumListComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordModalComponent.html":{},"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{},"components/TagSelectionComponent.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryEditorComponent.html":{},"components/WikiEntryViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["enumerations",{"_index":2513,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":2472,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.prod.ts",{"_index":2588,"title":{},"body":{"miscellaneous/variables.html":{}}}],["environment.ts",{"_index":2587,"title":{},"body":{"miscellaneous/variables.html":{}}}],["equivalent",{"_index":2038,"title":{},"body":{"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{}}}],["err",{"_index":763,"title":{},"body":{"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"components/LoginComponent.html":{},"components/ModalMessageComponent.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryViewComponent.html":{}}}],["err.error",{"_index":1376,"title":{},"body":{"components/ModalMessageComponent.html":{}}}],["err.error.message",{"_index":1377,"title":{},"body":{"components/ModalMessageComponent.html":{}}}],["err.message",{"_index":1378,"title":{},"body":{"components/ModalMessageComponent.html":{}}}],["err.status",{"_index":1375,"title":{},"body":{"components/ModalMessageComponent.html":{}}}],["error",{"_index":708,"title":{},"body":{"components/EditComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/ModalMessageComponent.html":{},"components/MuseumListComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RegistrationComponent.html":{},"classes/ServerCannotConnect.html":{},"components/TagSelectionComponent.html":{},"injectables/UserInfoService.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"index.html":{}}}],["error.status",{"_index":2106,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["erroredit",{"_index":2263,"title":{},"body":{"components/ViewEditComponent.html":{}}}],["errormessage",{"_index":1069,"title":{},"body":{"components/LoadingComponent.html":{}}}],["errors",{"_index":1072,"title":{},"body":{"components/LoadingComponent.html":{}}}],["etc",{"_index":510,"title":{},"body":{"classes/Collection.html":{}}}],["event",{"_index":1465,"title":{},"body":{"components/NavigationBarComponent.html":{},"components/UserEditListComponent.html":{},"injectables/UserInfoService.html":{},"components/UserMuseumListComponent.html":{}}}],["eventemitter",{"_index":1265,"title":{},"body":{"components/MarkdownEditorComponent.html":{},"components/UserEditListComponent.html":{},"injectables/UserInfoService.html":{},"components/UserMuseumListComponent.html":{}}}],["everything",{"_index":125,"title":{},"body":{"components/AppComponent.html":{},"components/EntryListComponent.html":{},"components/ModalMessageComponent.html":{},"components/SearchComponent.html":{},"components/ViewComponent.html":{},"miscellaneous/variables.html":{}}}],["example",{"_index":1849,"title":{},"body":{"classes/ServerResponse.html":{},"components/ViewComponent.html":{},"miscellaneous/variables.html":{}}}],["example_description",{"_index":2376,"title":{},"body":{"components/WikiEntryEditorComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["exceeding",{"_index":1928,"title":{},"body":{"pipes/TextLimitPipe.html":{}}}],["except",{"_index":2429,"title":{},"body":{"classes/Wrapper.html":{}}}],["exclusive",{"_index":1139,"title":{},"body":{"components/LoginComponent.html":{}}}],["execute",{"_index":2548,"title":{},"body":{"index.html":{}}}],["exist",{"_index":931,"title":{},"body":{"components/EntryListComponent.html":{}}}],["existing",{"_index":705,"title":{},"body":{"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"classes/Museum.html":{},"injectables/ProjectConfigService.html":{},"components/TagSelectionComponent.html":{}}}],["existingartifact",{"_index":770,"title":{},"body":{"components/EditOrCreateComponent.html":{}}}],["existingcollections",{"_index":1877,"title":{},"body":{"components/TagSelectionComponent.html":{}}}],["existingobject",{"_index":709,"title":{},"body":{"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{}}}],["exists",{"_index":1583,"title":{},"body":{"classes/ProtoEdit.html":{},"classes/Wrapper.html":{}}}],["experienced",{"_index":1074,"title":{},"body":{"components/LoadingComponent.html":{},"miscellaneous/variables.html":{}}}],["export",{"_index":45,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"classes/Artifact.html":{},"classes/ArtifactBuilder.html":{},"injectables/ArtifactService.html":{},"classes/BasicEntry.html":{},"classes/BasicEntryBuilder.html":{},"classes/BasicUserInfo.html":{},"classes/Collection.html":{},"classes/CollectionBuilder.html":{},"components/CollectionListComponent.html":{},"injectables/CollectionService.html":{},"components/ConfirmationModalComponent.html":{},"components/CreateComponent.html":{},"classes/Edit.html":{},"classes/EditBuilder.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"injectables/EditService.html":{},"components/EntryListComponent.html":{},"components/FooterComponent.html":{},"injectables/GetByCategoryService.html":{},"classes/HashHelper.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardService.html":{},"injectables/LoginService.html":{},"components/MarkdownDisplayComponent.html":{},"components/MarkdownEditorComponent.html":{},"pipes/MarkedPipe.html":{},"classes/Mocker.html":{},"components/ModalMessageComponent.html":{},"classes/Museum.html":{},"classes/MuseumBuilder.html":{},"components/MuseumListComponent.html":{},"injectables/MuseumService.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"injectables/PreviousRouteService.html":{},"classes/ProjectConfig.html":{},"injectables/ProjectConfigService.html":{},"classes/ProtoArtifact.html":{},"classes/ProtoCollection.html":{},"classes/ProtoEdit.html":{},"classes/ProtoMuseum.html":{},"classes/ProtoUser.html":{},"classes/PrototypeBuilder.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordModalComponent.html":{},"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{},"classes/ServerCannotConnect.html":{},"classes/ServerConfig.html":{},"injectables/ServerConfigService.html":{},"classes/ServerResponse.html":{},"classes/Tag.html":{},"components/TagSelectionComponent.html":{},"pipes/TextLimitPipe.html":{},"classes/User.html":{},"components/UserEditListComponent.html":{},"injectables/UserInfoService.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"classes/WikiEntry.html":{},"classes/WikiEntryBuilder.html":{},"components/WikiEntryEditorComponent.html":{},"components/WikiEntryViewComponent.html":{},"classes/Wrapper.html":{}}}],["exports",{"_index":145,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["extends",{"_index":286,"title":{},"body":{"classes/Artifact.html":{},"classes/ArtifactBuilder.html":{},"classes/BasicEntryBuilder.html":{},"classes/Collection.html":{},"classes/CollectionBuilder.html":{},"classes/Museum.html":{},"classes/MuseumBuilder.html":{},"classes/User.html":{},"classes/WikiEntry.html":{},"classes/WikiEntryBuilder.html":{}}}],["facheckcircle",{"_index":1336,"title":{},"body":{"components/ModalMessageComponent.html":{}}}],["facilitate",{"_index":2137,"title":{},"body":{"components/UserMuseumListComponent.html":{}}}],["facilitates",{"_index":1653,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["factory",{"_index":1389,"title":{},"body":{"classes/Museum.html":{},"classes/ProjectConfig.html":{},"classes/Tag.html":{}}}],["failed",{"_index":1380,"title":{},"body":{"components/ModalMessageComponent.html":{}}}],["failure",{"_index":1153,"title":{},"body":{"components/LoginComponent.html":{},"components/ModalMessageComponent.html":{}}}],["fake",{"_index":1531,"title":{},"body":{"classes/ProjectConfig.html":{},"injectables/UserInfoService.html":{}}}],["false",{"_index":749,"title":{},"body":{"components/EditComponent.html":{},"injectables/EditService.html":{},"components/EntryListComponent.html":{},"components/LoadingComponent.html":{},"components/ModalMessageComponent.html":{},"components/MuseumListComponent.html":{},"classes/ProjectConfig.html":{},"classes/ServerResponse.html":{},"classes/Tag.html":{},"components/TagSelectionComponent.html":{},"components/UserEditListComponent.html":{},"injectables/UserInfoService.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"miscellaneous/variables.html":{}}}],["fasort",{"_index":2010,"title":{},"body":{"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{}}}],["fasortdown",{"_index":2004,"title":{},"body":{"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{}}}],["fasortup",{"_index":2012,"title":{},"body":{"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{}}}],["fatimescircle",{"_index":1337,"title":{},"body":{"components/ModalMessageComponent.html":{}}}],["feedback",{"_index":783,"title":{},"body":{"components/EditOrCreateComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/UserMuseumListComponent.html":{},"components/ViewEditComponent.html":{}}}],["feel",{"_index":2599,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fetch",{"_index":2275,"title":{},"body":{"components/ViewEditComponent.html":{}}}],["fetchcurrent",{"_index":2265,"title":{},"body":{"components/ViewEditComponent.html":{}}}],["fetching",{"_index":1054,"title":{},"body":{"components/HomeComponent.html":{}}}],["field",{"_index":523,"title":{},"body":{"classes/CollectionBuilder.html":{},"components/ModalMessageComponent.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{}}}],["fieldname",{"_index":2028,"title":{},"body":{"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{}}}],["fields",{"_index":1765,"title":{},"body":{"components/SearchComponent.html":{},"classes/WikiEntry.html":{},"components/WikiEntryEditorComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"classes/Artifact.html":{},"classes/ArtifactBuilder.html":{},"injectables/ArtifactService.html":{},"classes/BasicEntry.html":{},"classes/BasicEntryBuilder.html":{},"classes/BasicUserInfo.html":{},"classes/Collection.html":{},"classes/CollectionBuilder.html":{},"components/CollectionListComponent.html":{},"injectables/CollectionService.html":{},"components/ConfirmationModalComponent.html":{},"components/CreateComponent.html":{},"classes/Edit.html":{},"classes/EditBuilder.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"injectables/EditService.html":{},"components/EntryListComponent.html":{},"components/FooterComponent.html":{},"injectables/GetByCategoryService.html":{},"classes/HashHelper.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardService.html":{},"injectables/LoginService.html":{},"components/MarkdownDisplayComponent.html":{},"components/MarkdownEditorComponent.html":{},"pipes/MarkedPipe.html":{},"classes/Mocker.html":{},"components/ModalMessageComponent.html":{},"classes/Museum.html":{},"classes/MuseumBuilder.html":{},"components/MuseumListComponent.html":{},"injectables/MuseumService.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"injectables/PreviousRouteService.html":{},"classes/ProjectConfig.html":{},"injectables/ProjectConfigService.html":{},"classes/ProtoArtifact.html":{},"classes/ProtoCollection.html":{},"classes/ProtoEdit.html":{},"classes/ProtoMuseum.html":{},"classes/ProtoUser.html":{},"classes/PrototypeBuilder.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordModalComponent.html":{},"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{},"classes/ServerCannotConnect.html":{},"classes/ServerConfig.html":{},"injectables/ServerConfigService.html":{},"classes/ServerResponse.html":{},"classes/Tag.html":{},"components/TagSelectionComponent.html":{},"pipes/TextLimitPipe.html":{},"classes/User.html":{},"components/UserEditListComponent.html":{},"injectables/UserInfoService.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"classes/WikiEntry.html":{},"classes/WikiEntryBuilder.html":{},"components/WikiEntryEditorComponent.html":{},"components/WikiEntryViewComponent.html":{},"classes/Wrapper.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["filereplacements",{"_index":2584,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fill",{"_index":1023,"title":{},"body":{"components/FooterComponent.html":{},"components/NavigationBarComponent.html":{}}}],["filter",{"_index":941,"title":{},"body":{"components/EntryListComponent.html":{}}}],["filter((tag",{"_index":1918,"title":{},"body":{"components/TagSelectionComponent.html":{}}}],["filterdisplaylist",{"_index":916,"title":{},"body":{"components/EntryListComponent.html":{}}}],["filterdisplaylist(keywords",{"_index":939,"title":{},"body":{"components/EntryListComponent.html":{}}}],["filtering",{"_index":946,"title":{},"body":{"components/EntryListComponent.html":{}}}],["find",{"_index":2581,"title":{},"body":{"miscellaneous/variables.html":{}}}],["finished",{"_index":1066,"title":{},"body":{"components/LoadingComponent.html":{}}}],["first",{"_index":820,"title":{},"body":{"components/EditOrCreateComponent.html":{},"pipes/TextLimitPipe.html":{},"components/UserEditListComponent.html":{},"components/ViewEditComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["fixme",{"_index":1140,"title":{},"body":{"components/LoginComponent.html":{}}}],["flex",{"_index":1026,"title":{},"body":{"components/FooterComponent.html":{},"components/NavigationBarComponent.html":{}}}],["folder",{"_index":2547,"title":{},"body":{"index.html":{}}}],["font",{"_index":2005,"title":{},"body":{"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{}}}],["fontawesome",{"_index":211,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["fontawesomemodule",{"_index":209,"title":{},"body":{"modules/AppModule.html":{}}}],["footer",{"_index":1004,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer'},{'name",{"_index":74,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/CollectionListComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/CreateComponent.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"components/EntryListComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownDisplayComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/ModalMessageComponent.html":{},"components/MuseumListComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordModalComponent.html":{},"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{},"components/TagSelectionComponent.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryEditorComponent.html":{},"components/WikiEntryViewComponent.html":{}}}],["footer.component.css",{"_index":1007,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.component.html",{"_index":1008,"title":{},"body":{"components/FooterComponent.html":{}}}],["footercomponent",{"_index":73,"title":{"components/FooterComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CollectionListComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/CreateComponent.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"components/EntryListComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownDisplayComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/ModalMessageComponent.html":{},"components/MuseumListComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordModalComponent.html":{},"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{},"components/TagSelectionComponent.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryEditorComponent.html":{},"components/WikiEntryViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["form",{"_index":813,"title":{},"body":{"components/EditOrCreateComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/RegistrationComponent.html":{},"components/WikiEntryEditorComponent.html":{}}}],["form.get('email').value",{"_index":1715,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["form.get('password').value",{"_index":1716,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["form.get('username').value",{"_index":1714,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["form.value.password",{"_index":1708,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["form.value.retypepassword",{"_index":1709,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["format",{"_index":2086,"title":{},"body":{"injectables/UserInfoService.html":{},"miscellaneous/variables.html":{}}}],["formatting",{"_index":2595,"title":{},"body":{"miscellaneous/variables.html":{}}}],["formcontrol",{"_index":1258,"title":{},"body":{"components/MarkdownEditorComponent.html":{},"components/RegistrationComponent.html":{},"components/SearchComponent.html":{},"components/WikiEntryEditorComponent.html":{}}}],["formcontrol(prevdescription",{"_index":2392,"title":{},"body":{"components/WikiEntryEditorComponent.html":{}}}],["formcontrol(previmage",{"_index":2390,"title":{},"body":{"components/WikiEntryEditorComponent.html":{}}}],["formcontrol(previntroduction",{"_index":2389,"title":{},"body":{"components/WikiEntryEditorComponent.html":{}}}],["formcontrol(prevname",{"_index":2388,"title":{},"body":{"components/WikiEntryEditorComponent.html":{}}}],["formgroup",{"_index":1672,"title":{},"body":{"components/RegistrationComponent.html":{},"components/WikiEntryEditorComponent.html":{}}}],["formsmodule",{"_index":172,"title":{},"body":{"modules/AppModule.html":{}}}],["fortawesome/angular",{"_index":210,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["fortawesome/fontawesome",{"_index":2489,"title":{},"body":{"dependencies.html":{}}}],["fortawesome/free",{"_index":1367,"title":{},"body":{"components/ModalMessageComponent.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"dependencies.html":{}}}],["found",{"_index":1477,"title":{},"body":{"components/PageNotFoundComponent.html":{},"miscellaneous/variables.html":{}}}],["found'},{'name",{"_index":92,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/CollectionListComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/CreateComponent.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"components/EntryListComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownDisplayComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/ModalMessageComponent.html":{},"components/MuseumListComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordModalComponent.html":{},"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{},"components/TagSelectionComponent.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryEditorComponent.html":{},"components/WikiEntryViewComponent.html":{}}}],["found.component",{"_index":171,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["found.component.css",{"_index":1478,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.html",{"_index":1479,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.ts",{"_index":1475,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["found.component.ts:16",{"_index":1480,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found/page",{"_index":170,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["free",{"_index":2600,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fromnetworkerror",{"_index":1338,"title":{},"body":{"components/ModalMessageComponent.html":{}}}],["fromnetworkerror(err",{"_index":1346,"title":{},"body":{"components/ModalMessageComponent.html":{}}}],["fromserverresponse",{"_index":1339,"title":{},"body":{"components/ModalMessageComponent.html":{}}}],["fromserverresponse(res",{"_index":1352,"title":{},"body":{"components/ModalMessageComponent.html":{}}}],["frontend",{"_index":135,"title":{},"body":{"components/AppComponent.html":{},"components/LoadingComponent.html":{},"components/TagSelectionComponent.html":{},"index.html":{}}}],["frontend/electron",{"_index":2554,"title":{},"body":{"index.html":{}}}],["full",{"_index":270,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/EntryListComponent.html":{},"index.html":{}}}],["function",{"_index":1993,"title":{},"body":{"components/UserEditListComponent.html":{},"components/ViewEditComponent.html":{},"coverage.html":{}}}],["functions",{"_index":505,"title":{"miscellaneous/functions.html":{}},"body":{"classes/Collection.html":{},"miscellaneous/functions.html":{}}}],["further",{"_index":2564,"title":{},"body":{"index.html":{}}}],["generate",{"_index":2561,"title":{},"body":{"index.html":{}}}],["generated",{"_index":933,"title":{},"body":{"components/EntryListComponent.html":{}}}],["generates",{"_index":1390,"title":{},"body":{"classes/Museum.html":{}}}],["generic",{"_index":468,"title":{},"body":{"classes/BasicEntryBuilder.html":{}}}],["generics",{"_index":462,"title":{},"body":{"classes/BasicEntryBuilder.html":{}}}],["get(this.serverconfig.geturl",{"_index":577,"title":{},"body":{"injectables/CollectionService.html":{}}}],["get/put/post/delete",{"_index":385,"title":{},"body":{"injectables/ArtifactService.html":{},"injectables/CollectionService.html":{}}}],["getallselectedtags",{"_index":1872,"title":{},"body":{"components/TagSelectionComponent.html":{}}}],["getartifact",{"_index":376,"title":{},"body":{"injectables/ArtifactService.html":{}}}],["getartifact(id",{"_index":401,"title":{},"body":{"injectables/ArtifactService.html":{}}}],["getbasicuserinfo",{"_index":2064,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["getbycategoryandid",{"_index":1030,"title":{},"body":{"injectables/GetByCategoryService.html":{}}}],["getbycategoryandid(category",{"_index":1033,"title":{},"body":{"injectables/GetByCategoryService.html":{}}}],["getbycategoryandid(this.category",{"_index":752,"title":{},"body":{"components/EditComponent.html":{},"components/ViewEditComponent.html":{}}}],["getbycategoryservice",{"_index":711,"title":{"injectables/GetByCategoryService.html":{}},"body":{"components/EditComponent.html":{},"injectables/GetByCategoryService.html":{},"components/ViewEditComponent.html":{},"coverage.html":{}}}],["getcollection",{"_index":561,"title":{},"body":{"injectables/CollectionService.html":{}}}],["getcollection(id",{"_index":568,"title":{},"body":{"injectables/CollectionService.html":{}}}],["getcollectionlist",{"_index":2266,"title":{},"body":{"components/ViewEditComponent.html":{}}}],["getcollectionlist(currententry",{"_index":2276,"title":{},"body":{"components/ViewEditComponent.html":{}}}],["getcompleteuserinfo",{"_index":1213,"title":{},"body":{"injectables/LoginService.html":{},"injectables/UserInfoService.html":{},"components/UserProfileComponent.html":{}}}],["getcompleteuserinfo(usercredentials",{"_index":1216,"title":{},"body":{"injectables/LoginService.html":{}}}],["getedit",{"_index":874,"title":{},"body":{"injectables/EditService.html":{}}}],["getedit(id",{"_index":879,"title":{},"body":{"injectables/EditService.html":{}}}],["getinstance",{"_index":1507,"title":{},"body":{"classes/ProjectConfig.html":{}}}],["getmax_password_length",{"_index":1703,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["getmax_username_length",{"_index":1699,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["getmin_password_length",{"_index":1701,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["getmin_username_length",{"_index":1697,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["getmuseum",{"_index":1421,"title":{},"body":{"injectables/MuseumService.html":{}}}],["getmuseum(id",{"_index":1430,"title":{},"body":{"injectables/MuseumService.html":{}}}],["getmuseumid",{"_index":2267,"title":{},"body":{"components/ViewEditComponent.html":{}}}],["getmuseumid(entry",{"_index":2278,"title":{},"body":{"components/ViewEditComponent.html":{}}}],["getmuseumlist",{"_index":1422,"title":{},"body":{"injectables/MuseumService.html":{}}}],["getpreviousroute",{"_index":1491,"title":{},"body":{"injectables/PreviousRouteService.html":{}}}],["getprojectconfig",{"_index":1544,"title":{},"body":{"injectables/ProjectConfigService.html":{}}}],["gets",{"_index":563,"title":{},"body":{"injectables/CollectionService.html":{},"components/EditComponent.html":{},"injectables/GetByCategoryService.html":{}}}],["getserverconfig",{"_index":1837,"title":{},"body":{"injectables/ServerConfigService.html":{}}}],["getter",{"_index":1493,"title":{},"body":{"injectables/PreviousRouteService.html":{},"components/RegistrationComponent.html":{}}}],["getting",{"_index":1824,"title":{"index.html":{}},"body":{"classes/ServerConfig.html":{},"components/TagSelectionComponent.html":{}}}],["geturl",{"_index":1816,"title":{},"body":{"classes/ServerConfig.html":{}}}],["getuserinfo",{"_index":2167,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["getwikientry",{"_index":2362,"title":{},"body":{"components/WikiEntryEditorComponent.html":{}}}],["git",{"_index":2525,"title":{},"body":{"index.html":{}}}],["give",{"_index":1147,"title":{},"body":{"components/LoginComponent.html":{}}}],["gives",{"_index":2299,"title":{},"body":{"components/ViewEditComponent.html":{}}}],["go",{"_index":949,"title":{},"body":{"components/EntryListComponent.html":{},"components/LoginComponent.html":{},"components/MuseumListComponent.html":{},"components/RegistrationComponent.html":{},"components/UserProfileComponent.html":{},"index.html":{}}}],["gotoentry",{"_index":917,"title":{},"body":{"components/EntryListComponent.html":{}}}],["gotoentry(entry",{"_index":947,"title":{},"body":{"components/EntryListComponent.html":{}}}],["gotomuseum",{"_index":1405,"title":{},"body":{"components/MuseumListComponent.html":{}}}],["gotomuseum(id",{"_index":1406,"title":{},"body":{"components/MuseumListComponent.html":{}}}],["gotoparent",{"_index":2203,"title":{},"body":{"components/ViewComponent.html":{}}}],["gotoparent(entry",{"_index":2209,"title":{},"body":{"components/ViewComponent.html":{}}}],["graph",{"_index":2570,"title":{},"body":{"modules.html":{}}}],["green",{"_index":1737,"title":{},"body":{"components/RegistrationComponent.html":{},"components/WikiEntryEditorComponent.html":{}}}],["group",{"_index":1696,"title":{},"body":{"components/RegistrationComponent.html":{},"components/WikiEntryEditorComponent.html":{}}}],["guard",{"_index":1182,"title":{"guards/LoginGuardService.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guard.service",{"_index":263,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["guard.service.ts",{"_index":1185,"title":{},"body":{"guards/LoginGuardService.html":{},"coverage.html":{}}}],["guard.service.ts:12",{"_index":1188,"title":{},"body":{"guards/LoginGuardService.html":{}}}],["guard.service.ts:32",{"_index":1196,"title":{},"body":{"guards/LoginGuardService.html":{}}}],["guards",{"_index":1183,"title":{},"body":{"guards/LoginGuardService.html":{}}}],["h2",{"_index":1001,"title":{},"body":{"components/EntryListComponent.html":{}}}],["handle",{"_index":1667,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["haohong",{"_index":1016,"title":{},"body":{"components/FooterComponent.html":{}}}],["happened",{"_index":1972,"title":{},"body":{"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{}}}],["hard",{"_index":1113,"title":{},"body":{"components/LoginComponent.html":{}}}],["hash",{"_index":487,"title":{},"body":{"classes/BasicUserInfo.html":{},"classes/HashHelper.html":{},"classes/User.html":{},"injectables/UserInfoService.html":{}}}],["hash(text",{"_index":1041,"title":{},"body":{"classes/HashHelper.html":{}}}],["hashed",{"_index":1043,"title":{},"body":{"classes/HashHelper.html":{}}}],["hashhelper",{"_index":497,"title":{"classes/HashHelper.html":{}},"body":{"classes/BasicUserInfo.html":{},"classes/HashHelper.html":{},"coverage.html":{}}}],["hashhelper.hash(password",{"_index":503,"title":{},"body":{"classes/BasicUserInfo.html":{}}}],["hashing",{"_index":1040,"title":{},"body":{"classes/HashHelper.html":{}}}],["hashtags",{"_index":2603,"title":{},"body":{"miscellaneous/variables.html":{}}}],["head",{"_index":1622,"title":{},"body":{"classes/ProtoUser.html":{},"classes/User.html":{},"components/UserMuseumListComponent.html":{}}}],["headcuratorlist",{"_index":1615,"title":{},"body":{"classes/ProtoUser.html":{},"classes/User.html":{},"components/UserMuseumListComponent.html":{}}}],["header",{"_index":1382,"title":{},"body":{"components/ModalMessageComponent.html":{}}}],["heading",{"_index":2602,"title":{},"body":{"miscellaneous/variables.html":{}}}],["headings",{"_index":2605,"title":{},"body":{"miscellaneous/variables.html":{}}}],["help",{"_index":2408,"title":{},"body":{"components/WikiEntryViewComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["helper",{"_index":499,"title":{},"body":{"classes/BasicUserInfo.html":{}}}],["helper.ts",{"_index":1039,"title":{},"body":{"classes/HashHelper.html":{},"coverage.html":{}}}],["helper.ts:12",{"_index":1042,"title":{},"body":{"classes/HashHelper.html":{}}}],["helper/capitalize",{"_index":819,"title":{},"body":{"components/EditOrCreateComponent.html":{},"components/UserEditListComponent.html":{},"components/ViewEditComponent.html":{}}}],["helper/hash",{"_index":498,"title":{},"body":{"classes/BasicUserInfo.html":{}}}],["helper/marked.pipe",{"_index":192,"title":{},"body":{"modules/AppModule.html":{}}}],["helper/text",{"_index":207,"title":{},"body":{"modules/AppModule.html":{}}}],["helps",{"_index":932,"title":{},"body":{"components/EntryListComponent.html":{},"classes/HashHelper.html":{},"components/LoginComponent.html":{},"components/MuseumListComponent.html":{}}}],["here",{"_index":649,"title":{},"body":{"classes/Edit.html":{},"components/SearchInCategoryComponent.html":{},"miscellaneous/variables.html":{}}}],["here/wiki/markdown",{"_index":2616,"title":{},"body":{"miscellaneous/variables.html":{}}}],["his/her",{"_index":1740,"title":{},"body":{"components/ResetPasswordModalComponent.html":{}}}],["hoc",{"_index":2431,"title":{},"body":{"classes/Wrapper.html":{}}}],["home",{"_index":267,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["home'},{'name",{"_index":76,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/CollectionListComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/CreateComponent.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"components/EntryListComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownDisplayComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/ModalMessageComponent.html":{},"components/MuseumListComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordModalComponent.html":{},"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{},"components/TagSelectionComponent.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryEditorComponent.html":{},"components/WikiEntryViewComponent.html":{}}}],["home.component.css",{"_index":1048,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.html",{"_index":1049,"title":{},"body":{"components/HomeComponent.html":{}}}],["homecomponent",{"_index":75,"title":{"components/HomeComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CollectionListComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/CreateComponent.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"components/EntryListComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownDisplayComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/ModalMessageComponent.html":{},"components/MuseumListComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordModalComponent.html":{},"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{},"components/TagSelectionComponent.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryEditorComponent.html":{},"components/WikiEntryViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["host",{"_index":2557,"title":{},"body":{"index.html":{}}}],["hosts",{"_index":1058,"title":{},"body":{"components/HomeComponent.html":{}}}],["html",{"_index":50,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/CollectionListComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/CreateComponent.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"components/EntryListComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownDisplayComponent.html":{},"components/MarkdownEditorComponent.html":{},"pipes/MarkedPipe.html":{},"components/ModalMessageComponent.html":{},"components/MuseumListComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordModalComponent.html":{},"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{},"components/TagSelectionComponent.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryEditorComponent.html":{},"components/WikiEntryViewComponent.html":{}}}],["http",{"_index":379,"title":{},"body":{"injectables/ArtifactService.html":{},"injectables/CollectionService.html":{},"injectables/EditService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"injectables/MuseumService.html":{}}}],["http://localhost:4200",{"_index":2541,"title":{},"body":{"index.html":{}}}],["http://localhost:5300/request",{"_index":1822,"title":{},"body":{"classes/ServerConfig.html":{}}}],["httpclient",{"_index":380,"title":{},"body":{"injectables/ArtifactService.html":{},"injectables/CollectionService.html":{},"injectables/EditService.html":{},"injectables/GetByCategoryService.html":{},"injectables/LoginService.html":{},"injectables/MuseumService.html":{},"components/ResetPasswordModalComponent.html":{}}}],["httpclientmodule",{"_index":183,"title":{},"body":{"modules/AppModule.html":{}}}],["httperrorresponse",{"_index":742,"title":{},"body":{"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"components/LoginComponent.html":{},"components/ModalMessageComponent.html":{},"components/TagSelectionComponent.html":{},"components/UserEditListComponent.html":{},"injectables/UserInfoService.html":{},"components/UserMuseumListComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryViewComponent.html":{}}}],["httpheaders",{"_index":1434,"title":{},"body":{"injectables/MuseumService.html":{}}}],["https://github.com/syccxcc/museum",{"_index":2526,"title":{},"body":{"index.html":{}}}],["https?://)?([\\\\da",{"_index":2368,"title":{},"body":{"components/WikiEntryEditorComponent.html":{}}}],["icon",{"_index":2007,"title":{},"body":{"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{}}}],["icons",{"_index":1370,"title":{},"body":{"components/ModalMessageComponent.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"dependencies.html":{}}}],["id",{"_index":291,"title":{},"body":{"classes/Artifact.html":{},"classes/ArtifactBuilder.html":{},"injectables/ArtifactService.html":{},"classes/BasicEntry.html":{},"classes/BasicEntryBuilder.html":{},"classes/Collection.html":{},"classes/CollectionBuilder.html":{},"injectables/CollectionService.html":{},"components/CreateComponent.html":{},"classes/Edit.html":{},"classes/EditBuilder.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"injectables/EditService.html":{},"components/EntryListComponent.html":{},"injectables/GetByCategoryService.html":{},"classes/Mocker.html":{},"classes/Museum.html":{},"classes/MuseumBuilder.html":{},"components/MuseumListComponent.html":{},"injectables/MuseumService.html":{},"classes/ProtoEdit.html":{},"classes/Tag.html":{},"components/TagSelectionComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"classes/WikiEntry.html":{},"classes/WikiEntryBuilder.html":{}}}],["id(id",{"_index":352,"title":{},"body":{"classes/ArtifactBuilder.html":{},"classes/BasicEntryBuilder.html":{},"classes/CollectionBuilder.html":{},"classes/EditBuilder.html":{},"classes/MuseumBuilder.html":{},"classes/WikiEntryBuilder.html":{}}}],["id(protoedit.id",{"_index":1597,"title":{},"body":{"classes/ProtoEdit.html":{}}}],["id(this.previouswikientry?.id",{"_index":2397,"title":{},"body":{"components/WikiEntryEditorComponent.html":{}}}],["id).then",{"_index":1417,"title":{},"body":{"components/MuseumListComponent.html":{}}}],["identifier",{"_index":2439,"title":{},"body":{"coverage.html":{}}}],["idtotag",{"_index":1871,"title":{},"body":{"components/TagSelectionComponent.html":{}}}],["ignored",{"_index":1285,"title":{},"body":{"pipes/MarkedPipe.html":{}}}],["image",{"_index":289,"title":{},"body":{"classes/Artifact.html":{},"classes/ArtifactBuilder.html":{},"classes/Collection.html":{},"classes/CollectionBuilder.html":{},"classes/Museum.html":{},"classes/MuseumBuilder.html":{},"components/ViewComponent.html":{},"classes/WikiEntry.html":{},"classes/WikiEntryBuilder.html":{},"components/WikiEntryEditorComponent.html":{},"components/WikiEntryViewComponent.html":{}}}],["image(form.get('image').value",{"_index":2396,"title":{},"body":{"components/WikiEntryEditorComponent.html":{}}}],["image(image",{"_index":342,"title":{},"body":{"classes/ArtifactBuilder.html":{},"classes/CollectionBuilder.html":{},"classes/MuseumBuilder.html":{},"classes/WikiEntryBuilder.html":{}}}],["implements",{"_index":18,"title":{},"body":{"components/AboutComponent.html":{},"components/CollectionListComponent.html":{},"components/CreateComponent.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"components/EntryListComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardService.html":{},"components/MarkdownDisplayComponent.html":{},"pipes/MarkedPipe.html":{},"components/ModalMessageComponent.html":{},"components/MuseumListComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordModalComponent.html":{},"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{},"components/TagSelectionComponent.html":{},"pipes/TextLimitPipe.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryEditorComponent.html":{},"components/WikiEntryViewComponent.html":{}}}],["import",{"_index":39,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"classes/Artifact.html":{},"classes/ArtifactBuilder.html":{},"injectables/ArtifactService.html":{},"classes/BasicEntryBuilder.html":{},"classes/BasicUserInfo.html":{},"classes/Collection.html":{},"classes/CollectionBuilder.html":{},"components/CollectionListComponent.html":{},"injectables/CollectionService.html":{},"components/ConfirmationModalComponent.html":{},"components/CreateComponent.html":{},"classes/Edit.html":{},"classes/EditBuilder.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"injectables/EditService.html":{},"components/EntryListComponent.html":{},"components/FooterComponent.html":{},"injectables/GetByCategoryService.html":{},"classes/HashHelper.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardService.html":{},"injectables/LoginService.html":{},"components/MarkdownDisplayComponent.html":{},"components/MarkdownEditorComponent.html":{},"pipes/MarkedPipe.html":{},"classes/Mocker.html":{},"components/ModalMessageComponent.html":{},"classes/Museum.html":{},"classes/MuseumBuilder.html":{},"components/MuseumListComponent.html":{},"injectables/MuseumService.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"injectables/PreviousRouteService.html":{},"injectables/ProjectConfigService.html":{},"classes/ProtoArtifact.html":{},"classes/ProtoCollection.html":{},"classes/ProtoEdit.html":{},"classes/ProtoMuseum.html":{},"classes/ProtoUser.html":{},"classes/PrototypeBuilder.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordModalComponent.html":{},"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{},"classes/ServerConfig.html":{},"injectables/ServerConfigService.html":{},"classes/Tag.html":{},"components/TagSelectionComponent.html":{},"pipes/TextLimitPipe.html":{},"classes/User.html":{},"components/UserEditListComponent.html":{},"injectables/UserInfoService.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"classes/WikiEntry.html":{},"classes/WikiEntryBuilder.html":{},"components/WikiEntryEditorComponent.html":{},"components/WikiEntryViewComponent.html":{}}}],["imports",{"_index":156,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["included",{"_index":1476,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["includes",{"_index":1819,"title":{},"body":{"classes/ServerConfig.html":{},"components/ViewComponent.html":{}}}],["index",{"_index":27,"title":{"index.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"classes/Artifact.html":{},"classes/ArtifactBuilder.html":{},"injectables/ArtifactService.html":{},"classes/BasicEntry.html":{},"classes/BasicEntryBuilder.html":{},"classes/BasicUserInfo.html":{},"classes/Collection.html":{},"classes/CollectionBuilder.html":{},"components/CollectionListComponent.html":{},"injectables/CollectionService.html":{},"components/ConfirmationModalComponent.html":{},"components/CreateComponent.html":{},"classes/Edit.html":{},"classes/EditBuilder.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"injectables/EditService.html":{},"components/EntryListComponent.html":{},"injectables/GetByCategoryService.html":{},"classes/HashHelper.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardService.html":{},"injectables/LoginService.html":{},"components/MarkdownDisplayComponent.html":{},"components/MarkdownEditorComponent.html":{},"classes/Mocker.html":{},"components/ModalMessageComponent.html":{},"classes/Museum.html":{},"classes/MuseumBuilder.html":{},"components/MuseumListComponent.html":{},"injectables/MuseumService.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"injectables/PreviousRouteService.html":{},"classes/ProjectConfig.html":{},"injectables/ProjectConfigService.html":{},"classes/ProtoArtifact.html":{},"classes/ProtoCollection.html":{},"classes/ProtoEdit.html":{},"classes/ProtoMuseum.html":{},"classes/ProtoUser.html":{},"classes/PrototypeBuilder.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordModalComponent.html":{},"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{},"classes/ServerCannotConnect.html":{},"classes/ServerConfig.html":{},"injectables/ServerConfigService.html":{},"classes/ServerResponse.html":{},"classes/Tag.html":{},"components/TagSelectionComponent.html":{},"classes/User.html":{},"components/UserEditListComponent.html":{},"injectables/UserInfoService.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"classes/WikiEntry.html":{},"classes/WikiEntryBuilder.html":{},"components/WikiEntryEditorComponent.html":{},"components/WikiEntryViewComponent.html":{},"classes/Wrapper.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"classes/Artifact.html":{},"classes/ArtifactBuilder.html":{},"injectables/ArtifactService.html":{},"classes/BasicEntry.html":{},"classes/BasicEntryBuilder.html":{},"classes/BasicUserInfo.html":{},"classes/Collection.html":{},"classes/CollectionBuilder.html":{},"components/CollectionListComponent.html":{},"injectables/CollectionService.html":{},"components/ConfirmationModalComponent.html":{},"components/CreateComponent.html":{},"classes/Edit.html":{},"classes/EditBuilder.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"injectables/EditService.html":{},"components/EntryListComponent.html":{},"components/FooterComponent.html":{},"injectables/GetByCategoryService.html":{},"classes/HashHelper.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardService.html":{},"injectables/LoginService.html":{},"components/MarkdownDisplayComponent.html":{},"components/MarkdownEditorComponent.html":{},"pipes/MarkedPipe.html":{},"classes/Mocker.html":{},"components/ModalMessageComponent.html":{},"classes/Museum.html":{},"classes/MuseumBuilder.html":{},"components/MuseumListComponent.html":{},"injectables/MuseumService.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"injectables/PreviousRouteService.html":{},"classes/ProjectConfig.html":{},"injectables/ProjectConfigService.html":{},"classes/ProtoArtifact.html":{},"classes/ProtoCollection.html":{},"classes/ProtoEdit.html":{},"classes/ProtoMuseum.html":{},"classes/ProtoUser.html":{},"classes/PrototypeBuilder.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordModalComponent.html":{},"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{},"classes/ServerCannotConnect.html":{},"classes/ServerConfig.html":{},"injectables/ServerConfigService.html":{},"classes/ServerResponse.html":{},"classes/Tag.html":{},"components/TagSelectionComponent.html":{},"pipes/TextLimitPipe.html":{},"classes/User.html":{},"components/UserEditListComponent.html":{},"injectables/UserInfoService.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"classes/WikiEntry.html":{},"classes/WikiEntryBuilder.html":{},"components/WikiEntryEditorComponent.html":{},"components/WikiEntryViewComponent.html":{},"classes/Wrapper.html":{}}}],["info.service",{"_index":413,"title":{},"body":{"injectables/ArtifactService.html":{},"injectables/CollectionService.html":{},"injectables/EditService.html":{},"components/LoginComponent.html":{},"guards/LoginGuardService.html":{},"injectables/MuseumService.html":{},"components/NavigationBarComponent.html":{},"components/RegistrationComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryViewComponent.html":{}}}],["info.service.ts",{"_index":2059,"title":{},"body":{"injectables/UserInfoService.html":{},"coverage.html":{}}}],["info.service.ts:109",{"_index":2083,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["info.service.ts:119",{"_index":2085,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["info.service.ts:141",{"_index":2078,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["info.service.ts:149",{"_index":2087,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["info.service.ts:26",{"_index":2092,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["info.service.ts:30",{"_index":2091,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["info.service.ts:35",{"_index":2069,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["info.service.ts:66",{"_index":2072,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["info.service.ts:75",{"_index":2074,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["info.service.ts:84",{"_index":2080,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["info.ts",{"_index":480,"title":{},"body":{"classes/BasicUserInfo.html":{},"coverage.html":{}}}],["info.ts:10",{"_index":495,"title":{},"body":{"classes/BasicUserInfo.html":{}}}],["info.ts:14",{"_index":484,"title":{},"body":{"classes/BasicUserInfo.html":{}}}],["information",{"_index":13,"title":{},"body":{"components/AboutComponent.html":{},"classes/Artifact.html":{},"injectables/ArtifactService.html":{},"classes/BasicEntry.html":{},"classes/Collection.html":{},"injectables/CollectionService.html":{},"components/ConfirmationModalComponent.html":{},"components/CreateComponent.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"injectables/EditService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"classes/Museum.html":{},"injectables/MuseumService.html":{},"components/RegistrationComponent.html":{},"classes/ServerConfig.html":{},"classes/User.html":{},"injectables/UserInfoService.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"index.html":{}}}],["inheritance",{"_index":458,"title":{},"body":{"classes/BasicEntryBuilder.html":{}}}],["inherited",{"_index":296,"title":{},"body":{"classes/Artifact.html":{},"classes/ArtifactBuilder.html":{},"classes/Collection.html":{},"classes/CollectionBuilder.html":{},"classes/Museum.html":{},"classes/MuseumBuilder.html":{},"classes/User.html":{},"classes/WikiEntry.html":{},"classes/WikiEntryBuilder.html":{}}}],["initialization",{"_index":33,"title":{},"body":{"components/AboutComponent.html":{},"components/HomeComponent.html":{},"components/MarkdownDisplayComponent.html":{},"components/MuseumListComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResetPasswordModalComponent.html":{},"components/UserMuseumListComponent.html":{}}}],["initialize",{"_index":1357,"title":{},"body":{"components/ModalMessageComponent.html":{},"components/SearchComponent.html":{},"classes/ServerResponse.html":{},"components/WikiEntryEditorComponent.html":{}}}],["initializes",{"_index":924,"title":{},"body":{"components/EntryListComponent.html":{},"classes/WikiEntry.html":{}}}],["initially",{"_index":956,"title":{},"body":{"components/EntryListComponent.html":{}}}],["injectable",{"_index":363,"title":{"injectables/ArtifactService.html":{},"injectables/CollectionService.html":{},"injectables/EditService.html":{},"injectables/GetByCategoryService.html":{},"injectables/LoginService.html":{},"injectables/MuseumService.html":{},"injectables/PreviousRouteService.html":{},"injectables/ProjectConfigService.html":{},"injectables/ServerConfigService.html":{},"injectables/UserInfoService.html":{}},"body":{"injectables/ArtifactService.html":{},"injectables/CollectionService.html":{},"injectables/EditService.html":{},"injectables/GetByCategoryService.html":{},"guards/LoginGuardService.html":{},"injectables/LoginService.html":{},"injectables/MuseumService.html":{},"injectables/PreviousRouteService.html":{},"injectables/ProjectConfigService.html":{},"injectables/ServerConfigService.html":{},"injectables/UserInfoService.html":{},"coverage.html":{}}}],["injectables",{"_index":365,"title":{},"body":{"injectables/ArtifactService.html":{},"injectables/CollectionService.html":{},"injectables/EditService.html":{},"injectables/GetByCategoryService.html":{},"injectables/LoginService.html":{},"injectables/MuseumService.html":{},"injectables/PreviousRouteService.html":{},"injectables/ProjectConfigService.html":{},"injectables/ServerConfigService.html":{},"injectables/UserInfoService.html":{},"overview.html":{}}}],["input",{"_index":547,"title":{},"body":{"components/CollectionListComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/EditOrCreateComponent.html":{},"components/EntryListComponent.html":{},"components/LoadingComponent.html":{},"components/MarkdownDisplayComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/ModalMessageComponent.html":{},"components/SearchComponent.html":{},"components/TagSelectionComponent.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"components/WikiEntryEditorComponent.html":{},"components/WikiEntryViewComponent.html":{}}}],["inputs",{"_index":542,"title":{},"body":{"components/CollectionListComponent.html":{},"components/EditOrCreateComponent.html":{},"components/EntryListComponent.html":{},"components/LoadingComponent.html":{},"components/MarkdownDisplayComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/ModalMessageComponent.html":{},"components/SearchComponent.html":{},"components/TagSelectionComponent.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"components/WikiEntryEditorComponent.html":{},"components/WikiEntryViewComponent.html":{}}}],["inputted",{"_index":1778,"title":{},"body":{"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{}}}],["install",{"_index":2528,"title":{},"body":{"index.html":{}}}],["installation",{"_index":2538,"title":{},"body":{"index.html":{}}}],["instance",{"_index":1519,"title":{},"body":{"classes/ProjectConfig.html":{}}}],["instantiation",{"_index":1010,"title":{},"body":{"components/FooterComponent.html":{}}}],["instead",{"_index":1212,"title":{},"body":{"injectables/LoginService.html":{},"classes/ProjectConfig.html":{},"components/SearchComponent.html":{},"index.html":{}}}],["interactions",{"_index":873,"title":{},"body":{"injectables/EditService.html":{}}}],["interfaces",{"_index":369,"title":{},"body":{"injectables/ArtifactService.html":{},"injectables/CollectionService.html":{},"injectables/MuseumService.html":{}}}],["internet",{"_index":1808,"title":{},"body":{"classes/ServerCannotConnect.html":{},"index.html":{}}}],["interpret",{"_index":1239,"title":{},"body":{"components/MarkdownDisplayComponent.html":{}}}],["intro",{"_index":2192,"title":{},"body":{"components/ViewComponent.html":{},"components/WikiEntryViewComponent.html":{}}}],["introduction",{"_index":290,"title":{},"body":{"classes/Artifact.html":{},"classes/ArtifactBuilder.html":{},"classes/Collection.html":{},"classes/CollectionBuilder.html":{},"components/EntryListComponent.html":{},"classes/Mocker.html":{},"classes/Museum.html":{},"classes/MuseumBuilder.html":{},"classes/WikiEntry.html":{},"classes/WikiEntryBuilder.html":{},"components/WikiEntryEditorComponent.html":{}}}],["introduction('test",{"_index":1323,"title":{},"body":{"classes/Mocker.html":{}}}],["introduction(form.get('introduction').value",{"_index":2394,"title":{},"body":{"components/WikiEntryEditorComponent.html":{}}}],["introduction(introduction",{"_index":344,"title":{},"body":{"classes/ArtifactBuilder.html":{},"classes/CollectionBuilder.html":{},"classes/MuseumBuilder.html":{},"classes/WikiEntryBuilder.html":{}}}],["introductory",{"_index":302,"title":{},"body":{"classes/Artifact.html":{},"classes/Collection.html":{},"classes/Museum.html":{},"classes/WikiEntry.html":{}}}],["invalid",{"_index":1732,"title":{},"body":{"components/RegistrationComponent.html":{},"components/WikiEntryEditorComponent.html":{}}}],["inverted",{"_index":2036,"title":{},"body":{"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{}}}],["irreversible",{"_index":586,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["isloggedin",{"_index":2061,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["islogging",{"_index":1508,"title":{},"body":{"classes/ProjectConfig.html":{}}}],["iso",{"_index":657,"title":{},"body":{"classes/Edit.html":{},"classes/ProtoEdit.html":{}}}],["istesting",{"_index":1509,"title":{},"body":{"classes/ProjectConfig.html":{}}}],["isusingmockdata",{"_index":1510,"title":{},"body":{"classes/ProjectConfig.html":{}}}],["it's",{"_index":492,"title":{},"body":{"classes/BasicUserInfo.html":{},"components/HomeComponent.html":{}}}],["italics",{"_index":2606,"title":{},"body":{"miscellaneous/variables.html":{}}}],["item",{"_index":938,"title":{},"body":{"components/EntryListComponent.html":{},"components/ViewComponent.html":{}}}],["itemname",{"_index":1472,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["items",{"_index":942,"title":{},"body":{"components/EntryListComponent.html":{},"components/NavigationBarComponent.html":{}}}],["itself",{"_index":1571,"title":{},"body":{"classes/ProtoCollection.html":{},"classes/ProtoMuseum.html":{}}}],["java",{"_index":2428,"title":{},"body":{"classes/Wrapper.html":{}}}],["join",{"_index":556,"title":{},"body":{"components/CollectionListComponent.html":{}}}],["jquery",{"_index":2498,"title":{},"body":{"dependencies.html":{}}}],["js",{"_index":1044,"title":{},"body":{"classes/HashHelper.html":{},"dependencies.html":{}}}],["json",{"_index":1850,"title":{},"body":{"classes/ServerResponse.html":{},"components/UserProfileComponent.html":{}}}],["keyword",{"_index":983,"title":{},"body":{"components/EntryListComponent.html":{}}}],["keywords",{"_index":910,"title":{},"body":{"components/EntryListComponent.html":{},"components/SearchComponent.html":{}}}],["lafayette53",{"_index":1012,"title":{},"body":{"components/FooterComponent.html":{},"index.html":{}}}],["language",{"_index":2593,"title":{},"body":{"miscellaneous/variables.html":{}}}],["last",{"_index":2549,"title":{},"body":{"index.html":{}}}],["later",{"_index":1191,"title":{},"body":{"guards/LoginGuardService.html":{}}}],["latest",{"_index":2529,"title":{},"body":{"index.html":{}}}],["leads",{"_index":1200,"title":{},"body":{"guards/LoginGuardService.html":{}}}],["left",{"_index":2334,"title":{},"body":{"components/ViewEditComponent.html":{}}}],["legend",{"_index":49,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CollectionListComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/CreateComponent.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"components/EntryListComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownDisplayComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/ModalMessageComponent.html":{},"components/MuseumListComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordModalComponent.html":{},"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{},"components/TagSelectionComponent.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryEditorComponent.html":{},"components/WikiEntryViewComponent.html":{},"overview.html":{}}}],["lekso",{"_index":1013,"title":{},"body":{"components/FooterComponent.html":{}}}],["length",{"_index":489,"title":{},"body":{"classes/BasicUserInfo.html":{},"components/RegistrationComponent.html":{},"pipes/TextLimitPipe.html":{}}}],["lengthlimit",{"_index":1929,"title":{},"body":{"pipes/TextLimitPipe.html":{}}}],["letter",{"_index":821,"title":{},"body":{"components/EditOrCreateComponent.html":{},"components/UserEditListComponent.html":{},"components/ViewEditComponent.html":{},"miscellaneous/functions.html":{}}}],["letter.ts",{"_index":2454,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["level",{"_index":1502,"title":{},"body":{"classes/ProjectConfig.html":{}}}],["li",{"_index":1017,"title":{},"body":{"components/FooterComponent.html":{},"index.html":{}}}],["lih@s.com",{"_index":2122,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["limit",{"_index":1923,"title":{},"body":{"pipes/TextLimitPipe.html":{}}}],["limit.pipe",{"_index":208,"title":{},"body":{"modules/AppModule.html":{}}}],["limit.pipe.ts",{"_index":1922,"title":{},"body":{"pipes/TextLimitPipe.html":{},"coverage.html":{}}}],["limit.pipe.ts:18",{"_index":1925,"title":{},"body":{"pipes/TextLimitPipe.html":{}}}],["limited",{"_index":1926,"title":{},"body":{"pipes/TextLimitPipe.html":{}}}],["link",{"_index":1136,"title":{},"body":{"components/LoginComponent.html":{},"components/NavigationBarComponent.html":{},"injectables/PreviousRouteService.html":{}}}],["link](https://github.com/adam",{"_index":2614,"title":{},"body":{"miscellaneous/variables.html":{}}}],["list",{"_index":237,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/Artifact.html":{},"components/CollectionListComponent.html":{},"components/EntryListComponent.html":{},"components/HomeComponent.html":{},"classes/MuseumBuilder.html":{},"components/MuseumListComponent.html":{},"injectables/MuseumService.html":{},"classes/ProtoArtifact.html":{},"classes/ProtoCollection.html":{},"classes/ProtoMuseum.html":{},"classes/ProtoUser.html":{},"components/TagSelectionComponent.html":{},"classes/User.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"miscellaneous/variables.html":{}}}],["list'},{'name",{"_index":61,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/CollectionListComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/CreateComponent.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"components/EntryListComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownDisplayComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/ModalMessageComponent.html":{},"components/MuseumListComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordModalComponent.html":{},"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{},"components/TagSelectionComponent.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryEditorComponent.html":{},"components/WikiEntryViewComponent.html":{}}}],["list.component",{"_index":165,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["list.component.css",{"_index":539,"title":{},"body":{"components/CollectionListComponent.html":{},"components/EntryListComponent.html":{},"components/MuseumListComponent.html":{},"components/UserEditListComponent.html":{}}}],["list.component.html",{"_index":540,"title":{},"body":{"components/CollectionListComponent.html":{},"components/EntryListComponent.html":{},"components/MuseumListComponent.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{}}}],["list.component.scss",{"_index":2135,"title":{},"body":{"components/UserMuseumListComponent.html":{}}}],["list.component.ts",{"_index":532,"title":{},"body":{"components/CollectionListComponent.html":{},"components/EntryListComponent.html":{},"components/MuseumListComponent.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"coverage.html":{}}}],["list.component.ts:100",{"_index":1976,"title":{},"body":{"components/UserEditListComponent.html":{}}}],["list.component.ts:103",{"_index":2147,"title":{},"body":{"components/UserMuseumListComponent.html":{}}}],["list.component.ts:105",{"_index":940,"title":{},"body":{"components/EntryListComponent.html":{}}}],["list.component.ts:112",{"_index":2143,"title":{},"body":{"components/UserMuseumListComponent.html":{}}}],["list.component.ts:113",{"_index":1985,"title":{},"body":{"components/UserEditListComponent.html":{}}}],["list.component.ts:121",{"_index":957,"title":{},"body":{"components/EntryListComponent.html":{}}}],["list.component.ts:138",{"_index":935,"title":{},"body":{"components/EntryListComponent.html":{},"components/UserEditListComponent.html":{}}}],["list.component.ts:146",{"_index":1974,"title":{},"body":{"components/UserEditListComponent.html":{}}}],["list.component.ts:156",{"_index":2146,"title":{},"body":{"components/UserMuseumListComponent.html":{}}}],["list.component.ts:157",{"_index":1982,"title":{},"body":{"components/UserEditListComponent.html":{}}}],["list.component.ts:18",{"_index":543,"title":{},"body":{"components/CollectionListComponent.html":{}}}],["list.component.ts:181",{"_index":1990,"title":{},"body":{"components/UserEditListComponent.html":{}}}],["list.component.ts:19",{"_index":1412,"title":{},"body":{"components/MuseumListComponent.html":{}}}],["list.component.ts:22",{"_index":546,"title":{},"body":{"components/CollectionListComponent.html":{},"components/EntryListComponent.html":{}}}],["list.component.ts:23",{"_index":1411,"title":{},"body":{"components/MuseumListComponent.html":{}}}],["list.component.ts:27",{"_index":545,"title":{},"body":{"components/CollectionListComponent.html":{},"components/EntryListComponent.html":{},"components/MuseumListComponent.html":{},"components/UserMuseumListComponent.html":{}}}],["list.component.ts:29",{"_index":1967,"title":{},"body":{"components/UserEditListComponent.html":{}}}],["list.component.ts:31",{"_index":2138,"title":{},"body":{"components/UserMuseumListComponent.html":{}}}],["list.component.ts:33",{"_index":928,"title":{},"body":{"components/EntryListComponent.html":{}}}],["list.component.ts:34",{"_index":1968,"title":{},"body":{"components/UserEditListComponent.html":{}}}],["list.component.ts:36",{"_index":2141,"title":{},"body":{"components/UserMuseumListComponent.html":{}}}],["list.component.ts:39",{"_index":929,"title":{},"body":{"components/EntryListComponent.html":{}}}],["list.component.ts:40",{"_index":1969,"title":{},"body":{"components/UserEditListComponent.html":{}}}],["list.component.ts:41",{"_index":2149,"title":{},"body":{"components/UserMuseumListComponent.html":{}}}],["list.component.ts:42",{"_index":1408,"title":{},"body":{"components/MuseumListComponent.html":{}}}],["list.component.ts:44",{"_index":971,"title":{},"body":{"components/EntryListComponent.html":{}}}],["list.component.ts:45",{"_index":2000,"title":{},"body":{"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{}}}],["list.component.ts:49",{"_index":2002,"title":{},"body":{"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{}}}],["list.component.ts:50",{"_index":964,"title":{},"body":{"components/EntryListComponent.html":{}}}],["list.component.ts:53",{"_index":1995,"title":{},"body":{"components/UserEditListComponent.html":{}}}],["list.component.ts:54",{"_index":2148,"title":{},"body":{"components/UserMuseumListComponent.html":{}}}],["list.component.ts:55",{"_index":968,"title":{},"body":{"components/EntryListComponent.html":{}}}],["list.component.ts:58",{"_index":1992,"title":{},"body":{"components/UserEditListComponent.html":{}}}],["list.component.ts:59",{"_index":1407,"title":{},"body":{"components/MuseumListComponent.html":{},"components/UserMuseumListComponent.html":{}}}],["list.component.ts:61",{"_index":923,"title":{},"body":{"components/EntryListComponent.html":{}}}],["list.component.ts:63",{"_index":1996,"title":{},"body":{"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{}}}],["list.component.ts:67",{"_index":2136,"title":{},"body":{"components/UserMuseumListComponent.html":{}}}],["list.component.ts:68",{"_index":2011,"title":{},"body":{"components/UserEditListComponent.html":{}}}],["list.component.ts:72",{"_index":2013,"title":{},"body":{"components/UserEditListComponent.html":{}}}],["list.component.ts:76",{"_index":1964,"title":{},"body":{"components/UserEditListComponent.html":{}}}],["list.component.ts:78",{"_index":955,"title":{},"body":{"components/EntryListComponent.html":{}}}],["list.component.ts:85",{"_index":2144,"title":{},"body":{"components/UserMuseumListComponent.html":{}}}],["list.component.ts:87",{"_index":953,"title":{},"body":{"components/EntryListComponent.html":{}}}],["list.component.ts:91",{"_index":2145,"title":{},"body":{"components/UserMuseumListComponent.html":{}}}],["list.component.ts:93",{"_index":1977,"title":{},"body":{"components/UserEditListComponent.html":{}}}],["list.component.ts:96",{"_index":948,"title":{},"body":{"components/EntryListComponent.html":{}}}],["list/collection",{"_index":242,"title":{},"body":{"modules/AppModule.html":{},"components/CollectionListComponent.html":{},"coverage.html":{}}}],["list/entry",{"_index":213,"title":{},"body":{"modules/AppModule.html":{},"components/EntryListComponent.html":{},"coverage.html":{}}}],["list/museum",{"_index":164,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/MuseumListComponent.html":{},"coverage.html":{}}}],["list/user",{"_index":232,"title":{},"body":{"modules/AppModule.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"coverage.html":{}}}],["literal",{"_index":1642,"title":{},"body":{"classes/PrototypeBuilder.html":{},"miscellaneous/variables.html":{}}}],["loading",{"_index":710,"title":{},"body":{"components/EditComponent.html":{},"components/LoadingComponent.html":{},"components/ModalMessageComponent.html":{},"components/MuseumListComponent.html":{},"components/TagSelectionComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{}}}],["loading'},{'name",{"_index":78,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/CollectionListComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/CreateComponent.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"components/EntryListComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownDisplayComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/ModalMessageComponent.html":{},"components/MuseumListComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordModalComponent.html":{},"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{},"components/TagSelectionComponent.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryEditorComponent.html":{},"components/WikiEntryViewComponent.html":{}}}],["loading.component.css",{"_index":1067,"title":{},"body":{"components/LoadingComponent.html":{}}}],["loading.component.html",{"_index":1068,"title":{},"body":{"components/LoadingComponent.html":{}}}],["loadingcomponent",{"_index":77,"title":{"components/LoadingComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CollectionListComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/CreateComponent.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"components/EntryListComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownDisplayComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/ModalMessageComponent.html":{},"components/MuseumListComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordModalComponent.html":{},"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{},"components/TagSelectionComponent.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryEditorComponent.html":{},"components/WikiEntryViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loadingedit",{"_index":2264,"title":{},"body":{"components/ViewEditComponent.html":{}}}],["loadingmessage",{"_index":1070,"title":{},"body":{"components/LoadingComponent.html":{}}}],["localcpptestingserverurl",{"_index":1815,"title":{},"body":{"classes/ServerConfig.html":{}}}],["locally",{"_index":1825,"title":{},"body":{"classes/ServerConfig.html":{}}}],["log",{"_index":715,"title":{},"body":{"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"components/LoginComponent.html":{},"classes/ProjectConfig.html":{},"components/UserProfileComponent.html":{}}}],["logged",{"_index":1095,"title":{},"body":{"components/LoginComponent.html":{},"guards/LoginGuardService.html":{},"injectables/MuseumService.html":{},"components/NavigationBarComponent.html":{},"classes/ProjectConfig.html":{},"components/TagSelectionComponent.html":{},"injectables/UserInfoService.html":{},"components/UserProfileComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryViewComponent.html":{}}}],["loggedin",{"_index":1458,"title":{},"body":{"components/NavigationBarComponent.html":{},"components/ViewEditComponent.html":{}}}],["logging",{"_index":388,"title":{},"body":{"injectables/ArtifactService.html":{},"components/EditOrCreateComponent.html":{},"components/EntryListComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{}}}],["login",{"_index":278,"title":{},"body":{"modules/AppRoutingModule.html":{},"classes/BasicUserInfo.html":{},"components/LoginComponent.html":{},"guards/LoginGuardService.html":{},"injectables/LoginService.html":{},"components/NavigationBarComponent.html":{},"components/RegistrationComponent.html":{},"injectables/UserInfoService.html":{},"components/UserProfileComponent.html":{},"components/ViewEditComponent.html":{}}}],["login'},{'name",{"_index":80,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/CollectionListComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/CreateComponent.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"components/EntryListComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownDisplayComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/ModalMessageComponent.html":{},"components/MuseumListComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordModalComponent.html":{},"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{},"components/TagSelectionComponent.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryEditorComponent.html":{},"components/WikiEntryViewComponent.html":{}}}],["login(logincredentials",{"_index":2079,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["login(new",{"_index":2101,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["login(usercredentials",{"_index":1221,"title":{},"body":{"injectables/LoginService.html":{}}}],["login.component.css",{"_index":1087,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.html",{"_index":1088,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.service",{"_index":2094,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["login/logout",{"_index":2090,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["logincomponent",{"_index":79,"title":{"components/LoginComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CollectionListComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/CreateComponent.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"components/EntryListComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownDisplayComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/ModalMessageComponent.html":{},"components/MuseumListComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordModalComponent.html":{},"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{},"components/TagSelectionComponent.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryEditorComponent.html":{},"components/WikiEntryViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginconsole",{"_index":1504,"title":{},"body":{"classes/ProjectConfig.html":{}}}],["logincredentials",{"_index":2082,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["logincredentials.password",{"_index":2117,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["logincredentials.username",{"_index":2115,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["loginevent",{"_index":2062,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["loginguardservice",{"_index":261,"title":{"guards/LoginGuardService.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/LoginGuardService.html":{},"coverage.html":{}}}],["loginpromise",{"_index":2110,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["loginpromise.then((res",{"_index":2112,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["loginservice",{"_index":1208,"title":{"injectables/LoginService.html":{}},"body":{"injectables/LoginService.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordModalComponent.html":{},"injectables/UserInfoService.html":{},"coverage.html":{}}}],["logout",{"_index":2065,"title":{},"body":{"injectables/UserInfoService.html":{},"components/UserProfileComponent.html":{}}}],["look",{"_index":812,"title":{},"body":{"components/EditOrCreateComponent.html":{},"components/UserMuseumListComponent.html":{}}}],["looks",{"_index":2552,"title":{},"body":{"index.html":{}}}],["made",{"_index":637,"title":{},"body":{"classes/Edit.html":{},"components/EntryListComponent.html":{},"classes/ProtoEdit.html":{},"components/TagSelectionComponent.html":{}}}],["main",{"_index":123,"title":{},"body":{"components/AppComponent.html":{}}}],["make",{"_index":718,"title":{},"body":{"components/EditComponent.html":{},"components/EntryListComponent.html":{}}}],["makes",{"_index":1391,"title":{},"body":{"classes/Museum.html":{},"injectables/MuseumService.html":{}}}],["making",{"_index":2173,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["malolan",{"_index":1018,"title":{},"body":{"components/FooterComponent.html":{}}}],["manipulation",{"_index":1356,"title":{},"body":{"components/ModalMessageComponent.html":{}}}],["map((entry",{"_index":554,"title":{},"body":{"components/CollectionListComponent.html":{}}}],["map((tag",{"_index":1919,"title":{},"body":{"components/TagSelectionComponent.html":{}}}],["maps",{"_index":1892,"title":{},"body":{"components/TagSelectionComponent.html":{}}}],["margin",{"_index":1000,"title":{},"body":{"components/EntryListComponent.html":{}}}],["markdown",{"_index":82,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"classes/Artifact.html":{},"classes/ArtifactBuilder.html":{},"classes/Collection.html":{},"classes/CollectionBuilder.html":{},"components/CollectionListComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/CreateComponent.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"components/EntryListComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownDisplayComponent.html":{},"components/MarkdownEditorComponent.html":{},"pipes/MarkedPipe.html":{},"classes/Mocker.html":{},"components/ModalMessageComponent.html":{},"classes/Museum.html":{},"classes/MuseumBuilder.html":{},"components/MuseumListComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordModalComponent.html":{},"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{},"components/TagSelectionComponent.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"classes/WikiEntry.html":{},"classes/WikiEntryBuilder.html":{},"components/WikiEntryEditorComponent.html":{},"components/WikiEntryViewComponent.html":{},"miscellaneous/variables.html":{}}}],["markdowndisplaycomponent",{"_index":81,"title":{"components/MarkdownDisplayComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CollectionListComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/CreateComponent.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"components/EntryListComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownDisplayComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/ModalMessageComponent.html":{},"components/MuseumListComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordModalComponent.html":{},"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{},"components/TagSelectionComponent.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryEditorComponent.html":{},"components/WikiEntryViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["markdowneditorcomponent",{"_index":84,"title":{"components/MarkdownEditorComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CollectionListComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/CreateComponent.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"components/EntryListComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownDisplayComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/ModalMessageComponent.html":{},"components/MuseumListComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordModalComponent.html":{},"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{},"components/TagSelectionComponent.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryEditorComponent.html":{},"components/WikiEntryViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["markdowntext",{"_index":1243,"title":{},"body":{"components/MarkdownDisplayComponent.html":{}}}],["marked",{"_index":1279,"title":{},"body":{"pipes/MarkedPipe.html":{},"dependencies.html":{}}}],["marked(value",{"_index":1288,"title":{},"body":{"pipes/MarkedPipe.html":{}}}],["markedpipe",{"_index":150,"title":{"pipes/MarkedPipe.html":{}},"body":{"modules/AppModule.html":{},"pipes/MarkedPipe.html":{},"coverage.html":{},"overview.html":{}}}],["markup",{"_index":2592,"title":{},"body":{"miscellaneous/variables.html":{}}}],["matbuttonmodule",{"_index":223,"title":{},"body":{"modules/AppModule.html":{}}}],["matcardmodule",{"_index":233,"title":{},"body":{"modules/AppModule.html":{}}}],["match",{"_index":1731,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["matcheckboxmodule",{"_index":219,"title":{},"body":{"modules/AppModule.html":{}}}],["matches",{"_index":1693,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["matching",{"_index":120,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"classes/Artifact.html":{},"classes/ArtifactBuilder.html":{},"injectables/ArtifactService.html":{},"classes/BasicEntry.html":{},"classes/BasicEntryBuilder.html":{},"classes/BasicUserInfo.html":{},"classes/Collection.html":{},"classes/CollectionBuilder.html":{},"components/CollectionListComponent.html":{},"injectables/CollectionService.html":{},"components/ConfirmationModalComponent.html":{},"components/CreateComponent.html":{},"classes/Edit.html":{},"classes/EditBuilder.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"injectables/EditService.html":{},"components/EntryListComponent.html":{},"components/FooterComponent.html":{},"injectables/GetByCategoryService.html":{},"classes/HashHelper.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardService.html":{},"injectables/LoginService.html":{},"components/MarkdownDisplayComponent.html":{},"components/MarkdownEditorComponent.html":{},"pipes/MarkedPipe.html":{},"classes/Mocker.html":{},"components/ModalMessageComponent.html":{},"classes/Museum.html":{},"classes/MuseumBuilder.html":{},"components/MuseumListComponent.html":{},"injectables/MuseumService.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"injectables/PreviousRouteService.html":{},"classes/ProjectConfig.html":{},"injectables/ProjectConfigService.html":{},"classes/ProtoArtifact.html":{},"classes/ProtoCollection.html":{},"classes/ProtoEdit.html":{},"classes/ProtoMuseum.html":{},"classes/ProtoUser.html":{},"classes/PrototypeBuilder.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordModalComponent.html":{},"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{},"classes/ServerCannotConnect.html":{},"classes/ServerConfig.html":{},"injectables/ServerConfigService.html":{},"classes/ServerResponse.html":{},"classes/Tag.html":{},"components/TagSelectionComponent.html":{},"pipes/TextLimitPipe.html":{},"classes/User.html":{},"components/UserEditListComponent.html":{},"injectables/UserInfoService.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"classes/WikiEntry.html":{},"classes/WikiEntryBuilder.html":{},"components/WikiEntryEditorComponent.html":{},"components/WikiEntryViewComponent.html":{},"classes/Wrapper.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matgridlistmodule",{"_index":235,"title":{},"body":{"modules/AppModule.html":{}}}],["math.floor(math.random",{"_index":1316,"title":{},"body":{"classes/Mocker.html":{}}}],["matinputmodule",{"_index":226,"title":{},"body":{"modules/AppModule.html":{}}}],["matselectmodule",{"_index":228,"title":{},"body":{"modules/AppModule.html":{}}}],["mattoolbarmodule",{"_index":221,"title":{},"body":{"modules/AppModule.html":{}}}],["max_password_length",{"_index":1665,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["max_username_length",{"_index":1663,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["maximum",{"_index":1680,"title":{},"body":{"components/RegistrationComponent.html":{},"pipes/TextLimitPipe.html":{}}}],["meaning",{"_index":2402,"title":{},"body":{"components/WikiEntryViewComponent.html":{}}}],["medium",{"_index":2052,"title":{},"body":{"components/UserEditListComponent.html":{}}}],["members",{"_index":593,"title":{},"body":{"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{}}}],["message",{"_index":591,"title":{},"body":{"components/ConfirmationModalComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/ModalMessageComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RegistrationComponent.html":{},"classes/ServerCannotConnect.html":{},"classes/ServerResponse.html":{},"components/UserEditListComponent.html":{}}}],["message'},{'name",{"_index":88,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/CollectionListComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/CreateComponent.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"components/EntryListComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownDisplayComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/ModalMessageComponent.html":{},"components/MuseumListComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordModalComponent.html":{},"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{},"components/TagSelectionComponent.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryEditorComponent.html":{},"components/WikiEntryViewComponent.html":{}}}],["message.component",{"_index":206,"title":{},"body":{"modules/AppModule.html":{},"components/EditOrCreateComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryViewComponent.html":{}}}],["message.component.css",{"_index":1334,"title":{},"body":{"components/ModalMessageComponent.html":{}}}],["message.component.html",{"_index":1335,"title":{},"body":{"components/ModalMessageComponent.html":{}}}],["message.component.ts",{"_index":1333,"title":{},"body":{"components/ModalMessageComponent.html":{},"coverage.html":{}}}],["message.component.ts:21",{"_index":1345,"title":{},"body":{"components/ModalMessageComponent.html":{}}}],["message.component.ts:25",{"_index":1341,"title":{},"body":{"components/ModalMessageComponent.html":{}}}],["message.component.ts:29",{"_index":1344,"title":{},"body":{"components/ModalMessageComponent.html":{}}}],["message.component.ts:33",{"_index":1342,"title":{},"body":{"components/ModalMessageComponent.html":{}}}],["message.component.ts:38",{"_index":1343,"title":{},"body":{"components/ModalMessageComponent.html":{}}}],["message.component.ts:43",{"_index":1360,"title":{},"body":{"components/ModalMessageComponent.html":{}}}],["message.component.ts:47",{"_index":1364,"title":{},"body":{"components/ModalMessageComponent.html":{}}}],["message.component.ts:53",{"_index":1354,"title":{},"body":{"components/ModalMessageComponent.html":{}}}],["message.component.ts:59",{"_index":1359,"title":{},"body":{"components/ModalMessageComponent.html":{}}}],["message.component.ts:69",{"_index":1353,"title":{},"body":{"components/ModalMessageComponent.html":{}}}],["message.component.ts:80",{"_index":1347,"title":{},"body":{"components/ModalMessageComponent.html":{}}}],["message/modal",{"_index":205,"title":{},"body":{"modules/AppModule.html":{},"components/EditOrCreateComponent.html":{},"components/LoginComponent.html":{},"components/ModalMessageComponent.html":{},"components/RegistrationComponent.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryViewComponent.html":{},"coverage.html":{}}}],["messages",{"_index":2543,"title":{},"body":{"index.html":{}}}],["metadata",{"_index":20,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/CollectionListComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/CreateComponent.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"components/EntryListComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownDisplayComponent.html":{},"components/MarkdownEditorComponent.html":{},"pipes/MarkedPipe.html":{},"components/ModalMessageComponent.html":{},"components/MuseumListComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordModalComponent.html":{},"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{},"components/TagSelectionComponent.html":{},"pipes/TextLimitPipe.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryEditorComponent.html":{},"components/WikiEntryViewComponent.html":{}}}],["method",{"_index":330,"title":{},"body":{"classes/ArtifactBuilder.html":{},"classes/BasicEntryBuilder.html":{},"classes/CollectionBuilder.html":{},"classes/EditBuilder.html":{},"components/LoginComponent.html":{},"classes/Museum.html":{},"classes/MuseumBuilder.html":{},"components/ResetPasswordModalComponent.html":{},"injectables/UserInfoService.html":{},"classes/WikiEntryBuilder.html":{},"classes/Wrapper.html":{}}}],["methods",{"_index":28,"title":{},"body":{"components/AboutComponent.html":{},"classes/ArtifactBuilder.html":{},"injectables/ArtifactService.html":{},"classes/BasicEntryBuilder.html":{},"classes/CollectionBuilder.html":{},"components/CollectionListComponent.html":{},"injectables/CollectionService.html":{},"components/CreateComponent.html":{},"classes/EditBuilder.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"injectables/EditService.html":{},"components/EntryListComponent.html":{},"injectables/GetByCategoryService.html":{},"classes/HashHelper.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardService.html":{},"injectables/LoginService.html":{},"components/MarkdownDisplayComponent.html":{},"components/MarkdownEditorComponent.html":{},"pipes/MarkedPipe.html":{},"classes/Mocker.html":{},"components/ModalMessageComponent.html":{},"classes/Museum.html":{},"classes/MuseumBuilder.html":{},"components/MuseumListComponent.html":{},"injectables/MuseumService.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"injectables/PreviousRouteService.html":{},"classes/ProjectConfig.html":{},"injectables/ProjectConfigService.html":{},"classes/ProtoArtifact.html":{},"classes/ProtoCollection.html":{},"classes/ProtoEdit.html":{},"classes/ProtoUser.html":{},"classes/PrototypeBuilder.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordModalComponent.html":{},"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{},"classes/ServerConfig.html":{},"injectables/ServerConfigService.html":{},"classes/Tag.html":{},"components/TagSelectionComponent.html":{},"pipes/TextLimitPipe.html":{},"components/UserEditListComponent.html":{},"injectables/UserInfoService.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"classes/WikiEntryBuilder.html":{},"components/WikiEntryEditorComponent.html":{},"components/WikiEntryViewComponent.html":{}}}],["min_password_length",{"_index":1664,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["min_username_length",{"_index":1662,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["minimal",{"_index":445,"title":{},"body":{"classes/BasicEntry.html":{}}}],["minimum",{"_index":481,"title":{},"body":{"classes/BasicUserInfo.html":{},"components/RegistrationComponent.html":{}}}],["miscellaneous",{"_index":2512,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mixed",{"_index":2432,"title":{},"body":{"classes/Wrapper.html":{}}}],["mock",{"_index":888,"title":{},"body":{"injectables/EditService.html":{},"classes/Mocker.html":{},"classes/ProjectConfig.html":{}}}],["mockedits",{"_index":2128,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["mocker",{"_index":887,"title":{"classes/Mocker.html":{}},"body":{"injectables/EditService.html":{},"classes/Mocker.html":{},"injectables/UserInfoService.html":{},"coverage.html":{}}}],["mocker.mockprotoartifact",{"_index":902,"title":{},"body":{"injectables/EditService.html":{}}}],["mocker.mockprotoedit",{"_index":899,"title":{},"body":{"injectables/EditService.html":{}}}],["mockprotoartifact",{"_index":1295,"title":{},"body":{"classes/Mocker.html":{}}}],["mockprotoedit",{"_index":1296,"title":{},"body":{"classes/Mocker.html":{}}}],["mockprotouser",{"_index":2066,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["mockuser",{"_index":2119,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["mockuser.editslist",{"_index":2131,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["mockuser.museumlist",{"_index":2123,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["mockuser.user",{"_index":2120,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["mockwikientry",{"_index":1297,"title":{},"body":{"classes/Mocker.html":{}}}],["modal",{"_index":87,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/CollectionListComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/CreateComponent.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"components/EntryListComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownDisplayComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/ModalMessageComponent.html":{},"components/MuseumListComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordModalComponent.html":{},"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{},"components/TagSelectionComponent.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryEditorComponent.html":{},"components/WikiEntryViewComponent.html":{},"classes/Wrapper.html":{}}}],["modal's",{"_index":1151,"title":{},"body":{"components/LoginComponent.html":{}}}],["modal'},{'name",{"_index":64,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/CollectionListComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/CreateComponent.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"components/EntryListComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownDisplayComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/ModalMessageComponent.html":{},"components/MuseumListComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordModalComponent.html":{},"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{},"components/TagSelectionComponent.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryEditorComponent.html":{},"components/WikiEntryViewComponent.html":{}}}],["modal.close",{"_index":1159,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["modal.component",{"_index":245,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/UserMuseumListComponent.html":{}}}],["modal.component.css",{"_index":589,"title":{},"body":{"components/ConfirmationModalComponent.html":{},"components/ResetPasswordModalComponent.html":{}}}],["modal.component.html",{"_index":590,"title":{},"body":{"components/ConfirmationModalComponent.html":{},"components/ResetPasswordModalComponent.html":{}}}],["modal.component.ts",{"_index":582,"title":{},"body":{"components/ConfirmationModalComponent.html":{},"components/ResetPasswordModalComponent.html":{},"coverage.html":{}}}],["modal.component.ts:16",{"_index":603,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["modal.component.ts:20",{"_index":597,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["modal.component.ts:21",{"_index":1745,"title":{},"body":{"components/ResetPasswordModalComponent.html":{}}}],["modal.component.ts:25",{"_index":592,"title":{},"body":{"components/ConfirmationModalComponent.html":{},"components/ResetPasswordModalComponent.html":{}}}],["modal.component.ts:38",{"_index":1743,"title":{},"body":{"components/ResetPasswordModalComponent.html":{}}}],["modal.component.ts:44",{"_index":1744,"title":{},"body":{"components/ResetPasswordModalComponent.html":{}}}],["modal.component.ts:51",{"_index":1742,"title":{},"body":{"components/ResetPasswordModalComponent.html":{}}}],["modal.componentinstance",{"_index":848,"title":{},"body":{"components/EditOrCreateComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryViewComponent.html":{}}}],["modal/confirmation",{"_index":244,"title":{},"body":{"modules/AppModule.html":{},"components/ConfirmationModalComponent.html":{},"components/UserMuseumListComponent.html":{},"coverage.html":{}}}],["modal/reset",{"_index":247,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/ResetPasswordModalComponent.html":{},"coverage.html":{}}}],["modalcomponent",{"_index":798,"title":{},"body":{"components/EditOrCreateComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryViewComponent.html":{}}}],["modalcomponent.fromnetworkerror(err",{"_index":843,"title":{},"body":{"components/EditOrCreateComponent.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryViewComponent.html":{}}}],["modalcomponent.fromnetworkerror(error",{"_index":1161,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["modalcomponent.fromserverresponse(res",{"_index":838,"title":{},"body":{"components/EditOrCreateComponent.html":{},"components/RegistrationComponent.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryViewComponent.html":{}}}],["modalcomponent.fromserverresponse(response",{"_index":1154,"title":{},"body":{"components/LoginComponent.html":{}}}],["modalcomponent.message",{"_index":1157,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["modalcomponent.modal",{"_index":851,"title":{},"body":{"components/EditOrCreateComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryViewComponent.html":{}}}],["modalcomponent.title",{"_index":849,"title":{},"body":{"components/EditOrCreateComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryViewComponent.html":{}}}],["modalcomponent.waitingforserverresponse",{"_index":852,"title":{},"body":{"components/EditOrCreateComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryViewComponent.html":{}}}],["modalmessagecomponent",{"_index":86,"title":{"components/ModalMessageComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CollectionListComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/CreateComponent.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"components/EntryListComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownDisplayComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/ModalMessageComponent.html":{},"components/MuseumListComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordModalComponent.html":{},"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{},"components/TagSelectionComponent.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryEditorComponent.html":{},"components/WikiEntryViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["modalmessagecomponent.fromnetworkerror(err",{"_index":1169,"title":{},"body":{"components/LoginComponent.html":{}}}],["modalmessagecomponent.fromserverresponse(response",{"_index":1168,"title":{},"body":{"components/LoginComponent.html":{}}}],["modalmessagecomponent.modal",{"_index":1164,"title":{},"body":{"components/LoginComponent.html":{}}}],["modalmessagecomponent.title",{"_index":1165,"title":{},"body":{"components/LoginComponent.html":{}}}],["modalmessagecomponent.waitingforserverresponse",{"_index":1166,"title":{},"body":{"components/LoginComponent.html":{}}}],["modals",{"_index":1966,"title":{},"body":{"components/UserEditListComponent.html":{}}}],["modalservice",{"_index":777,"title":{},"body":{"components/EditOrCreateComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryViewComponent.html":{}}}],["mode",{"_index":391,"title":{},"body":{"injectables/ArtifactService.html":{},"injectables/CollectionService.html":{},"components/CreateComponent.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"injectables/MuseumService.html":{},"classes/ProjectConfig.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["mode.create",{"_index":395,"title":{},"body":{"injectables/ArtifactService.html":{},"injectables/CollectionService.html":{},"components/CreateComponent.html":{},"components/EditOrCreateComponent.html":{},"injectables/MuseumService.html":{}}}],["mode.edit",{"_index":723,"title":{},"body":{"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{}}}],["models/artifact",{"_index":412,"title":{},"body":{"injectables/ArtifactService.html":{},"components/CollectionListComponent.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"classes/Mocker.html":{},"classes/ProtoArtifact.html":{},"classes/ProtoCollection.html":{},"classes/ProtoEdit.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{}}}],["models/basic",{"_index":548,"title":{},"body":{"components/CollectionListComponent.html":{},"components/EditOrCreateComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"injectables/MuseumService.html":{},"classes/ProtoArtifact.html":{},"classes/ProtoEdit.html":{},"classes/Tag.html":{},"components/TagSelectionComponent.html":{},"injectables/UserInfoService.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{}}}],["models/builders/artifact",{"_index":823,"title":{},"body":{"components/EditOrCreateComponent.html":{}}}],["models/builders/basic",{"_index":824,"title":{},"body":{"components/EditOrCreateComponent.html":{}}}],["models/builders/collection",{"_index":828,"title":{},"body":{"components/EditOrCreateComponent.html":{},"classes/ProtoCollection.html":{},"classes/ProtoEdit.html":{}}}],["models/builders/edit",{"_index":1596,"title":{},"body":{"classes/ProtoEdit.html":{}}}],["models/builders/museum",{"_index":827,"title":{},"body":{"components/EditOrCreateComponent.html":{},"classes/Mocker.html":{},"injectables/UserInfoService.html":{},"components/WikiEntryEditorComponent.html":{}}}],["models/builders/prototype",{"_index":744,"title":{},"body":{"components/EditComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{}}}],["models/builders/wiki",{"_index":1313,"title":{},"body":{"classes/Mocker.html":{},"components/WikiEntryEditorComponent.html":{}}}],["models/collection",{"_index":571,"title":{},"body":{"injectables/CollectionService.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"classes/ProtoCollection.html":{},"classes/ProtoEdit.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{}}}],["models/edit",{"_index":890,"title":{},"body":{"injectables/EditService.html":{},"classes/ProtoEdit.html":{},"components/UserEditListComponent.html":{},"components/ViewEditComponent.html":{}}}],["models/museum",{"_index":741,"title":{},"body":{"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"components/MuseumListComponent.html":{},"injectables/MuseumService.html":{},"classes/ProtoEdit.html":{},"classes/ProtoMuseum.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{}}}],["models/user",{"_index":1229,"title":{},"body":{"injectables/LoginService.html":{},"classes/ProtoUser.html":{},"components/RegistrationComponent.html":{},"injectables/UserInfoService.html":{},"components/UserProfileComponent.html":{}}}],["models/wiki",{"_index":973,"title":{},"body":{"components/EntryListComponent.html":{},"classes/Mocker.html":{},"injectables/MuseumService.html":{},"classes/ProtoCollection.html":{},"classes/ProtoMuseum.html":{},"classes/ProtoUser.html":{},"components/SearchInCategoryComponent.html":{},"components/UserMuseumListComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryEditorComponent.html":{},"components/WikiEntryViewComponent.html":{}}}],["models/wrapper",{"_index":1132,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordModalComponent.html":{}}}],["modified",{"_index":652,"title":{},"body":{"classes/Edit.html":{}}}],["module",{"_index":138,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":140,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":2559,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["mostly",{"_index":2400,"title":{},"body":{"components/WikiEntryViewComponent.html":{}}}],["multiplication",{"_index":1365,"title":{},"body":{"components/ModalMessageComponent.html":{}}}],["museum",{"_index":14,"title":{"classes/Museum.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/Artifact.html":{},"classes/ArtifactBuilder.html":{},"injectables/ArtifactService.html":{},"classes/Collection.html":{},"classes/CollectionBuilder.html":{},"components/CollectionListComponent.html":{},"injectables/CollectionService.html":{},"components/ConfirmationModalComponent.html":{},"components/CreateComponent.html":{},"classes/Edit.html":{},"classes/EditBuilder.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"components/EntryListComponent.html":{},"components/FooterComponent.html":{},"injectables/GetByCategoryService.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownDisplayComponent.html":{},"components/MarkdownEditorComponent.html":{},"classes/Mocker.html":{},"components/ModalMessageComponent.html":{},"classes/Museum.html":{},"classes/MuseumBuilder.html":{},"components/MuseumListComponent.html":{},"injectables/MuseumService.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"classes/ProtoArtifact.html":{},"classes/ProtoCollection.html":{},"classes/ProtoEdit.html":{},"classes/ProtoMuseum.html":{},"classes/ProtoUser.html":{},"classes/PrototypeBuilder.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordModalComponent.html":{},"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{},"components/TagSelectionComponent.html":{},"classes/User.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"classes/WikiEntry.html":{},"components/WikiEntryEditorComponent.html":{},"components/WikiEntryViewComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["museum(museum",{"_index":334,"title":{},"body":{"classes/ArtifactBuilder.html":{},"classes/CollectionBuilder.html":{}}}],["museum(museum.of(protoedit.museum?.museum",{"_index":1598,"title":{},"body":{"classes/ProtoEdit.html":{}}}],["museum(new",{"_index":859,"title":{},"body":{"components/EditOrCreateComponent.html":{}}}],["museum(protocollection.museum",{"_index":1575,"title":{},"body":{"classes/ProtoCollection.html":{}}}],["museum(res.museum",{"_index":1648,"title":{},"body":{"classes/PrototypeBuilder.html":{}}}],["museum(value",{"_index":687,"title":{},"body":{"classes/EditBuilder.html":{}}}],["museum(wikientry.name",{"_index":1394,"title":{},"body":{"classes/Museum.html":{}}}],["museum.of(response.museum",{"_index":2242,"title":{},"body":{"components/ViewComponent.html":{}}}],["museum.ts",{"_index":1608,"title":{},"body":{"classes/ProtoMuseum.html":{},"coverage.html":{}}}],["museum.ts:11",{"_index":1610,"title":{},"body":{"classes/ProtoMuseum.html":{}}}],["museum.ts:15",{"_index":1609,"title":{},"body":{"classes/ProtoMuseum.html":{}}}],["museum/collection/artifact",{"_index":611,"title":{},"body":{"components/CreateComponent.html":{},"components/EditComponent.html":{},"classes/PrototypeBuilder.html":{},"components/ViewComponent.html":{}}}],["museumbuilder",{"_index":826,"title":{"classes/MuseumBuilder.html":{}},"body":{"components/EditOrCreateComponent.html":{},"classes/Mocker.html":{},"classes/MuseumBuilder.html":{},"classes/PrototypeBuilder.html":{},"injectables/UserInfoService.html":{},"components/WikiEntryEditorComponent.html":{},"coverage.html":{}}}],["museumbuilder().id(1).name('test').build",{"_index":2124,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["museumbuilder().id(2).name('abc').build",{"_index":2125,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["museumbuilder().id(3).name('zcx').build",{"_index":2126,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["museumbuilder().wikientry(prototype.museum.museum).collections(prototype.museum.collectionlist).build",{"_index":1644,"title":{},"body":{"classes/PrototypeBuilder.html":{}}}],["museumid",{"_index":615,"title":{},"body":{"components/CreateComponent.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"injectables/MuseumService.html":{},"components/TagSelectionComponent.html":{}}}],["museumlist",{"_index":1616,"title":{},"body":{"classes/ProtoUser.html":{},"classes/User.html":{}}}],["museumlistcomponent",{"_index":89,"title":{"components/MuseumListComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CollectionListComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/CreateComponent.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"components/EntryListComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownDisplayComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/ModalMessageComponent.html":{},"components/MuseumListComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordModalComponent.html":{},"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{},"components/TagSelectionComponent.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryEditorComponent.html":{},"components/WikiEntryViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["museums",{"_index":908,"title":{},"body":{"components/EntryListComponent.html":{},"components/HomeComponent.html":{},"components/MuseumListComponent.html":{},"injectables/MuseumService.html":{},"classes/ProtoUser.html":{},"classes/User.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{}}}],["museumservice",{"_index":776,"title":{"injectables/MuseumService.html":{}},"body":{"components/EditOrCreateComponent.html":{},"injectables/GetByCategoryService.html":{},"components/MuseumListComponent.html":{},"injectables/MuseumService.html":{},"components/TagSelectionComponent.html":{},"components/UserMuseumListComponent.html":{},"components/ViewComponent.html":{},"coverage.html":{}}}],["name",{"_index":55,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"classes/Artifact.html":{},"classes/ArtifactBuilder.html":{},"injectables/ArtifactService.html":{},"classes/BasicEntry.html":{},"classes/BasicEntryBuilder.html":{},"classes/BasicUserInfo.html":{},"classes/Collection.html":{},"classes/CollectionBuilder.html":{},"components/CollectionListComponent.html":{},"injectables/CollectionService.html":{},"components/ConfirmationModalComponent.html":{},"components/CreateComponent.html":{},"classes/EditBuilder.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"injectables/EditService.html":{},"components/EntryListComponent.html":{},"components/FooterComponent.html":{},"injectables/GetByCategoryService.html":{},"classes/HashHelper.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardService.html":{},"injectables/LoginService.html":{},"components/MarkdownDisplayComponent.html":{},"components/MarkdownEditorComponent.html":{},"pipes/MarkedPipe.html":{},"classes/Mocker.html":{},"components/ModalMessageComponent.html":{},"classes/Museum.html":{},"classes/MuseumBuilder.html":{},"components/MuseumListComponent.html":{},"injectables/MuseumService.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"injectables/PreviousRouteService.html":{},"classes/ProjectConfig.html":{},"injectables/ProjectConfigService.html":{},"classes/ProtoArtifact.html":{},"classes/ProtoCollection.html":{},"classes/ProtoEdit.html":{},"classes/ProtoUser.html":{},"classes/PrototypeBuilder.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordModalComponent.html":{},"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{},"classes/ServerConfig.html":{},"injectables/ServerConfigService.html":{},"classes/ServerResponse.html":{},"classes/Tag.html":{},"components/TagSelectionComponent.html":{},"pipes/TextLimitPipe.html":{},"classes/User.html":{},"components/UserEditListComponent.html":{},"injectables/UserInfoService.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"classes/WikiEntry.html":{},"classes/WikiEntryBuilder.html":{},"components/WikiEntryEditorComponent.html":{},"components/WikiEntryViewComponent.html":{},"classes/Wrapper.html":{},"miscellaneous/functions.html":{}}}],["name('test",{"_index":1322,"title":{},"body":{"classes/Mocker.html":{}}}],["name(form.get('name').value",{"_index":2393,"title":{},"body":{"components/WikiEntryEditorComponent.html":{}}}],["name(name",{"_index":354,"title":{},"body":{"classes/ArtifactBuilder.html":{},"classes/BasicEntryBuilder.html":{},"classes/CollectionBuilder.html":{},"classes/MuseumBuilder.html":{},"classes/WikiEntryBuilder.html":{}}}],["navbar",{"_index":1452,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["navigate",{"_index":1447,"title":{},"body":{"components/NavigationBarComponent.html":{},"components/SearchComponent.html":{},"components/ViewComponent.html":{},"index.html":{}}}],["navigate(link",{"_index":1459,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["navigates",{"_index":2208,"title":{},"body":{"components/ViewComponent.html":{}}}],["navigation",{"_index":42,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/CollectionListComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/CreateComponent.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"components/EntryListComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardService.html":{},"components/MarkdownDisplayComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/ModalMessageComponent.html":{},"components/MuseumListComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordModalComponent.html":{},"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{},"components/TagSelectionComponent.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryEditorComponent.html":{},"components/WikiEntryViewComponent.html":{}}}],["navigationbarcomponent",{"_index":41,"title":{"components/NavigationBarComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CollectionListComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/CreateComponent.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"components/EntryListComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownDisplayComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/ModalMessageComponent.html":{},"components/MuseumListComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordModalComponent.html":{},"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{},"components/TagSelectionComponent.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryEditorComponent.html":{},"components/WikiEntryViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["navigationbaritemlinks",{"_index":1444,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["navigationbaritemnames",{"_index":1445,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["navigationend",{"_index":1464,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["necessary",{"_index":1247,"title":{},"body":{"components/MarkdownDisplayComponent.html":{},"components/PageNotFoundComponent.html":{},"components/UserProfileComponent.html":{}}}],["need",{"_index":600,"title":{},"body":{"components/ConfirmationModalComponent.html":{},"components/EditOrCreateComponent.html":{},"components/ModalMessageComponent.html":{},"components/ResetPasswordModalComponent.html":{},"components/ViewComponent.html":{},"miscellaneous/variables.html":{}}}],["needed",{"_index":596,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["network",{"_index":1409,"title":{},"body":{"components/MuseumListComponent.html":{},"classes/ServerCannotConnect.html":{},"components/TagSelectionComponent.html":{}}}],["never",{"_index":1528,"title":{},"body":{"classes/ProjectConfig.html":{},"classes/ServerConfig.html":{}}}],["new",{"_index":474,"title":{},"body":{"classes/BasicEntryBuilder.html":{},"classes/BasicUserInfo.html":{},"components/CreateComponent.html":{},"classes/EditBuilder.html":{},"components/EditOrCreateComponent.html":{},"injectables/EditService.html":{},"components/EntryListComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardService.html":{},"classes/Mocker.html":{},"classes/Museum.html":{},"classes/MuseumBuilder.html":{},"classes/ProjectConfig.html":{},"classes/ProtoCollection.html":{},"classes/ProtoEdit.html":{},"classes/PrototypeBuilder.html":{},"components/RegistrationComponent.html":{},"injectables/ServerConfigService.html":{},"classes/Tag.html":{},"components/TagSelectionComponent.html":{},"components/UserEditListComponent.html":{},"injectables/UserInfoService.html":{},"components/UserMuseumListComponent.html":{},"classes/WikiEntryBuilder.html":{},"components/WikiEntryEditorComponent.html":{},"coverage.html":{},"index.html":{}}}],["newartifact",{"_index":862,"title":{},"body":{"components/EditOrCreateComponent.html":{}}}],["newcollection",{"_index":858,"title":{},"body":{"components/EditOrCreateComponent.html":{}}}],["newly",{"_index":1863,"title":{},"body":{"classes/Tag.html":{}}}],["newmuseum",{"_index":853,"title":{},"body":{"components/EditOrCreateComponent.html":{}}}],["newuser",{"_index":1713,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["next",{"_index":2023,"title":{},"body":{"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{}}}],["nextstatus",{"_index":2024,"title":{},"body":{"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{}}}],["ng",{"_index":201,"title":{},"body":{"modules/AppModule.html":{},"components/ConfirmationModalComponent.html":{},"components/EditOrCreateComponent.html":{},"components/LoginComponent.html":{},"components/ModalMessageComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordModalComponent.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryEditorComponent.html":{},"components/WikiEntryViewComponent.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["ngbactivemodal",{"_index":598,"title":{},"body":{"components/ConfirmationModalComponent.html":{},"components/ModalMessageComponent.html":{},"components/ResetPasswordModalComponent.html":{}}}],["ngbmodal",{"_index":778,"title":{},"body":{"components/EditOrCreateComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryViewComponent.html":{}}}],["ngbmodule",{"_index":200,"title":{},"body":{"modules/AppModule.html":{}}}],["ngbpaginator",{"_index":966,"title":{},"body":{"components/EntryListComponent.html":{}}}],["ngmodule",{"_index":160,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngonchanges",{"_index":918,"title":{},"body":{"components/EntryListComponent.html":{},"components/TagSelectionComponent.html":{}}}],["ngonchanges(changes",{"_index":951,"title":{},"body":{"components/EntryListComponent.html":{},"components/TagSelectionComponent.html":{}}}],["ngoninit",{"_index":29,"title":{},"body":{"components/AboutComponent.html":{},"components/CollectionListComponent.html":{},"components/CreateComponent.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"components/EntryListComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownDisplayComponent.html":{},"components/ModalMessageComponent.html":{},"components/MuseumListComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordModalComponent.html":{},"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{},"components/TagSelectionComponent.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryEditorComponent.html":{},"components/WikiEntryViewComponent.html":{}}}],["ngx",{"_index":2095,"title":{},"body":{"injectables/UserInfoService.html":{},"dependencies.html":{}}}],["node.js",{"_index":2527,"title":{},"body":{"index.html":{}}}],["noeditblock",{"_index":2046,"title":{},"body":{"components/UserEditListComponent.html":{}}}],["noentryitem",{"_index":993,"title":{},"body":{"components/EntryListComponent.html":{}}}],["nomuseumblock",{"_index":2163,"title":{},"body":{"components/UserMuseumListComponent.html":{}}}],["none",{"_index":607,"title":{},"body":{"components/ConfirmationModalComponent.html":{},"components/ModalMessageComponent.html":{},"components/NavigationBarComponent.html":{}}}],["note",{"_index":1111,"title":{},"body":{"components/LoginComponent.html":{},"classes/ProjectConfig.html":{},"index.html":{}}}],["nothing",{"_index":32,"title":{},"body":{"components/AboutComponent.html":{},"classes/ArtifactBuilder.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/UserMuseumListComponent.html":{}}}],["npm",{"_index":2532,"title":{},"body":{"index.html":{}}}],["nredirecting",{"_index":1158,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["null",{"_index":1156,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"injectables/UserInfoService.html":{},"components/WikiEntryViewComponent.html":{}}}],["number",{"_index":305,"title":{},"body":{"classes/Artifact.html":{},"classes/ArtifactBuilder.html":{},"injectables/ArtifactService.html":{},"classes/BasicEntry.html":{},"classes/BasicEntryBuilder.html":{},"classes/Collection.html":{},"classes/CollectionBuilder.html":{},"injectables/CollectionService.html":{},"classes/Edit.html":{},"classes/EditBuilder.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"injectables/EditService.html":{},"components/EntryListComponent.html":{},"injectables/GetByCategoryService.html":{},"classes/Museum.html":{},"classes/MuseumBuilder.html":{},"injectables/MuseumService.html":{},"classes/ProtoEdit.html":{},"components/RegistrationComponent.html":{},"classes/Tag.html":{},"components/TagSelectionComponent.html":{},"components/ViewEditComponent.html":{},"classes/WikiEntry.html":{},"classes/WikiEntryBuilder.html":{}}}],["object",{"_index":313,"title":{},"body":{"classes/ArtifactBuilder.html":{},"injectables/ArtifactService.html":{},"classes/BasicEntryBuilder.html":{},"classes/Collection.html":{},"classes/CollectionBuilder.html":{},"injectables/CollectionService.html":{},"components/CreateComponent.html":{},"classes/Edit.html":{},"classes/EditBuilder.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"injectables/EditService.html":{},"components/EntryListComponent.html":{},"injectables/GetByCategoryService.html":{},"injectables/LoginService.html":{},"classes/Mocker.html":{},"components/ModalMessageComponent.html":{},"classes/Museum.html":{},"classes/MuseumBuilder.html":{},"injectables/MuseumService.html":{},"classes/ProjectConfig.html":{},"classes/ProtoArtifact.html":{},"classes/ProtoCollection.html":{},"classes/ProtoMuseum.html":{},"classes/ProtoUser.html":{},"classes/PrototypeBuilder.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordModalComponent.html":{},"classes/User.html":{},"components/UserEditListComponent.html":{},"injectables/UserInfoService.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"classes/WikiEntryBuilder.html":{},"miscellaneous/variables.html":{}}}],["objects",{"_index":1291,"title":{},"body":{"classes/Mocker.html":{}}}],["observable",{"_index":403,"title":{},"body":{"injectables/ArtifactService.html":{},"injectables/CollectionService.html":{},"injectables/EditService.html":{},"injectables/GetByCategoryService.html":{},"injectables/LoginService.html":{},"injectables/MuseumService.html":{},"injectables/UserInfoService.html":{}}}],["observable((observer",{"_index":898,"title":{},"body":{"injectables/EditService.html":{},"injectables/UserInfoService.html":{}}}],["observer.next(mockuser",{"_index":2132,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["observer.next(protoedit",{"_index":903,"title":{},"body":{"injectables/EditService.html":{}}}],["occurred",{"_index":1806,"title":{},"body":{"classes/ServerCannotConnect.html":{},"components/TagSelectionComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{}}}],["occurs",{"_index":1795,"title":{},"body":{"components/SearchInCategoryComponent.html":{}}}],["of(entry",{"_index":1860,"title":{},"body":{"classes/Tag.html":{}}}],["of(wikientry",{"_index":1387,"title":{},"body":{"classes/Museum.html":{}}}],["onchanges",{"_index":911,"title":{},"body":{"components/EntryListComponent.html":{},"components/SearchComponent.html":{},"components/TagSelectionComponent.html":{}}}],["one",{"_index":1310,"title":{},"body":{"classes/Mocker.html":{},"components/SearchComponent.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{}}}],["oninit",{"_index":19,"title":{},"body":{"components/AboutComponent.html":{},"components/CollectionListComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/CreateComponent.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"components/EntryListComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownDisplayComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/ModalMessageComponent.html":{},"components/MuseumListComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordModalComponent.html":{},"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{},"components/TagSelectionComponent.html":{},"components/UserEditListComponent.html":{},"injectables/UserInfoService.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryEditorComponent.html":{},"components/WikiEntryViewComponent.html":{}}}],["open",{"_index":1100,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"index.html":{}}}],["openmodalwithpromise",{"_index":1089,"title":{},"body":{"components/LoginComponent.html":{}}}],["openmodalwithpromise(promise",{"_index":1109,"title":{},"body":{"components/LoginComponent.html":{}}}],["opens",{"_index":782,"title":{},"body":{"components/EditOrCreateComponent.html":{},"components/LoginComponent.html":{},"components/UserEditListComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryViewComponent.html":{}}}],["operating",{"_index":2555,"title":{},"body":{"index.html":{}}}],["operator",{"_index":2037,"title":{},"body":{"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{}}}],["optional",{"_index":332,"title":{},"body":{"classes/ArtifactBuilder.html":{},"injectables/ArtifactService.html":{},"classes/BasicEntry.html":{},"classes/BasicEntryBuilder.html":{},"classes/BasicUserInfo.html":{},"classes/Collection.html":{},"classes/CollectionBuilder.html":{},"injectables/CollectionService.html":{},"components/CreateComponent.html":{},"classes/EditBuilder.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"injectables/EditService.html":{},"components/EntryListComponent.html":{},"injectables/GetByCategoryService.html":{},"classes/HashHelper.html":{},"components/LoginComponent.html":{},"guards/LoginGuardService.html":{},"injectables/LoginService.html":{},"components/MarkdownEditorComponent.html":{},"pipes/MarkedPipe.html":{},"classes/Mocker.html":{},"components/ModalMessageComponent.html":{},"classes/Museum.html":{},"classes/MuseumBuilder.html":{},"components/MuseumListComponent.html":{},"injectables/MuseumService.html":{},"components/NavigationBarComponent.html":{},"injectables/PreviousRouteService.html":{},"classes/ProjectConfig.html":{},"injectables/ProjectConfigService.html":{},"classes/ProtoArtifact.html":{},"classes/ProtoCollection.html":{},"classes/ProtoEdit.html":{},"classes/ProtoUser.html":{},"classes/PrototypeBuilder.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordModalComponent.html":{},"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{},"classes/ServerConfig.html":{},"injectables/ServerConfigService.html":{},"classes/ServerResponse.html":{},"classes/Tag.html":{},"components/TagSelectionComponent.html":{},"pipes/TextLimitPipe.html":{},"classes/User.html":{},"components/UserEditListComponent.html":{},"injectables/UserInfoService.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"classes/WikiEntry.html":{},"classes/WikiEntryBuilder.html":{},"components/WikiEntryEditorComponent.html":{},"components/WikiEntryViewComponent.html":{},"classes/Wrapper.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":1774,"title":{},"body":{"components/SearchComponent.html":{},"miscellaneous/variables.html":{}}}],["order",{"_index":2020,"title":{},"body":{"components/UserEditListComponent.html":{}}}],["original",{"_index":721,"title":{},"body":{"components/EditComponent.html":{}}}],["otherwise",{"_index":884,"title":{},"body":{"injectables/EditService.html":{},"components/SearchComponent.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{}}}],["out",{"_index":154,"title":{},"body":{"modules/AppModule.html":{},"injectables/LoginService.html":{},"components/UserProfileComponent.html":{},"index.html":{},"overview.html":{}}}],["outline",{"_index":606,"title":{},"body":{"components/ConfirmationModalComponent.html":{},"components/ModalMessageComponent.html":{},"components/NavigationBarComponent.html":{}}}],["output",{"_index":1266,"title":{},"body":{"components/MarkdownEditorComponent.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{}}}],["outputs",{"_index":1961,"title":{},"body":{"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{}}}],["over",{"_index":2535,"title":{},"body":{"index.html":{}}}],["overkills",{"_index":2374,"title":{},"body":{"components/WikiEntryEditorComponent.html":{}}}],["overview",{"_index":2571,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owned",{"_index":1942,"title":{},"body":{"classes/User.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{}}}],["owns",{"_index":1624,"title":{},"body":{"classes/ProtoUser.html":{}}}],["p/markdown",{"_index":2615,"title":{},"body":{"miscellaneous/variables.html":{}}}],["package",{"_index":2478,"title":{"dependencies.html":{}},"body":{"index.html":{}}}],["packager",{"_index":2496,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["padding",{"_index":1383,"title":{},"body":{"components/ModalMessageComponent.html":{}}}],["page",{"_index":34,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/CollectionListComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/CreateComponent.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"components/EntryListComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardService.html":{},"components/MarkdownDisplayComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/ModalMessageComponent.html":{},"components/MuseumListComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordModalComponent.html":{},"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{},"components/TagSelectionComponent.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryEditorComponent.html":{},"components/WikiEntryViewComponent.html":{}}}],["pagenotfoundcomponent",{"_index":91,"title":{"components/PageNotFoundComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CollectionListComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/CreateComponent.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"components/EntryListComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownDisplayComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/ModalMessageComponent.html":{},"components/MuseumListComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordModalComponent.html":{},"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{},"components/TagSelectionComponent.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryEditorComponent.html":{},"components/WikiEntryViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["pages",{"_index":1108,"title":{},"body":{"components/LoginComponent.html":{},"classes/ProjectConfig.html":{},"components/RegistrationComponent.html":{}}}],["pagesize",{"_index":913,"title":{},"body":{"components/EntryListComponent.html":{}}}],["param",{"_index":359,"title":{},"body":{"classes/ArtifactBuilder.html":{},"injectables/ArtifactService.html":{},"classes/BasicEntry.html":{},"classes/BasicEntryBuilder.html":{},"classes/BasicUserInfo.html":{},"classes/Collection.html":{},"classes/CollectionBuilder.html":{},"injectables/CollectionService.html":{},"components/CreateComponent.html":{},"classes/EditBuilder.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"injectables/EditService.html":{},"components/EntryListComponent.html":{},"injectables/GetByCategoryService.html":{},"classes/HashHelper.html":{},"components/LoginComponent.html":{},"guards/LoginGuardService.html":{},"injectables/LoginService.html":{},"pipes/MarkedPipe.html":{},"classes/Mocker.html":{},"components/ModalMessageComponent.html":{},"classes/Museum.html":{},"classes/MuseumBuilder.html":{},"components/MuseumListComponent.html":{},"injectables/MuseumService.html":{},"components/NavigationBarComponent.html":{},"injectables/PreviousRouteService.html":{},"classes/ProjectConfig.html":{},"injectables/ProjectConfigService.html":{},"classes/ProtoArtifact.html":{},"classes/ProtoCollection.html":{},"classes/ProtoEdit.html":{},"classes/ProtoUser.html":{},"classes/PrototypeBuilder.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordModalComponent.html":{},"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{},"classes/ServerConfig.html":{},"injectables/ServerConfigService.html":{},"classes/ServerResponse.html":{},"classes/Tag.html":{},"components/TagSelectionComponent.html":{},"pipes/TextLimitPipe.html":{},"classes/User.html":{},"components/UserEditListComponent.html":{},"injectables/UserInfoService.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"classes/WikiEntry.html":{},"classes/WikiEntryBuilder.html":{},"components/WikiEntryViewComponent.html":{},"classes/Wrapper.html":{}}}],["parameter",{"_index":626,"title":{},"body":{"components/CreateComponent.html":{},"components/EditComponent.html":{},"components/ViewComponent.html":{}}}],["parameters",{"_index":331,"title":{},"body":{"classes/ArtifactBuilder.html":{},"injectables/ArtifactService.html":{},"classes/BasicEntry.html":{},"classes/BasicEntryBuilder.html":{},"classes/BasicUserInfo.html":{},"classes/Collection.html":{},"classes/CollectionBuilder.html":{},"injectables/CollectionService.html":{},"components/CreateComponent.html":{},"classes/EditBuilder.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"injectables/EditService.html":{},"components/EntryListComponent.html":{},"injectables/GetByCategoryService.html":{},"classes/HashHelper.html":{},"components/LoginComponent.html":{},"guards/LoginGuardService.html":{},"injectables/LoginService.html":{},"pipes/MarkedPipe.html":{},"classes/Mocker.html":{},"components/ModalMessageComponent.html":{},"classes/Museum.html":{},"classes/MuseumBuilder.html":{},"components/MuseumListComponent.html":{},"injectables/MuseumService.html":{},"components/NavigationBarComponent.html":{},"injectables/PreviousRouteService.html":{},"classes/ProjectConfig.html":{},"injectables/ProjectConfigService.html":{},"classes/ProtoArtifact.html":{},"classes/ProtoCollection.html":{},"classes/ProtoEdit.html":{},"classes/ProtoUser.html":{},"classes/PrototypeBuilder.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordModalComponent.html":{},"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{},"classes/ServerConfig.html":{},"injectables/ServerConfigService.html":{},"classes/ServerResponse.html":{},"classes/Tag.html":{},"components/TagSelectionComponent.html":{},"pipes/TextLimitPipe.html":{},"classes/User.html":{},"components/UserEditListComponent.html":{},"injectables/UserInfoService.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"classes/WikiEntry.html":{},"classes/WikiEntryBuilder.html":{},"components/WikiEntryViewComponent.html":{},"classes/Wrapper.html":{},"miscellaneous/functions.html":{}}}],["parammap",{"_index":628,"title":{},"body":{"components/CreateComponent.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"components/SearchInCategoryComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{}}}],["parammap.get('id",{"_index":2234,"title":{},"body":{"components/ViewComponent.html":{}}}],["parammap.get('searchcategory",{"_index":1800,"title":{},"body":{"components/SearchInCategoryComponent.html":{}}}],["parammap.get('searchtext",{"_index":1801,"title":{},"body":{"components/SearchInCategoryComponent.html":{}}}],["parammap.get('viewcategory",{"_index":2233,"title":{},"body":{"components/ViewComponent.html":{}}}],["params.get('category",{"_index":631,"title":{},"body":{"components/CreateComponent.html":{},"components/EditComponent.html":{}}}],["params.get('editid",{"_index":2313,"title":{},"body":{"components/ViewEditComponent.html":{}}}],["params.get('id",{"_index":750,"title":{},"body":{"components/EditComponent.html":{}}}],["params.get('museumid",{"_index":633,"title":{},"body":{"components/CreateComponent.html":{}}}],["parent",{"_index":930,"title":{},"body":{"components/EntryListComponent.html":{},"components/ViewComponent.html":{},"index.html":{}}}],["parentid",{"_index":921,"title":{},"body":{"components/EntryListComponent.html":{}}}],["parentname",{"_index":2198,"title":{},"body":{"components/ViewComponent.html":{}}}],["parentnamereference",{"_index":2199,"title":{},"body":{"components/ViewComponent.html":{}}}],["parents",{"_index":2218,"title":{},"body":{"components/ViewComponent.html":{}}}],["parseint(args[0",{"_index":1930,"title":{},"body":{"pipes/TextLimitPipe.html":{}}}],["parseint(id",{"_index":453,"title":{},"body":{"classes/BasicEntry.html":{},"classes/BasicEntryBuilder.html":{}}}],["part",{"_index":965,"title":{},"body":{"components/EntryListComponent.html":{}}}],["particular",{"_index":1432,"title":{},"body":{"injectables/MuseumService.html":{}}}],["passed",{"_index":625,"title":{},"body":{"components/CreateComponent.html":{},"components/EditComponent.html":{},"components/ModalMessageComponent.html":{},"classes/ProtoMuseum.html":{},"components/UserMuseumListComponent.html":{}}}],["password",{"_index":97,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/ArtifactService.html":{},"classes/BasicUserInfo.html":{},"components/CollectionListComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/CreateComponent.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"components/EntryListComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/MarkdownDisplayComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/ModalMessageComponent.html":{},"components/MuseumListComponent.html":{},"injectables/MuseumService.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordModalComponent.html":{},"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{},"classes/ServerResponse.html":{},"components/TagSelectionComponent.html":{},"classes/User.html":{},"components/UserEditListComponent.html":{},"injectables/UserInfoService.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryEditorComponent.html":{},"components/WikiEntryViewComponent.html":{},"classes/Wrapper.html":{},"coverage.html":{}}}],["password.length",{"_index":501,"title":{},"body":{"classes/BasicUserInfo.html":{}}}],["passwordnotmatch",{"_index":1710,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["path",{"_index":266,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pathmatch",{"_index":269,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["per",{"_index":969,"title":{},"body":{"components/EntryListComponent.html":{}}}],["perform",{"_index":1767,"title":{},"body":{"components/SearchComponent.html":{}}}],["person",{"_index":663,"title":{},"body":{"classes/Edit.html":{}}}],["peter",{"_index":1015,"title":{},"body":{"components/FooterComponent.html":{},"index.html":{}}}],["picked",{"_index":1312,"title":{},"body":{"classes/Mocker.html":{}}}],["picture",{"_index":2544,"title":{},"body":{"index.html":{}}}],["pipe",{"_index":1274,"title":{"pipes/MarkedPipe.html":{},"pipes/TextLimitPipe.html":{}},"body":{"pipes/MarkedPipe.html":{},"pipes/TextLimitPipe.html":{},"coverage.html":{}}}],["pipes",{"_index":1275,"title":{},"body":{"pipes/MarkedPipe.html":{},"pipes/TextLimitPipe.html":{},"overview.html":{}}}],["pipetransform",{"_index":1286,"title":{},"body":{"pipes/MarkedPipe.html":{},"pipes/TextLimitPipe.html":{}}}],["plain",{"_index":304,"title":{},"body":{"classes/Artifact.html":{},"classes/Collection.html":{},"classes/Museum.html":{},"classes/WikiEntry.html":{}}}],["please",{"_index":868,"title":{},"body":{"components/EditOrCreateComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/ModalMessageComponent.html":{},"components/RegistrationComponent.html":{},"classes/ServerCannotConnect.html":{},"index.html":{}}}],["pointer",{"_index":2055,"title":{},"body":{"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{}}}],["pointing",{"_index":2009,"title":{},"body":{"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{}}}],["popper",{"_index":2503,"title":{},"body":{"dependencies.html":{}}}],["popper.js",{"_index":2505,"title":{},"body":{"dependencies.html":{}}}],["populate",{"_index":1769,"title":{},"body":{"components/SearchComponent.html":{}}}],["possible",{"_index":1300,"title":{},"body":{"classes/Mocker.html":{}}}],["post",{"_index":578,"title":{},"body":{"injectables/CollectionService.html":{}}}],["post(this.url",{"_index":1233,"title":{},"body":{"injectables/LoginService.html":{},"injectables/MuseumService.html":{}}}],["potentially",{"_index":1386,"title":{},"body":{"classes/Museum.html":{}}}],["prepared",{"_index":672,"title":{},"body":{"classes/EditBuilder.html":{}}}],["preselected",{"_index":1542,"title":{},"body":{"injectables/ProjectConfigService.html":{}}}],["prevdescription",{"_index":2381,"title":{},"body":{"components/WikiEntryEditorComponent.html":{}}}],["prevents",{"_index":1186,"title":{},"body":{"guards/LoginGuardService.html":{}}}],["preview",{"_index":1257,"title":{},"body":{"components/MarkdownEditorComponent.html":{}}}],["previewtext",{"_index":1252,"title":{},"body":{"components/MarkdownEditorComponent.html":{}}}],["previmage",{"_index":2380,"title":{},"body":{"components/WikiEntryEditorComponent.html":{}}}],["previntroduction",{"_index":2379,"title":{},"body":{"components/WikiEntryEditorComponent.html":{}}}],["previous",{"_index":1135,"title":{},"body":{"components/LoginComponent.html":{},"guards/LoginGuardService.html":{},"injectables/PreviousRouteService.html":{},"components/SearchComponent.html":{},"components/WikiEntryEditorComponent.html":{}}}],["previouscategory",{"_index":1758,"title":{},"body":{"components/SearchComponent.html":{}}}],["previously",{"_index":1489,"title":{},"body":{"injectables/PreviousRouteService.html":{},"components/SearchComponent.html":{}}}],["previousroute",{"_index":1091,"title":{},"body":{"components/LoginComponent.html":{},"injectables/PreviousRouteService.html":{}}}],["previousroute(previousroute",{"_index":1499,"title":{},"body":{"injectables/PreviousRouteService.html":{}}}],["previousrouteservice",{"_index":1092,"title":{"injectables/PreviousRouteService.html":{}},"body":{"components/LoginComponent.html":{},"guards/LoginGuardService.html":{},"injectables/PreviousRouteService.html":{},"coverage.html":{}}}],["previoustext",{"_index":1759,"title":{},"body":{"components/SearchComponent.html":{}}}],["previouswikientry",{"_index":2363,"title":{},"body":{"components/WikiEntryEditorComponent.html":{}}}],["prevname",{"_index":2378,"title":{},"body":{"components/WikiEntryEditorComponent.html":{}}}],["private",{"_index":371,"title":{},"body":{"injectables/ArtifactService.html":{},"injectables/CollectionService.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"injectables/EditService.html":{},"components/EntryListComponent.html":{},"injectables/GetByCategoryService.html":{},"components/LoginComponent.html":{},"guards/LoginGuardService.html":{},"injectables/LoginService.html":{},"classes/Mocker.html":{},"components/MuseumListComponent.html":{},"injectables/MuseumService.html":{},"components/NavigationBarComponent.html":{},"injectables/PreviousRouteService.html":{},"classes/ProjectConfig.html":{},"injectables/ProjectConfigService.html":{},"components/RegistrationComponent.html":{},"components/SearchComponent.html":{},"classes/ServerConfig.html":{},"injectables/ServerConfigService.html":{},"components/TagSelectionComponent.html":{},"components/UserEditListComponent.html":{},"injectables/UserInfoService.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryEditorComponent.html":{},"components/WikiEntryViewComponent.html":{}}}],["process",{"_index":2537,"title":{},"body":{"index.html":{}}}],["processed",{"_index":2519,"title":{},"body":{"miscellaneous/functions.html":{}}}],["processpromiseresponse",{"_index":774,"title":{},"body":{"components/EditOrCreateComponent.html":{}}}],["processpromiseresponse(promise",{"_index":797,"title":{},"body":{"components/EditOrCreateComponent.html":{}}}],["prod",{"_index":2585,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prod=true",{"_index":2545,"title":{},"body":{"index.html":{}}}],["production",{"_index":2546,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["profile",{"_index":279,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/EditOrCreateComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/NavigationBarComponent.html":{},"components/RegistrationComponent.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryViewComponent.html":{}}}],["profile'},{'name",{"_index":110,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/CollectionListComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/CreateComponent.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"components/EntryListComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownDisplayComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/ModalMessageComponent.html":{},"components/MuseumListComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordModalComponent.html":{},"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{},"components/TagSelectionComponent.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryEditorComponent.html":{},"components/WikiEntryViewComponent.html":{}}}],["profile.component",{"_index":182,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["profile.component.css",{"_index":2165,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.html",{"_index":2166,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts",{"_index":2164,"title":{},"body":{"components/UserProfileComponent.html":{},"coverage.html":{}}}],["profile.component.ts:22",{"_index":2181,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:26",{"_index":2180,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:31",{"_index":2179,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:35",{"_index":2178,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:40",{"_index":2168,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:61",{"_index":2169,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:84",{"_index":2176,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:95",{"_index":2175,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile/user",{"_index":181,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{}}}],["program",{"_index":714,"title":{},"body":{"components/EditComponent.html":{},"components/LoginComponent.html":{},"components/NavigationBarComponent.html":{},"classes/ProjectConfig.html":{},"components/TagSelectionComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewEditComponent.html":{},"index.html":{}}}],["progress",{"_index":2551,"title":{},"body":{"index.html":{}}}],["project",{"_index":137,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/ArtifactService.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"injectables/EditService.html":{},"components/EntryListComponent.html":{},"components/LoginComponent.html":{},"classes/ProjectConfig.html":{},"injectables/ProjectConfigService.html":{},"classes/ServerConfig.html":{},"injectables/ServerConfigService.html":{},"components/TagSelectionComponent.html":{},"components/ViewComponent.html":{},"index.html":{}}}],["projectconfig",{"_index":373,"title":{"classes/ProjectConfig.html":{}},"body":{"injectables/ArtifactService.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"injectables/EditService.html":{},"components/EntryListComponent.html":{},"components/LoginComponent.html":{},"classes/ProjectConfig.html":{},"injectables/ProjectConfigService.html":{},"classes/ServerConfig.html":{},"injectables/ServerConfigService.html":{},"components/TagSelectionComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"coverage.html":{}}}],["projectconfig.getinstance",{"_index":1549,"title":{},"body":{"injectables/ProjectConfigService.html":{}}}],["projectconfig.istesting",{"_index":1832,"title":{},"body":{"classes/ServerConfig.html":{}}}],["projectconfig.loginconsole",{"_index":1516,"title":{},"body":{"classes/ProjectConfig.html":{}}}],["projectconfig.testingmode",{"_index":1515,"title":{},"body":{"classes/ProjectConfig.html":{}}}],["projectconfig.usemockdata",{"_index":1517,"title":{},"body":{"classes/ProjectConfig.html":{}}}],["projectconfigservice",{"_index":382,"title":{"injectables/ProjectConfigService.html":{}},"body":{"injectables/ArtifactService.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"injectables/EditService.html":{},"components/EntryListComponent.html":{},"components/LoginComponent.html":{},"injectables/ProjectConfigService.html":{},"injectables/ServerConfigService.html":{},"components/TagSelectionComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"coverage.html":{}}}],["projectconfigservice.getprojectconfig",{"_index":424,"title":{},"body":{"injectables/ArtifactService.html":{},"injectables/EditService.html":{},"components/EntryListComponent.html":{},"components/LoginComponent.html":{},"components/TagSelectionComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewEditComponent.html":{}}}],["promise",{"_index":397,"title":{},"body":{"injectables/ArtifactService.html":{},"injectables/CollectionService.html":{},"components/EditOrCreateComponent.html":{},"injectables/EditService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"injectables/MuseumService.html":{},"injectables/PreviousRouteService.html":{},"injectables/UserInfoService.html":{},"classes/Wrapper.html":{}}}],["promise.then",{"_index":1167,"title":{},"body":{"components/LoginComponent.html":{}}}],["promise.then((res",{"_index":836,"title":{},"body":{"components/EditOrCreateComponent.html":{}}}],["promise/observable",{"_index":1351,"title":{},"body":{"components/ModalMessageComponent.html":{}}}],["prompt",{"_index":1122,"title":{},"body":{"components/LoginComponent.html":{}}}],["prompting",{"_index":1739,"title":{},"body":{"components/ResetPasswordModalComponent.html":{}}}],["properties",{"_index":129,"title":{},"body":{"components/AppComponent.html":{},"classes/Artifact.html":{},"classes/ArtifactBuilder.html":{},"injectables/ArtifactService.html":{},"classes/BasicEntry.html":{},"classes/BasicEntryBuilder.html":{},"classes/BasicUserInfo.html":{},"classes/Collection.html":{},"classes/CollectionBuilder.html":{},"components/CollectionListComponent.html":{},"injectables/CollectionService.html":{},"components/ConfirmationModalComponent.html":{},"components/CreateComponent.html":{},"classes/Edit.html":{},"classes/EditBuilder.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"injectables/EditService.html":{},"components/EntryListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/MarkdownEditorComponent.html":{},"classes/Mocker.html":{},"components/ModalMessageComponent.html":{},"classes/Museum.html":{},"classes/MuseumBuilder.html":{},"components/MuseumListComponent.html":{},"injectables/MuseumService.html":{},"components/NavigationBarComponent.html":{},"injectables/PreviousRouteService.html":{},"classes/ProjectConfig.html":{},"injectables/ProjectConfigService.html":{},"classes/ProtoArtifact.html":{},"classes/ProtoCollection.html":{},"classes/ProtoEdit.html":{},"classes/ProtoMuseum.html":{},"classes/ProtoUser.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordModalComponent.html":{},"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{},"classes/ServerCannotConnect.html":{},"classes/ServerConfig.html":{},"injectables/ServerConfigService.html":{},"classes/ServerResponse.html":{},"classes/Tag.html":{},"components/TagSelectionComponent.html":{},"classes/User.html":{},"components/UserEditListComponent.html":{},"injectables/UserInfoService.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"classes/WikiEntry.html":{},"classes/WikiEntryBuilder.html":{},"components/WikiEntryEditorComponent.html":{},"classes/Wrapper.html":{}}}],["property",{"_index":2355,"title":{},"body":{"classes/WikiEntryBuilder.html":{}}}],["proposal",{"_index":656,"title":{},"body":{"classes/Edit.html":{}}}],["protected",{"_index":315,"title":{},"body":{"classes/ArtifactBuilder.html":{},"classes/BasicEntryBuilder.html":{},"classes/CollectionBuilder.html":{},"classes/MuseumBuilder.html":{},"classes/WikiEntryBuilder.html":{}}}],["proto",{"_index":1305,"title":{},"body":{"classes/Mocker.html":{},"classes/ProtoArtifact.html":{},"classes/ProtoEdit.html":{},"classes/ProtoUser.html":{}}}],["protoartifact",{"_index":410,"title":{"classes/ProtoArtifact.html":{}},"body":{"injectables/ArtifactService.html":{},"components/EditComponent.html":{},"injectables/EditService.html":{},"injectables/GetByCategoryService.html":{},"classes/Mocker.html":{},"classes/ProtoArtifact.html":{},"classes/ProtoEdit.html":{},"classes/PrototypeBuilder.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"coverage.html":{}}}],["protoartifact.artifact",{"_index":1561,"title":{},"body":{"classes/ProtoArtifact.html":{}}}],["protoartifact.artifact.collectionlist",{"_index":1564,"title":{},"body":{"classes/ProtoArtifact.html":{}}}],["protoartifact.artifact.museum",{"_index":1562,"title":{},"body":{"classes/ProtoArtifact.html":{}}}],["protoartifact.collectionlist",{"_index":1565,"title":{},"body":{"classes/ProtoArtifact.html":{}}}],["protoartifact.museum",{"_index":1563,"title":{},"body":{"classes/ProtoArtifact.html":{}}}],["protocollection",{"_index":573,"title":{"classes/ProtoCollection.html":{}},"body":{"injectables/CollectionService.html":{},"components/EditComponent.html":{},"injectables/GetByCategoryService.html":{},"classes/ProtoCollection.html":{},"classes/ProtoEdit.html":{},"classes/PrototypeBuilder.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"coverage.html":{}}}],["protoedit",{"_index":886,"title":{"classes/ProtoEdit.html":{}},"body":{"injectables/EditService.html":{},"classes/Mocker.html":{},"classes/ProtoEdit.html":{},"classes/ProtoUser.html":{},"injectables/UserInfoService.html":{},"components/ViewEditComponent.html":{},"coverage.html":{}}}],["protoedit.approvalstatus",{"_index":2130,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["protoedit.artifact",{"_index":901,"title":{},"body":{"injectables/EditService.html":{}}}],["protoedit.category",{"_index":900,"title":{},"body":{"injectables/EditService.html":{}}}],["protoedit.reviewer.username",{"_index":1606,"title":{},"body":{"classes/ProtoEdit.html":{}}}],["protoedit.reviewerusername",{"_index":1607,"title":{},"body":{"classes/ProtoEdit.html":{}}}],["protoedit.toedit(protoedit",{"_index":1635,"title":{},"body":{"classes/ProtoUser.html":{}}}],["protoedit.toedit(res",{"_index":2316,"title":{},"body":{"components/ViewEditComponent.html":{}}}],["protomuseum",{"_index":739,"title":{"classes/ProtoMuseum.html":{}},"body":{"components/EditComponent.html":{},"injectables/GetByCategoryService.html":{},"injectables/MuseumService.html":{},"classes/ProtoEdit.html":{},"classes/ProtoMuseum.html":{},"classes/PrototypeBuilder.html":{},"components/TagSelectionComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"coverage.html":{}}}],["prototype",{"_index":755,"title":{},"body":{"components/EditComponent.html":{},"classes/PrototypeBuilder.html":{}}}],["prototype.artifact",{"_index":1649,"title":{},"body":{"classes/PrototypeBuilder.html":{}}}],["prototype.collection",{"_index":1645,"title":{},"body":{"classes/PrototypeBuilder.html":{}}}],["prototype.museum",{"_index":1643,"title":{},"body":{"classes/PrototypeBuilder.html":{}}}],["prototype[this.category",{"_index":756,"title":{},"body":{"components/EditComponent.html":{}}}],["prototypebuilder",{"_index":743,"title":{"classes/PrototypeBuilder.html":{}},"body":{"components/EditComponent.html":{},"classes/PrototypeBuilder.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"coverage.html":{}}}],["prototypebuilder.buildfromprototype(prototype",{"_index":758,"title":{},"body":{"components/EditComponent.html":{}}}],["prototypebuilder.buildfromprototype({artifact",{"_index":2253,"title":{},"body":{"components/ViewComponent.html":{},"components/ViewEditComponent.html":{}}}],["prototypebuilder.buildfromprototype({collection",{"_index":2247,"title":{},"body":{"components/ViewComponent.html":{},"components/ViewEditComponent.html":{}}}],["prototypebuilder.buildfromprototype({museum",{"_index":2310,"title":{},"body":{"components/ViewEditComponent.html":{}}}],["prototypes/proto",{"_index":411,"title":{},"body":{"injectables/ArtifactService.html":{},"injectables/CollectionService.html":{},"components/EditComponent.html":{},"injectables/EditService.html":{},"injectables/GetByCategoryService.html":{},"injectables/LoginService.html":{},"classes/Mocker.html":{},"injectables/MuseumService.html":{},"classes/ProtoArtifact.html":{},"classes/ProtoCollection.html":{},"classes/ProtoEdit.html":{},"classes/ProtoMuseum.html":{},"classes/ProtoUser.html":{},"classes/PrototypeBuilder.html":{},"components/TagSelectionComponent.html":{},"injectables/UserInfoService.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"coverage.html":{}}}],["protouser",{"_index":1230,"title":{"classes/ProtoUser.html":{}},"body":{"injectables/LoginService.html":{},"classes/ProtoUser.html":{},"injectables/UserInfoService.html":{},"components/UserProfileComponent.html":{},"coverage.html":{}}}],["protouser.actionslist?.map(protoedit",{"_index":1634,"title":{},"body":{"classes/ProtoUser.html":{}}}],["protouser.editslist?.map(protoedit",{"_index":1637,"title":{},"body":{"classes/ProtoUser.html":{}}}],["protouser.headcuratorlist",{"_index":1632,"title":{},"body":{"classes/ProtoUser.html":{}}}],["protouser.museumlist",{"_index":1630,"title":{},"body":{"classes/ProtoUser.html":{}}}],["protouser.touser(res",{"_index":2186,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["protouser.user",{"_index":1638,"title":{},"body":{"classes/ProtoUser.html":{}}}],["protouser.user.actionslist",{"_index":1633,"title":{},"body":{"classes/ProtoUser.html":{}}}],["protouser.user.editslist",{"_index":1636,"title":{},"body":{"classes/ProtoUser.html":{}}}],["protouser.user.headcuratorlist",{"_index":1631,"title":{},"body":{"classes/ProtoUser.html":{}}}],["protouser.user.museumlist",{"_index":1629,"title":{},"body":{"classes/ProtoUser.html":{}}}],["protractor",{"_index":255,"title":{},"body":{"classes/AppPage.html":{}}}],["protractor/built/driverproviders",{"_index":889,"title":{},"body":{"injectables/EditService.html":{}}}],["provided",{"_index":467,"title":{},"body":{"classes/BasicEntryBuilder.html":{},"components/LoginComponent.html":{},"classes/ProjectConfig.html":{}}}],["providedin",{"_index":419,"title":{},"body":{"injectables/ArtifactService.html":{},"injectables/CollectionService.html":{},"injectables/EditService.html":{},"injectables/GetByCategoryService.html":{},"guards/LoginGuardService.html":{},"injectables/LoginService.html":{},"injectables/MuseumService.html":{},"injectables/PreviousRouteService.html":{},"injectables/ProjectConfigService.html":{},"injectables/ServerConfigService.html":{},"injectables/UserInfoService.html":{}}}],["providers",{"_index":144,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["provides",{"_index":368,"title":{},"body":{"injectables/ArtifactService.html":{},"injectables/CollectionService.html":{},"injectables/MuseumService.html":{},"components/NavigationBarComponent.html":{},"components/ResetPasswordModalComponent.html":{},"injectables/ServerConfigService.html":{},"components/ViewEditComponent.html":{}}}],["public",{"_index":316,"title":{},"body":{"classes/ArtifactBuilder.html":{},"injectables/ArtifactService.html":{},"classes/BasicEntryBuilder.html":{},"classes/CollectionBuilder.html":{},"injectables/CollectionService.html":{},"components/EditOrCreateComponent.html":{},"injectables/GetByCategoryService.html":{},"classes/HashHelper.html":{},"components/LoginComponent.html":{},"guards/LoginGuardService.html":{},"injectables/LoginService.html":{},"components/MarkdownEditorComponent.html":{},"components/ModalMessageComponent.html":{},"classes/Museum.html":{},"classes/MuseumBuilder.html":{},"components/MuseumListComponent.html":{},"injectables/MuseumService.html":{},"components/NavigationBarComponent.html":{},"injectables/PreviousRouteService.html":{},"classes/ProjectConfig.html":{},"injectables/ProjectConfigService.html":{},"classes/ProtoArtifact.html":{},"components/SearchComponent.html":{},"classes/ServerCannotConnect.html":{},"classes/ServerConfig.html":{},"injectables/ServerConfigService.html":{},"components/TagSelectionComponent.html":{},"injectables/UserInfoService.html":{},"classes/WikiEntryBuilder.html":{},"components/WikiEntryEditorComponent.html":{}}}],["publicly",{"_index":594,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["publish",{"_index":1983,"title":{},"body":{"components/UserEditListComponent.html":{}}}],["published",{"_index":1062,"title":{},"body":{"components/HomeComponent.html":{}}}],["purpose",{"_index":2412,"title":{},"body":{"components/WikiEntryViewComponent.html":{},"classes/Wrapper.html":{}}}],["puts",{"_index":972,"title":{},"body":{"components/EntryListComponent.html":{}}}],["random",{"_index":1290,"title":{},"body":{"classes/Mocker.html":{}}}],["randomelement",{"_index":1298,"title":{},"body":{"classes/Mocker.html":{}}}],["randomelement(array",{"_index":1308,"title":{},"body":{"classes/Mocker.html":{}}}],["raw",{"_index":488,"title":{},"body":{"classes/BasicUserInfo.html":{},"classes/User.html":{}}}],["reached",{"_index":1805,"title":{},"body":{"classes/ServerCannotConnect.html":{}}}],["reactiveformsmodule",{"_index":173,"title":{},"body":{"modules/AppModule.html":{}}}],["read",{"_index":2560,"title":{},"body":{"index.html":{}}}],["readjusted",{"_index":1115,"title":{},"body":{"components/LoginComponent.html":{}}}],["readme",{"_index":2567,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":372,"title":{},"body":{"injectables/ArtifactService.html":{},"injectables/CollectionService.html":{},"components/CreateComponent.html":{},"components/EditComponent.html":{},"injectables/EditService.html":{},"components/LoadingComponent.html":{},"injectables/LoginService.html":{},"classes/Mocker.html":{},"injectables/MuseumService.html":{},"classes/ProjectConfig.html":{},"injectables/ProjectConfigService.html":{},"components/RegistrationComponent.html":{},"classes/ServerCannotConnect.html":{},"classes/ServerConfig.html":{},"injectables/ServerConfigService.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"components/ViewComponent.html":{},"components/WikiEntryEditorComponent.html":{}}}],["real",{"_index":1270,"title":{},"body":{"components/MarkdownEditorComponent.html":{}}}],["realtime",{"_index":1264,"title":{},"body":{"components/MarkdownEditorComponent.html":{}}}],["realtimerendering",{"_index":1253,"title":{},"body":{"components/MarkdownEditorComponent.html":{}}}],["reason",{"_index":1180,"title":{},"body":{"components/LoginComponent.html":{}}}],["rebeccapurple",{"_index":2335,"title":{},"body":{"components/ViewEditComponent.html":{}}}],["received",{"_index":719,"title":{},"body":{"components/EditComponent.html":{},"classes/ProtoArtifact.html":{},"classes/ProtoCollection.html":{},"classes/ProtoEdit.html":{},"components/UserProfileComponent.html":{}}}],["record",{"_index":2081,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["recording",{"_index":1895,"title":{},"body":{"components/TagSelectionComponent.html":{}}}],["records",{"_index":1483,"title":{},"body":{"injectables/PreviousRouteService.html":{}}}],["red",{"_index":1736,"title":{},"body":{"components/RegistrationComponent.html":{},"components/WikiEntryEditorComponent.html":{}}}],["redirect",{"_index":1107,"title":{},"body":{"components/LoginComponent.html":{}}}],["redirect_wait_time",{"_index":1144,"title":{},"body":{"components/LoginComponent.html":{}}}],["redirecting",{"_index":1143,"title":{},"body":{"components/LoginComponent.html":{}}}],["redirectto",{"_index":268,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reflect",{"_index":1348,"title":{},"body":{"components/ModalMessageComponent.html":{},"index.html":{}}}],["register",{"_index":280,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/RegistrationComponent.html":{}}}],["register(newuser",{"_index":1717,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["register(user",{"_index":1224,"title":{},"body":{"injectables/LoginService.html":{}}}],["registered",{"_index":1061,"title":{},"body":{"components/HomeComponent.html":{},"injectables/LoginService.html":{},"components/RegistrationComponent.html":{}}}],["registration",{"_index":1120,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["registration'},{'name",{"_index":94,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/CollectionListComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/CreateComponent.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"components/EntryListComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownDisplayComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/ModalMessageComponent.html":{},"components/MuseumListComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordModalComponent.html":{},"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{},"components/TagSelectionComponent.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryEditorComponent.html":{},"components/WikiEntryViewComponent.html":{}}}],["registration.component.css",{"_index":1654,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["registration.component.html",{"_index":1655,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["registrationcomponent",{"_index":93,"title":{"components/RegistrationComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CollectionListComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/CreateComponent.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"components/EntryListComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownDisplayComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/ModalMessageComponent.html":{},"components/MuseumListComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordModalComponent.html":{},"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{},"components/TagSelectionComponent.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryEditorComponent.html":{},"components/WikiEntryViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["registrationcomponent._max_password_length",{"_index":1723,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["registrationcomponent._max_username_length",{"_index":1721,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["registrationcomponent._min_password_length",{"_index":1722,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["registrationcomponent._min_username_length",{"_index":1720,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["registrationcomponent.retypepasswordvalidator",{"_index":1691,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["registrationform",{"_index":1660,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["related",{"_index":872,"title":{},"body":{"injectables/EditService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/UserEditListComponent.html":{},"injectables/UserInfoService.html":{}}}],["relevant",{"_index":1124,"title":{},"body":{"components/LoginComponent.html":{}}}],["relies",{"_index":2542,"title":{},"body":{"index.html":{}}}],["reload",{"_index":1971,"title":{},"body":{"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{}}}],["reloading",{"_index":2174,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["reloadprofile",{"_index":1962,"title":{},"body":{"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{}}}],["remain",{"_index":945,"title":{},"body":{"components/EntryListComponent.html":{}}}],["remaining",{"_index":1024,"title":{},"body":{"components/FooterComponent.html":{},"components/NavigationBarComponent.html":{}}}],["remove",{"_index":2073,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["render",{"_index":1262,"title":{},"body":{"components/MarkdownEditorComponent.html":{}}}],["rendered",{"_index":1240,"title":{},"body":{"components/MarkdownDisplayComponent.html":{},"components/MarkdownEditorComponent.html":{}}}],["rendering",{"_index":1249,"title":{},"body":{"components/MarkdownEditorComponent.html":{}}}],["rendermarkdown",{"_index":1254,"title":{},"body":{"components/MarkdownEditorComponent.html":{}}}],["replaced",{"_index":537,"title":{},"body":{"components/CollectionListComponent.html":{},"miscellaneous/variables.html":{}}}],["replacement",{"_index":1927,"title":{},"body":{"pipes/TextLimitPipe.html":{}}}],["replacements",{"_index":2589,"title":{},"body":{"miscellaneous/variables.html":{}}}],["replaces",{"_index":2586,"title":{},"body":{"miscellaneous/variables.html":{}}}],["representation",{"_index":659,"title":{},"body":{"classes/Edit.html":{}}}],["representing",{"_index":1363,"title":{},"body":{"components/ModalMessageComponent.html":{}}}],["request",{"_index":439,"title":{},"body":{"injectables/ArtifactService.html":{},"components/EditComponent.html":{},"injectables/EditService.html":{},"components/ModalMessageComponent.html":{},"injectables/MuseumService.html":{},"classes/ProtoEdit.html":{},"classes/ServerResponse.html":{},"injectables/UserInfoService.html":{},"components/UserProfileComponent.html":{}}}],["require",{"_index":2476,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":2579,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":482,"title":{},"body":{"classes/BasicUserInfo.html":{},"components/WikiEntryEditorComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["res",{"_index":754,"title":{},"body":{"components/EditComponent.html":{},"components/ModalMessageComponent.html":{},"classes/PrototypeBuilder.html":{},"components/RegistrationComponent.html":{},"components/TagSelectionComponent.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{}}}],["res.collectionlist.map(tag.of",{"_index":1912,"title":{},"body":{"components/TagSelectionComponent.html":{}}}],["res.message",{"_index":1374,"title":{},"body":{"components/ModalMessageComponent.html":{}}}],["res.museum.id",{"_index":762,"title":{},"body":{"components/EditComponent.html":{}}}],["res.success",{"_index":839,"title":{},"body":{"components/EditOrCreateComponent.html":{},"components/ModalMessageComponent.html":{},"components/RegistrationComponent.html":{},"injectables/UserInfoService.html":{}}}],["resembles",{"_index":2427,"title":{},"body":{"classes/Wrapper.html":{}}}],["reserved",{"_index":1621,"title":{},"body":{"classes/ProtoUser.html":{},"classes/User.html":{}}}],["reset",{"_index":96,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CollectionListComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/CreateComponent.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"components/EntryListComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/MarkdownDisplayComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/ModalMessageComponent.html":{},"components/MuseumListComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordModalComponent.html":{},"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{},"components/TagSelectionComponent.html":{},"components/UserEditListComponent.html":{},"injectables/UserInfoService.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryEditorComponent.html":{},"components/WikiEntryViewComponent.html":{},"classes/Wrapper.html":{},"overview.html":{}}}],["resetcolumnsortstatus",{"_index":1958,"title":{},"body":{"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{}}}],["resetloadingstatus",{"_index":2204,"title":{},"body":{"components/ViewComponent.html":{}}}],["resetpassword",{"_index":1090,"title":{},"body":{"components/LoginComponent.html":{},"injectables/LoginService.html":{}}}],["resetpassword(username",{"_index":1226,"title":{},"body":{"injectables/LoginService.html":{}}}],["resetpasswordmodal",{"_index":1170,"title":{},"body":{"components/LoginComponent.html":{}}}],["resetpasswordmodal.componentinstance.modal",{"_index":1172,"title":{},"body":{"components/LoginComponent.html":{}}}],["resetpasswordmodal.result.then",{"_index":1173,"title":{},"body":{"components/LoginComponent.html":{}}}],["resetpasswordmodalcomponent",{"_index":95,"title":{"components/ResetPasswordModalComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CollectionListComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/CreateComponent.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"components/EntryListComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownDisplayComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/ModalMessageComponent.html":{},"components/MuseumListComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordModalComponent.html":{},"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{},"components/TagSelectionComponent.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryEditorComponent.html":{},"components/WikiEntryViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["resetpromisewrapper",{"_index":1175,"title":{},"body":{"components/LoginComponent.html":{}}}],["respond",{"_index":1076,"title":{},"body":{"components/LoadingComponent.html":{}}}],["response",{"_index":415,"title":{},"body":{"injectables/ArtifactService.html":{},"injectables/CollectionService.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"injectables/EditService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/ModalMessageComponent.html":{},"components/MuseumListComponent.html":{},"injectables/MuseumService.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordModalComponent.html":{},"classes/ServerResponse.html":{},"components/UserEditListComponent.html":{},"injectables/UserInfoService.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryViewComponent.html":{}}}],["response.collectionlist",{"_index":2245,"title":{},"body":{"components/ViewComponent.html":{}}}],["response.success",{"_index":1155,"title":{},"body":{"components/LoginComponent.html":{}}}],["response.ts",{"_index":1843,"title":{},"body":{"classes/ServerResponse.html":{},"coverage.html":{}}}],["response.ts:13",{"_index":1845,"title":{},"body":{"classes/ServerResponse.html":{}}}],["response.ts:8",{"_index":1848,"title":{},"body":{"classes/ServerResponse.html":{}}}],["responsible",{"_index":664,"title":{},"body":{"classes/Edit.html":{},"components/HomeComponent.html":{},"classes/ProtoEdit.html":{}}}],["result",{"_index":119,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"classes/Artifact.html":{},"classes/ArtifactBuilder.html":{},"injectables/ArtifactService.html":{},"classes/BasicEntry.html":{},"classes/BasicEntryBuilder.html":{},"classes/BasicUserInfo.html":{},"classes/Collection.html":{},"classes/CollectionBuilder.html":{},"components/CollectionListComponent.html":{},"injectables/CollectionService.html":{},"components/ConfirmationModalComponent.html":{},"components/CreateComponent.html":{},"classes/Edit.html":{},"classes/EditBuilder.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"injectables/EditService.html":{},"components/EntryListComponent.html":{},"components/FooterComponent.html":{},"injectables/GetByCategoryService.html":{},"classes/HashHelper.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardService.html":{},"injectables/LoginService.html":{},"components/MarkdownDisplayComponent.html":{},"components/MarkdownEditorComponent.html":{},"pipes/MarkedPipe.html":{},"classes/Mocker.html":{},"components/ModalMessageComponent.html":{},"classes/Museum.html":{},"classes/MuseumBuilder.html":{},"components/MuseumListComponent.html":{},"injectables/MuseumService.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"injectables/PreviousRouteService.html":{},"classes/ProjectConfig.html":{},"injectables/ProjectConfigService.html":{},"classes/ProtoArtifact.html":{},"classes/ProtoCollection.html":{},"classes/ProtoEdit.html":{},"classes/ProtoMuseum.html":{},"classes/ProtoUser.html":{},"classes/PrototypeBuilder.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordModalComponent.html":{},"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{},"classes/ServerCannotConnect.html":{},"classes/ServerConfig.html":{},"injectables/ServerConfigService.html":{},"classes/ServerResponse.html":{},"classes/Tag.html":{},"components/TagSelectionComponent.html":{},"pipes/TextLimitPipe.html":{},"classes/User.html":{},"components/UserEditListComponent.html":{},"injectables/UserInfoService.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"classes/WikiEntry.html":{},"classes/WikiEntryBuilder.html":{},"components/WikiEntryEditorComponent.html":{},"components/WikiEntryViewComponent.html":{},"classes/Wrapper.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["result.name",{"_index":1802,"title":{},"body":{"components/SearchInCategoryComponent.html":{}}}],["results",{"_index":121,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"classes/Artifact.html":{},"classes/ArtifactBuilder.html":{},"injectables/ArtifactService.html":{},"classes/BasicEntry.html":{},"classes/BasicEntryBuilder.html":{},"classes/BasicUserInfo.html":{},"classes/Collection.html":{},"classes/CollectionBuilder.html":{},"components/CollectionListComponent.html":{},"injectables/CollectionService.html":{},"components/ConfirmationModalComponent.html":{},"components/CreateComponent.html":{},"classes/Edit.html":{},"classes/EditBuilder.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"injectables/EditService.html":{},"components/EntryListComponent.html":{},"components/FooterComponent.html":{},"injectables/GetByCategoryService.html":{},"classes/HashHelper.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardService.html":{},"injectables/LoginService.html":{},"components/MarkdownDisplayComponent.html":{},"components/MarkdownEditorComponent.html":{},"pipes/MarkedPipe.html":{},"classes/Mocker.html":{},"components/ModalMessageComponent.html":{},"classes/Museum.html":{},"classes/MuseumBuilder.html":{},"components/MuseumListComponent.html":{},"injectables/MuseumService.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"injectables/PreviousRouteService.html":{},"classes/ProjectConfig.html":{},"injectables/ProjectConfigService.html":{},"classes/ProtoArtifact.html":{},"classes/ProtoCollection.html":{},"classes/ProtoEdit.html":{},"classes/ProtoMuseum.html":{},"classes/ProtoUser.html":{},"classes/PrototypeBuilder.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordModalComponent.html":{},"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{},"classes/ServerCannotConnect.html":{},"classes/ServerConfig.html":{},"injectables/ServerConfigService.html":{},"classes/ServerResponse.html":{},"classes/Tag.html":{},"components/TagSelectionComponent.html":{},"pipes/TextLimitPipe.html":{},"classes/User.html":{},"components/UserEditListComponent.html":{},"injectables/UserInfoService.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"classes/WikiEntry.html":{},"classes/WikiEntryBuilder.html":{},"components/WikiEntryEditorComponent.html":{},"components/WikiEntryViewComponent.html":{},"classes/Wrapper.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["retrieve",{"_index":623,"title":{},"body":{"components/CreateComponent.html":{},"components/EditComponent.html":{},"components/LoadingComponent.html":{},"injectables/LoginService.html":{},"components/MuseumListComponent.html":{},"injectables/ProjectConfigService.html":{},"classes/ServerConfig.html":{},"components/UserEditListComponent.html":{},"injectables/UserInfoService.html":{},"components/UserProfileComponent.html":{},"components/ViewEditComponent.html":{}}}],["retrieved",{"_index":2222,"title":{},"body":{"components/ViewComponent.html":{}}}],["retrieves",{"_index":1882,"title":{},"body":{"components/TagSelectionComponent.html":{},"injectables/UserInfoService.html":{},"components/UserProfileComponent.html":{}}}],["retrieving",{"_index":2206,"title":{},"body":{"components/ViewComponent.html":{}}}],["return",{"_index":357,"title":{},"body":{"classes/ArtifactBuilder.html":{},"injectables/ArtifactService.html":{},"classes/BasicEntryBuilder.html":{},"classes/CollectionBuilder.html":{},"injectables/CollectionService.html":{},"classes/EditBuilder.html":{},"components/EditOrCreateComponent.html":{},"injectables/EditService.html":{},"components/EntryListComponent.html":{},"injectables/GetByCategoryService.html":{},"classes/HashHelper.html":{},"components/LoginComponent.html":{},"guards/LoginGuardService.html":{},"injectables/LoginService.html":{},"pipes/MarkedPipe.html":{},"classes/Mocker.html":{},"classes/Museum.html":{},"classes/MuseumBuilder.html":{},"injectables/MuseumService.html":{},"injectables/PreviousRouteService.html":{},"classes/ProjectConfig.html":{},"injectables/ProjectConfigService.html":{},"classes/ProtoArtifact.html":{},"classes/ProtoCollection.html":{},"classes/ProtoEdit.html":{},"classes/ProtoUser.html":{},"classes/PrototypeBuilder.html":{},"components/RegistrationComponent.html":{},"classes/ServerConfig.html":{},"injectables/ServerConfigService.html":{},"classes/Tag.html":{},"components/TagSelectionComponent.html":{},"pipes/TextLimitPipe.html":{},"components/UserEditListComponent.html":{},"injectables/UserInfoService.html":{},"components/UserMuseumListComponent.html":{},"components/ViewEditComponent.html":{},"classes/WikiEntryBuilder.html":{},"components/WikiEntryEditorComponent.html":{}}}],["returned",{"_index":1350,"title":{},"body":{"components/ModalMessageComponent.html":{},"injectables/UserInfoService.html":{},"classes/Wrapper.html":{}}}],["returns",{"_index":36,"title":{},"body":{"components/AboutComponent.html":{},"classes/ArtifactBuilder.html":{},"injectables/ArtifactService.html":{},"classes/BasicEntryBuilder.html":{},"classes/CollectionBuilder.html":{},"components/CollectionListComponent.html":{},"injectables/CollectionService.html":{},"components/CreateComponent.html":{},"classes/EditBuilder.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"injectables/EditService.html":{},"components/EntryListComponent.html":{},"injectables/GetByCategoryService.html":{},"classes/HashHelper.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardService.html":{},"injectables/LoginService.html":{},"components/MarkdownDisplayComponent.html":{},"components/MarkdownEditorComponent.html":{},"pipes/MarkedPipe.html":{},"classes/Mocker.html":{},"components/ModalMessageComponent.html":{},"classes/Museum.html":{},"classes/MuseumBuilder.html":{},"components/MuseumListComponent.html":{},"injectables/MuseumService.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"injectables/PreviousRouteService.html":{},"classes/ProjectConfig.html":{},"injectables/ProjectConfigService.html":{},"classes/ProtoArtifact.html":{},"classes/ProtoCollection.html":{},"classes/ProtoEdit.html":{},"classes/ProtoUser.html":{},"classes/PrototypeBuilder.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordModalComponent.html":{},"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{},"classes/ServerConfig.html":{},"injectables/ServerConfigService.html":{},"classes/Tag.html":{},"components/TagSelectionComponent.html":{},"pipes/TextLimitPipe.html":{},"components/UserEditListComponent.html":{},"injectables/UserInfoService.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"classes/WikiEntryBuilder.html":{},"components/WikiEntryEditorComponent.html":{},"components/WikiEntryViewComponent.html":{},"miscellaneous/functions.html":{}}}],["retype",{"_index":1730,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["retyped",{"_index":1676,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["retypepassword",{"_index":1690,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["retypepasswordvalidator",{"_index":1661,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["retypepasswordvalidator(form",{"_index":1671,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["review",{"_index":646,"title":{},"body":{"classes/Edit.html":{},"injectables/EditService.html":{},"classes/Mocker.html":{},"classes/ProtoUser.html":{},"components/UserEditListComponent.html":{},"injectables/UserInfoService.html":{},"components/ViewEditComponent.html":{}}}],["review/approved/denied",{"_index":1581,"title":{},"body":{"classes/ProtoEdit.html":{}}}],["reviewed",{"_index":883,"title":{},"body":{"injectables/EditService.html":{},"classes/User.html":{},"components/UserEditListComponent.html":{},"components/ViewEditComponent.html":{}}}],["reviewedit",{"_index":875,"title":{},"body":{"injectables/EditService.html":{},"components/UserEditListComponent.html":{},"components/ViewEditComponent.html":{}}}],["reviewedit(edit",{"_index":881,"title":{},"body":{"injectables/EditService.html":{}}}],["reviewedit(entry",{"_index":1981,"title":{},"body":{"components/UserEditListComponent.html":{},"components/ViewEditComponent.html":{}}}],["reviewer",{"_index":691,"title":{},"body":{"classes/EditBuilder.html":{},"classes/ProtoEdit.html":{}}}],["reviewerusername",{"_index":641,"title":{},"body":{"classes/Edit.html":{},"classes/EditBuilder.html":{},"classes/ProtoEdit.html":{}}}],["reviewerusername(protoedit.reviewer",{"_index":1605,"title":{},"body":{"classes/ProtoEdit.html":{}}}],["reviewerusername(value",{"_index":689,"title":{},"body":{"classes/EditBuilder.html":{}}}],["reviewing",{"_index":665,"title":{},"body":{"classes/Edit.html":{},"classes/ProtoEdit.html":{}}}],["reviews",{"_index":1965,"title":{},"body":{"components/UserEditListComponent.html":{}}}],["root",{"_index":126,"title":{},"body":{"components/AppComponent.html":{},"injectables/ArtifactService.html":{},"injectables/CollectionService.html":{},"injectables/EditService.html":{},"injectables/GetByCategoryService.html":{},"guards/LoginGuardService.html":{},"injectables/LoginService.html":{},"injectables/MuseumService.html":{},"injectables/PreviousRouteService.html":{},"injectables/ProjectConfigService.html":{},"injectables/ServerConfigService.html":{},"injectables/UserInfoService.html":{},"index.html":{}}}],["root'},{'name",{"_index":58,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/CollectionListComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/CreateComponent.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"components/EntryListComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownDisplayComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/ModalMessageComponent.html":{},"components/MuseumListComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordModalComponent.html":{},"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{},"components/TagSelectionComponent.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryEditorComponent.html":{},"components/WikiEntryViewComponent.html":{}}}],["route",{"_index":619,"title":{},"body":{"components/CreateComponent.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"components/EntryListComponent.html":{},"guards/LoginGuardService.html":{},"injectables/PreviousRouteService.html":{},"components/RegistrationComponent.html":{},"components/SearchInCategoryComponent.html":{},"components/ViewComponent.html":{},"components/WikiEntryViewComponent.html":{}}}],["route.service",{"_index":1130,"title":{},"body":{"components/LoginComponent.html":{},"guards/LoginGuardService.html":{}}}],["route.service.ts",{"_index":1482,"title":{},"body":{"injectables/PreviousRouteService.html":{},"coverage.html":{}}}],["route.service.ts:15",{"_index":1487,"title":{},"body":{"injectables/PreviousRouteService.html":{}}}],["route.service.ts:29",{"_index":1492,"title":{},"body":{"injectables/PreviousRouteService.html":{}}}],["route.service.ts:38",{"_index":1495,"title":{},"body":{"injectables/PreviousRouteService.html":{}}}],["route.service.ts:45",{"_index":1488,"title":{},"body":{"injectables/PreviousRouteService.html":{}}}],["router",{"_index":779,"title":{},"body":{"components/EditOrCreateComponent.html":{},"components/EntryListComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardService.html":{},"components/MuseumListComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"injectables/PreviousRouteService.html":{},"components/RegistrationComponent.html":{},"components/SearchComponent.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/WikiEntryViewComponent.html":{}}}],["routermodule",{"_index":259,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(approutes",{"_index":281,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":1195,"title":{},"body":{"guards/LoginGuardService.html":{}}}],["routes",{"_index":258,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"components/EditOrCreateComponent.html":{},"components/LoginComponent.html":{},"components/MuseumListComponent.html":{},"components/NavigationBarComponent.html":{},"injectables/PreviousRouteService.html":{},"components/SearchComponent.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/WikiEntryViewComponent.html":{},"overview.html":{},"routes.html":{}}}],["routing",{"_index":934,"title":{},"body":{"components/EntryListComponent.html":{},"components/NavigationBarComponent.html":{}}}],["routing.module",{"_index":161,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":257,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["run",{"_index":2531,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":409,"title":{},"body":{"injectables/ArtifactService.html":{},"injectables/CollectionService.html":{},"injectables/EditService.html":{},"injectables/GetByCategoryService.html":{},"injectables/LoginService.html":{},"injectables/MuseumService.html":{},"injectables/UserInfoService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":1798,"title":{},"body":{"components/SearchInCategoryComponent.html":{}}}],["s",{"_index":992,"title":{},"body":{"components/EntryListComponent.html":{}}}],["same",{"_index":1858,"title":{},"body":{"classes/Tag.html":{}}}],["search",{"_index":101,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CollectionListComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/CreateComponent.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"components/EntryListComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownDisplayComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/ModalMessageComponent.html":{},"components/MuseumListComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordModalComponent.html":{},"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{},"components/TagSelectionComponent.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryEditorComponent.html":{},"components/WikiEntryViewComponent.html":{}}}],["search'},{'name",{"_index":99,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/CollectionListComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/CreateComponent.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"components/EntryListComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownDisplayComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/ModalMessageComponent.html":{},"components/MuseumListComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordModalComponent.html":{},"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{},"components/TagSelectionComponent.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryEditorComponent.html":{},"components/WikiEntryViewComponent.html":{}}}],["search.component.css",{"_index":1752,"title":{},"body":{"components/SearchComponent.html":{}}}],["search.component.html",{"_index":1753,"title":{},"body":{"components/SearchComponent.html":{}}}],["search/:searchcategory/:searchtext",{"_index":271,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["search_options",{"_index":1755,"title":{},"body":{"components/SearchComponent.html":{}}}],["searchcategory",{"_index":1756,"title":{},"body":{"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{}}}],["searchcomponent",{"_index":98,"title":{"components/SearchComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CollectionListComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/CreateComponent.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"components/EntryListComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownDisplayComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/ModalMessageComponent.html":{},"components/MuseumListComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordModalComponent.html":{},"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{},"components/TagSelectionComponent.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryEditorComponent.html":{},"components/WikiEntryViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["searched",{"_index":1763,"title":{},"body":{"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{}}}],["searches",{"_index":962,"title":{},"body":{"components/EntryListComponent.html":{}}}],["searchincategorycomponent",{"_index":100,"title":{"components/SearchInCategoryComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CollectionListComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/CreateComponent.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"components/EntryListComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownDisplayComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/ModalMessageComponent.html":{},"components/MuseumListComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordModalComponent.html":{},"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{},"components/TagSelectionComponent.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryEditorComponent.html":{},"components/WikiEntryViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["searching",{"_index":909,"title":{},"body":{"components/EntryListComponent.html":{},"components/SearchComponent.html":{}}}],["searchoption",{"_index":1786,"title":{},"body":{"components/SearchComponent.html":{}}}],["searchresults",{"_index":1791,"title":{},"body":{"components/SearchInCategoryComponent.html":{}}}],["searchtext",{"_index":914,"title":{},"body":{"components/EntryListComponent.html":{},"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{}}}],["second",{"_index":1718,"title":{},"body":{"components/RegistrationComponent.html":{},"pipes/TextLimitPipe.html":{}}}],["section",{"_index":2054,"title":{},"body":{"components/UserEditListComponent.html":{},"miscellaneous/variables.html":{}}}],["sections",{"_index":1112,"title":{},"body":{"components/LoginComponent.html":{}}}],["security",{"_index":2075,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["see",{"_index":808,"title":{},"body":{"components/EditOrCreateComponent.html":{},"index.html":{}}}],["seen",{"_index":1991,"title":{},"body":{"components/UserEditListComponent.html":{}}}],["select/deselect",{"_index":1867,"title":{},"body":{"components/TagSelectionComponent.html":{}}}],["selected",{"_index":1762,"title":{},"body":{"components/SearchComponent.html":{},"classes/Tag.html":{},"components/TagSelectionComponent.html":{}}}],["selection",{"_index":538,"title":{},"body":{"components/CollectionListComponent.html":{},"components/EditOrCreateComponent.html":{},"components/TagSelectionComponent.html":{}}}],["selection'},{'name",{"_index":105,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/CollectionListComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/CreateComponent.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"components/EntryListComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownDisplayComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/ModalMessageComponent.html":{},"components/MuseumListComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordModalComponent.html":{},"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{},"components/TagSelectionComponent.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryEditorComponent.html":{},"components/WikiEntryViewComponent.html":{}}}],["selection.component",{"_index":216,"title":{},"body":{"modules/AppModule.html":{},"components/EditOrCreateComponent.html":{}}}],["selection.component.css",{"_index":1869,"title":{},"body":{"components/TagSelectionComponent.html":{}}}],["selection.component.html",{"_index":1870,"title":{},"body":{"components/TagSelectionComponent.html":{}}}],["selection.component.ts",{"_index":1866,"title":{},"body":{"components/TagSelectionComponent.html":{},"coverage.html":{}}}],["selection.component.ts:106",{"_index":1884,"title":{},"body":{"components/TagSelectionComponent.html":{}}}],["selection.component.ts:134",{"_index":1889,"title":{},"body":{"components/TagSelectionComponent.html":{}}}],["selection.component.ts:141",{"_index":1883,"title":{},"body":{"components/TagSelectionComponent.html":{}}}],["selection.component.ts:23",{"_index":1881,"title":{},"body":{"components/TagSelectionComponent.html":{}}}],["selection.component.ts:27",{"_index":1880,"title":{},"body":{"components/TagSelectionComponent.html":{}}}],["selection.component.ts:31",{"_index":1879,"title":{},"body":{"components/TagSelectionComponent.html":{}}}],["selection.component.ts:36",{"_index":1898,"title":{},"body":{"components/TagSelectionComponent.html":{}}}],["selection.component.ts:41",{"_index":1896,"title":{},"body":{"components/TagSelectionComponent.html":{}}}],["selection.component.ts:46",{"_index":1894,"title":{},"body":{"components/TagSelectionComponent.html":{}}}],["selection.component.ts:51",{"_index":1897,"title":{},"body":{"components/TagSelectionComponent.html":{}}}],["selection.component.ts:55",{"_index":1878,"title":{},"body":{"components/TagSelectionComponent.html":{}}}],["selection.component.ts:75",{"_index":1885,"title":{},"body":{"components/TagSelectionComponent.html":{}}}],["selection.component.ts:85",{"_index":1890,"title":{},"body":{"components/TagSelectionComponent.html":{}}}],["selection.component.ts:93",{"_index":1893,"title":{},"body":{"components/TagSelectionComponent.html":{}}}],["selection/tag",{"_index":215,"title":{},"body":{"modules/AppModule.html":{},"components/EditOrCreateComponent.html":{},"components/TagSelectionComponent.html":{},"coverage.html":{}}}],["selection/tag.ts",{"_index":1854,"title":{},"body":{"classes/Tag.html":{},"coverage.html":{}}}],["selection/tag.ts:11",{"_index":1857,"title":{},"body":{"classes/Tag.html":{}}}],["selection/tag.ts:16",{"_index":1859,"title":{},"body":{"classes/Tag.html":{}}}],["selection/tag.ts:20",{"_index":1856,"title":{},"body":{"classes/Tag.html":{}}}],["selection/tag.ts:39",{"_index":1861,"title":{},"body":{"classes/Tag.html":{}}}],["selections",{"_index":809,"title":{},"body":{"components/EditOrCreateComponent.html":{}}}],["selector",{"_index":21,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/CollectionListComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/CreateComponent.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"components/EntryListComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownDisplayComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/ModalMessageComponent.html":{},"components/MuseumListComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordModalComponent.html":{},"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{},"components/TagSelectionComponent.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryEditorComponent.html":{},"components/WikiEntryViewComponent.html":{}}}],["selecttag",{"_index":1873,"title":{},"body":{"components/TagSelectionComponent.html":{}}}],["selecttag(tag",{"_index":1888,"title":{},"body":{"components/TagSelectionComponent.html":{}}}],["self",{"_index":318,"title":{},"body":{"classes/ArtifactBuilder.html":{},"classes/BasicEntryBuilder.html":{},"classes/Collection.html":{},"classes/CollectionBuilder.html":{},"classes/MuseumBuilder.html":{},"classes/WikiEntryBuilder.html":{}}}],["self?.description",{"_index":516,"title":{},"body":{"classes/Collection.html":{}}}],["self?.id",{"_index":517,"title":{},"body":{"classes/Collection.html":{}}}],["self?.image",{"_index":515,"title":{},"body":{"classes/Collection.html":{}}}],["self?.introduction",{"_index":514,"title":{},"body":{"classes/Collection.html":{}}}],["sena",{"_index":1020,"title":{},"body":{"components/FooterComponent.html":{}}}],["send",{"_index":2282,"title":{},"body":{"components/ViewEditComponent.html":{}}}],["sending",{"_index":1372,"title":{},"body":{"components/ModalMessageComponent.html":{},"classes/ServerResponse.html":{},"components/UserEditListComponent.html":{}}}],["sends",{"_index":2071,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["sent",{"_index":1612,"title":{},"body":{"classes/ProtoUser.html":{}}}],["separated",{"_index":534,"title":{},"body":{"components/CollectionListComponent.html":{}}}],["serve",{"_index":2539,"title":{},"body":{"index.html":{}}}],["server",{"_index":406,"title":{},"body":{"injectables/ArtifactService.html":{},"injectables/CollectionService.html":{},"components/EditComponent.html":{},"injectables/EditService.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/ModalMessageComponent.html":{},"injectables/MuseumService.html":{},"classes/ProjectConfig.html":{},"classes/ProtoArtifact.html":{},"components/RegistrationComponent.html":{},"classes/ServerCannotConnect.html":{},"classes/ServerConfig.html":{},"injectables/ServerConfigService.html":{},"classes/ServerResponse.html":{},"injectables/UserInfoService.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"index.html":{}}}],["server's",{"_index":735,"title":{},"body":{"components/EditComponent.html":{}}}],["servercannotconnect",{"_index":1084,"title":{"classes/ServerCannotConnect.html":{}},"body":{"components/LoadingComponent.html":{},"components/ModalMessageComponent.html":{},"classes/ServerCannotConnect.html":{},"coverage.html":{}}}],["servercannotconnect.message",{"_index":1080,"title":{},"body":{"components/LoadingComponent.html":{},"components/ModalMessageComponent.html":{}}}],["serverconfig",{"_index":559,"title":{"classes/ServerConfig.html":{}},"body":{"injectables/CollectionService.html":{},"injectables/LoginService.html":{},"classes/ServerConfig.html":{},"injectables/ServerConfigService.html":{},"coverage.html":{}}}],["serverconfig(projectconfigservice.getprojectconfig",{"_index":1841,"title":{},"body":{"injectables/ServerConfigService.html":{}}}],["serverconfig.deploymentserverurl",{"_index":1835,"title":{},"body":{"classes/ServerConfig.html":{}}}],["serverconfig.getserverconfig().geturl",{"_index":1231,"title":{},"body":{"injectables/LoginService.html":{}}}],["serverconfig.localcpptestingserverurl",{"_index":1834,"title":{},"body":{"classes/ServerConfig.html":{}}}],["serverconfigservice",{"_index":378,"title":{"injectables/ServerConfigService.html":{}},"body":{"injectables/ArtifactService.html":{},"injectables/CollectionService.html":{},"injectables/EditService.html":{},"injectables/GetByCategoryService.html":{},"injectables/LoginService.html":{},"injectables/MuseumService.html":{},"injectables/ServerConfigService.html":{},"coverage.html":{}}}],["serverconfigservice.getserverconfig",{"_index":575,"title":{},"body":{"injectables/CollectionService.html":{}}}],["serverconfigservice.getserverconfig().geturl",{"_index":891,"title":{},"body":{"injectables/EditService.html":{},"injectables/MuseumService.html":{}}}],["serverresponse",{"_index":414,"title":{"classes/ServerResponse.html":{}},"body":{"injectables/ArtifactService.html":{},"injectables/CollectionService.html":{},"components/EditOrCreateComponent.html":{},"injectables/EditService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/ModalMessageComponent.html":{},"injectables/MuseumService.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordModalComponent.html":{},"classes/ServerResponse.html":{},"components/UserEditListComponent.html":{},"injectables/UserInfoService.html":{},"components/UserMuseumListComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryViewComponent.html":{},"coverage.html":{}}}],["service",{"_index":1190,"title":{},"body":{"guards/LoginGuardService.html":{},"injectables/LoginService.html":{},"components/MuseumListComponent.html":{},"components/UserEditListComponent.html":{},"injectables/UserInfoService.html":{},"dependencies.html":{}}}],["services/config/project",{"_index":745,"title":{},"body":{"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"components/EntryListComponent.html":{},"components/LoginComponent.html":{},"components/TagSelectionComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{}}}],["services/edit.service",{"_index":2014,"title":{},"body":{"components/UserEditListComponent.html":{},"components/ViewEditComponent.html":{}}}],["services/get",{"_index":737,"title":{},"body":{"components/EditComponent.html":{},"components/ViewEditComponent.html":{}}}],["services/object",{"_index":740,"title":{},"body":{"components/EditComponent.html":{},"classes/PrototypeBuilder.html":{},"components/TagSelectionComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{}}}],["services/previous",{"_index":1129,"title":{},"body":{"components/LoginComponent.html":{}}}],["services/server",{"_index":817,"title":{},"body":{"components/EditOrCreateComponent.html":{},"components/LoginComponent.html":{},"components/ModalMessageComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordModalComponent.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryViewComponent.html":{}}}],["services/user/login",{"_index":262,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["services/user/login.service",{"_index":1705,"title":{},"body":{"components/RegistrationComponent.html":{},"components/ResetPasswordModalComponent.html":{}}}],["services/user/user",{"_index":1128,"title":{},"body":{"components/LoginComponent.html":{},"components/NavigationBarComponent.html":{},"components/RegistrationComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryViewComponent.html":{}}}],["services/wiki",{"_index":815,"title":{},"body":{"components/EditOrCreateComponent.html":{},"components/MuseumListComponent.html":{},"components/TagSelectionComponent.html":{},"components/UserMuseumListComponent.html":{},"components/ViewComponent.html":{},"components/WikiEntryViewComponent.html":{}}}],["set",{"_index":333,"title":{},"body":{"classes/ArtifactBuilder.html":{},"classes/BasicEntryBuilder.html":{},"classes/CollectionBuilder.html":{},"components/MarkdownEditorComponent.html":{},"classes/MuseumBuilder.html":{},"injectables/PreviousRouteService.html":{},"classes/ProjectConfig.html":{},"classes/WikiEntryBuilder.html":{}}}],["setpreviousroute(previousroute",{"_index":1494,"title":{},"body":{"injectables/PreviousRouteService.html":{}}}],["setter",{"_index":1496,"title":{},"body":{"injectables/PreviousRouteService.html":{}}}],["settimeout",{"_index":840,"title":{},"body":{"components/EditOrCreateComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["settings",{"_index":801,"title":{},"body":{"components/EditOrCreateComponent.html":{},"classes/ProjectConfig.html":{},"components/ViewComponent.html":{}}}],["settoinput",{"_index":1757,"title":{},"body":{"components/SearchComponent.html":{}}}],["setup",{"_index":1449,"title":{},"body":{"components/NavigationBarComponent.html":{},"index.html":{}}}],["sha512",{"_index":494,"title":{},"body":{"classes/BasicUserInfo.html":{},"classes/HashHelper.html":{},"classes/User.html":{},"dependencies.html":{}}}],["sha512.sha512(text",{"_index":1045,"title":{},"body":{"classes/HashHelper.html":{}}}],["shadow",{"_index":609,"title":{},"body":{"components/ConfirmationModalComponent.html":{},"components/ModalMessageComponent.html":{}}}],["show",{"_index":720,"title":{},"body":{"components/EditComponent.html":{}}}],["shown",{"_index":2140,"title":{},"body":{"components/UserMuseumListComponent.html":{}}}],["sign",{"_index":1366,"title":{},"body":{"components/ModalMessageComponent.html":{}}}],["similar",{"_index":2404,"title":{},"body":{"components/WikiEntryViewComponent.html":{}}}],["simple",{"_index":2591,"title":{},"body":{"miscellaneous/variables.html":{}}}],["simplechange",{"_index":1899,"title":{},"body":{"components/TagSelectionComponent.html":{}}}],["simplechange(undefined",{"_index":1903,"title":{},"body":{"components/TagSelectionComponent.html":{}}}],["simplechanges",{"_index":952,"title":{},"body":{"components/EntryListComponent.html":{},"components/SearchComponent.html":{},"components/TagSelectionComponent.html":{}}}],["simply",{"_index":1948,"title":{},"body":{"components/UserEditListComponent.html":{},"index.html":{}}}],["site",{"_index":1057,"title":{},"body":{"components/HomeComponent.html":{}}}],["solid",{"_index":1368,"title":{},"body":{"components/ModalMessageComponent.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"components/ViewEditComponent.html":{},"dependencies.html":{}}}],["something",{"_index":638,"title":{},"body":{"classes/Edit.html":{},"components/EntryListComponent.html":{},"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{},"components/UserEditListComponent.html":{}}}],["sometimes",{"_index":2375,"title":{},"body":{"components/WikiEntryEditorComponent.html":{}}}],["sort",{"_index":1959,"title":{},"body":{"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{}}}],["sort(column",{"_index":1984,"title":{},"body":{"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{}}}],["sortdown",{"_index":1953,"title":{},"body":{"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{}}}],["sorted",{"_index":2003,"title":{},"body":{"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{}}}],["sorting",{"_index":1978,"title":{},"body":{"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{}}}],["sortuntouched",{"_index":1954,"title":{},"body":{"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{}}}],["sortup",{"_index":1955,"title":{},"body":{"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"classes/Artifact.html":{},"classes/ArtifactBuilder.html":{},"injectables/ArtifactService.html":{},"classes/BasicEntry.html":{},"classes/BasicEntryBuilder.html":{},"classes/BasicUserInfo.html":{},"classes/Collection.html":{},"classes/CollectionBuilder.html":{},"components/CollectionListComponent.html":{},"injectables/CollectionService.html":{},"components/ConfirmationModalComponent.html":{},"components/CreateComponent.html":{},"classes/Edit.html":{},"classes/EditBuilder.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"injectables/EditService.html":{},"components/EntryListComponent.html":{},"components/FooterComponent.html":{},"injectables/GetByCategoryService.html":{},"classes/HashHelper.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardService.html":{},"injectables/LoginService.html":{},"components/MarkdownDisplayComponent.html":{},"components/MarkdownEditorComponent.html":{},"pipes/MarkedPipe.html":{},"classes/Mocker.html":{},"components/ModalMessageComponent.html":{},"classes/Museum.html":{},"classes/MuseumBuilder.html":{},"components/MuseumListComponent.html":{},"injectables/MuseumService.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"injectables/PreviousRouteService.html":{},"classes/ProjectConfig.html":{},"injectables/ProjectConfigService.html":{},"classes/ProtoArtifact.html":{},"classes/ProtoCollection.html":{},"classes/ProtoEdit.html":{},"classes/ProtoMuseum.html":{},"classes/ProtoUser.html":{},"classes/PrototypeBuilder.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordModalComponent.html":{},"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{},"classes/ServerCannotConnect.html":{},"classes/ServerConfig.html":{},"injectables/ServerConfigService.html":{},"classes/ServerResponse.html":{},"classes/Tag.html":{},"components/TagSelectionComponent.html":{},"pipes/TextLimitPipe.html":{},"classes/User.html":{},"components/UserEditListComponent.html":{},"injectables/UserInfoService.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"classes/WikiEntry.html":{},"classes/WikiEntryBuilder.html":{},"components/WikiEntryEditorComponent.html":{},"components/WikiEntryViewComponent.html":{},"classes/Wrapper.html":{}}}],["space",{"_index":1025,"title":{},"body":{"components/FooterComponent.html":{},"components/NavigationBarComponent.html":{}}}],["spec\\.ts",{"_index":2580,"title":{},"body":{"miscellaneous/variables.html":{}}}],["special",{"_index":2139,"title":{},"body":{"components/UserMuseumListComponent.html":{}}}],["spring",{"_index":2523,"title":{},"body":{"index.html":{}}}],["src/.../capitalize",{"_index":2516,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../environment.prod.ts",{"_index":2576,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":2577,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../exampledescription.ts",{"_index":2578,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../mode.ts",{"_index":2514,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../test.ts",{"_index":2575,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":256,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.module.ts",{"_index":155,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/app/app.component.ts",{"_index":122,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app/app.component.ts:15",{"_index":136,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/config/projectconfig.ts",{"_index":1501,"title":{},"body":{"classes/ProjectConfig.html":{},"coverage.html":{}}}],["src/app/config/projectconfig.ts:14",{"_index":1523,"title":{},"body":{"classes/ProjectConfig.html":{}}}],["src/app/config/projectconfig.ts:20",{"_index":1529,"title":{},"body":{"classes/ProjectConfig.html":{}}}],["src/app/config/projectconfig.ts:25",{"_index":1518,"title":{},"body":{"classes/ProjectConfig.html":{}}}],["src/app/config/projectconfig.ts:33",{"_index":1525,"title":{},"body":{"classes/ProjectConfig.html":{}}}],["src/app/config/projectconfig.ts:37",{"_index":1522,"title":{},"body":{"classes/ProjectConfig.html":{}}}],["src/app/config/projectconfig.ts:41",{"_index":1512,"title":{},"body":{"classes/ProjectConfig.html":{}}}],["src/app/config/projectconfig.ts:59",{"_index":1533,"title":{},"body":{"classes/ProjectConfig.html":{}}}],["src/app/config/projectconfig.ts:66",{"_index":1535,"title":{},"body":{"classes/ProjectConfig.html":{}}}],["src/app/config/projectconfig.ts:73",{"_index":1534,"title":{},"body":{"classes/ProjectConfig.html":{}}}],["src/app/config/projectconfig.ts:80",{"_index":1536,"title":{},"body":{"classes/ProjectConfig.html":{}}}],["src/app/config/projectconfig.ts:9",{"_index":1526,"title":{},"body":{"classes/ProjectConfig.html":{}}}],["src/app/config/servercannotconnect.ts",{"_index":1803,"title":{},"body":{"classes/ServerCannotConnect.html":{},"coverage.html":{}}}],["src/app/config/servercannotconnect.ts:8",{"_index":1811,"title":{},"body":{"classes/ServerCannotConnect.html":{}}}],["src/app/config/serverconfig.ts",{"_index":1812,"title":{},"body":{"classes/ServerConfig.html":{},"coverage.html":{}}}],["src/app/config/serverconfig.ts:10",{"_index":1820,"title":{},"body":{"classes/ServerConfig.html":{}}}],["src/app/config/serverconfig.ts:15",{"_index":1823,"title":{},"body":{"classes/ServerConfig.html":{}}}],["src/app/config/serverconfig.ts:20",{"_index":1817,"title":{},"body":{"classes/ServerConfig.html":{}}}],["src/app/config/serverconfig.ts:40",{"_index":1828,"title":{},"body":{"classes/ServerConfig.html":{}}}],["src/app/edit/create/create.component.ts",{"_index":610,"title":{},"body":{"components/CreateComponent.html":{},"coverage.html":{}}}],["src/app/edit/create/create.component.ts:18",{"_index":624,"title":{},"body":{"components/CreateComponent.html":{}}}],["src/app/edit/create/create.component.ts:22",{"_index":627,"title":{},"body":{"components/CreateComponent.html":{}}}],["src/app/edit/create/create.component.ts:27",{"_index":618,"title":{},"body":{"components/CreateComponent.html":{}}}],["src/app/edit/create/create.component.ts:40",{"_index":621,"title":{},"body":{"components/CreateComponent.html":{}}}],["src/app/edit/edit",{"_index":765,"title":{},"body":{"components/EditOrCreateComponent.html":{},"coverage.html":{}}}],["src/app/edit/edit/edit.component.ts",{"_index":704,"title":{},"body":{"components/EditComponent.html":{},"coverage.html":{}}}],["src/app/edit/edit/edit.component.ts:29",{"_index":722,"title":{},"body":{"components/EditComponent.html":{}}}],["src/app/edit/edit/edit.component.ts:33",{"_index":731,"title":{},"body":{"components/EditComponent.html":{}}}],["src/app/edit/edit/edit.component.ts:38",{"_index":736,"title":{},"body":{"components/EditComponent.html":{}}}],["src/app/edit/edit/edit.component.ts:43",{"_index":724,"title":{},"body":{"components/EditComponent.html":{}}}],["src/app/edit/edit/edit.component.ts:48",{"_index":730,"title":{},"body":{"components/EditComponent.html":{}}}],["src/app/edit/edit/edit.component.ts:53",{"_index":732,"title":{},"body":{"components/EditComponent.html":{}}}],["src/app/edit/edit/edit.component.ts:57",{"_index":712,"title":{},"body":{"components/EditComponent.html":{}}}],["src/app/edit/edit/edit.component.ts:78",{"_index":717,"title":{},"body":{"components/EditComponent.html":{}}}],["src/app/edit/markdown",{"_index":1237,"title":{},"body":{"components/MarkdownDisplayComponent.html":{},"components/MarkdownEditorComponent.html":{},"coverage.html":{}}}],["src/app/edit/mode.ts",{"_index":2515,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/edit/tag",{"_index":1853,"title":{},"body":{"classes/Tag.html":{},"components/TagSelectionComponent.html":{},"coverage.html":{}}}],["src/app/edit/wiki",{"_index":2359,"title":{},"body":{"components/WikiEntryEditorComponent.html":{},"coverage.html":{}}}],["src/app/helper/capitalize",{"_index":2453,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/helper/hash",{"_index":1038,"title":{},"body":{"classes/HashHelper.html":{},"coverage.html":{}}}],["src/app/helper/marked.pipe.ts",{"_index":1276,"title":{},"body":{"pipes/MarkedPipe.html":{},"coverage.html":{}}}],["src/app/helper/marked.pipe.ts:18",{"_index":1283,"title":{},"body":{"pipes/MarkedPipe.html":{}}}],["src/app/helper/text",{"_index":1921,"title":{},"body":{"pipes/TextLimitPipe.html":{},"coverage.html":{}}}],["src/app/models/artifact.ts",{"_index":283,"title":{},"body":{"classes/Artifact.html":{},"coverage.html":{}}}],["src/app/models/artifact.ts:11",{"_index":295,"title":{},"body":{"classes/Artifact.html":{}}}],["src/app/models/artifact.ts:15",{"_index":293,"title":{},"body":{"classes/Artifact.html":{}}}],["src/app/models/basic",{"_index":443,"title":{},"body":{"classes/BasicEntry.html":{},"classes/BasicUserInfo.html":{},"coverage.html":{}}}],["src/app/models/builders/artifact",{"_index":310,"title":{},"body":{"classes/ArtifactBuilder.html":{},"coverage.html":{}}}],["src/app/models/builders/basic",{"_index":455,"title":{},"body":{"classes/BasicEntryBuilder.html":{},"coverage.html":{}}}],["src/app/models/builders/collection",{"_index":521,"title":{},"body":{"classes/CollectionBuilder.html":{},"coverage.html":{}}}],["src/app/models/builders/edit",{"_index":670,"title":{},"body":{"classes/EditBuilder.html":{},"coverage.html":{}}}],["src/app/models/builders/museum",{"_index":1399,"title":{},"body":{"classes/MuseumBuilder.html":{},"coverage.html":{}}}],["src/app/models/builders/prototype",{"_index":1639,"title":{},"body":{"classes/PrototypeBuilder.html":{},"coverage.html":{}}}],["src/app/models/builders/wiki",{"_index":2344,"title":{},"body":{"classes/WikiEntryBuilder.html":{},"coverage.html":{}}}],["src/app/models/collection.ts",{"_index":504,"title":{},"body":{"classes/Collection.html":{},"coverage.html":{}}}],["src/app/models/collection.ts:11",{"_index":512,"title":{},"body":{"classes/Collection.html":{}}}],["src/app/models/collection.ts:15",{"_index":508,"title":{},"body":{"classes/Collection.html":{}}}],["src/app/models/edit.ts",{"_index":634,"title":{},"body":{"classes/Edit.html":{},"coverage.html":{}}}],["src/app/models/edit.ts:13",{"_index":660,"title":{},"body":{"classes/Edit.html":{}}}],["src/app/models/edit.ts:17",{"_index":666,"title":{},"body":{"classes/Edit.html":{}}}],["src/app/models/edit.ts:21",{"_index":651,"title":{},"body":{"classes/Edit.html":{}}}],["src/app/models/edit.ts:26",{"_index":647,"title":{},"body":{"classes/Edit.html":{}}}],["src/app/models/edit.ts:31",{"_index":653,"title":{},"body":{"classes/Edit.html":{}}}],["src/app/models/edit.ts:36",{"_index":661,"title":{},"body":{"classes/Edit.html":{}}}],["src/app/models/edit.ts:41",{"_index":642,"title":{},"body":{"classes/Edit.html":{}}}],["src/app/models/edit.ts:46",{"_index":654,"title":{},"body":{"classes/Edit.html":{}}}],["src/app/models/edit.ts:50",{"_index":662,"title":{},"body":{"classes/Edit.html":{}}}],["src/app/models/museum.ts",{"_index":1384,"title":{},"body":{"classes/Museum.html":{},"coverage.html":{}}}],["src/app/models/museum.ts:11",{"_index":1385,"title":{},"body":{"classes/Museum.html":{}}}],["src/app/models/museum.ts:32",{"_index":1388,"title":{},"body":{"classes/Museum.html":{}}}],["src/app/models/user.ts",{"_index":1936,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/app/models/user.ts:13",{"_index":1940,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:17",{"_index":1941,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:21",{"_index":1938,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:25",{"_index":1939,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:29",{"_index":1937,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/wiki",{"_index":2336,"title":{},"body":{"classes/WikiEntry.html":{},"coverage.html":{}}}],["src/app/models/wrapper.ts",{"_index":2424,"title":{},"body":{"classes/Wrapper.html":{},"coverage.html":{}}}],["src/app/models/wrapper.ts:11",{"_index":2435,"title":{},"body":{"classes/Wrapper.html":{}}}],["src/app/services/config/project",{"_index":1540,"title":{},"body":{"injectables/ProjectConfigService.html":{},"coverage.html":{}}}],["src/app/services/config/server",{"_index":1836,"title":{},"body":{"injectables/ServerConfigService.html":{},"coverage.html":{}}}],["src/app/services/edit.service.ts",{"_index":871,"title":{},"body":{"injectables/EditService.html":{},"coverage.html":{}}}],["src/app/services/edit.service.ts:26",{"_index":885,"title":{},"body":{"injectables/EditService.html":{}}}],["src/app/services/edit.service.ts:31",{"_index":877,"title":{},"body":{"injectables/EditService.html":{}}}],["src/app/services/edit.service.ts:55",{"_index":882,"title":{},"body":{"injectables/EditService.html":{}}}],["src/app/services/edit.service.ts:70",{"_index":880,"title":{},"body":{"injectables/EditService.html":{}}}],["src/app/services/get",{"_index":1028,"title":{},"body":{"injectables/GetByCategoryService.html":{},"coverage.html":{}}}],["src/app/services/mocker.ts",{"_index":1289,"title":{},"body":{"classes/Mocker.html":{},"coverage.html":{}}}],["src/app/services/mocker.ts:15",{"_index":1299,"title":{},"body":{"classes/Mocker.html":{}}}],["src/app/services/mocker.ts:19",{"_index":1302,"title":{},"body":{"classes/Mocker.html":{}}}],["src/app/services/mocker.ts:23",{"_index":1301,"title":{},"body":{"classes/Mocker.html":{}}}],["src/app/services/mocker.ts:30",{"_index":1309,"title":{},"body":{"classes/Mocker.html":{}}}],["src/app/services/mocker.ts:37",{"_index":1306,"title":{},"body":{"classes/Mocker.html":{}}}],["src/app/services/mocker.ts:49",{"_index":1307,"title":{},"body":{"classes/Mocker.html":{}}}],["src/app/services/mocker.ts:60",{"_index":1304,"title":{},"body":{"classes/Mocker.html":{}}}],["src/app/services/object",{"_index":1550,"title":{},"body":{"classes/ProtoArtifact.html":{},"classes/ProtoCollection.html":{},"classes/ProtoEdit.html":{},"classes/ProtoMuseum.html":{},"classes/ProtoUser.html":{},"coverage.html":{}}}],["src/app/services/previous",{"_index":1481,"title":{},"body":{"injectables/PreviousRouteService.html":{},"coverage.html":{}}}],["src/app/services/server",{"_index":1842,"title":{},"body":{"classes/ServerResponse.html":{},"coverage.html":{}}}],["src/app/services/user/login",{"_index":1184,"title":{},"body":{"guards/LoginGuardService.html":{},"coverage.html":{}}}],["src/app/services/user/login.service.ts",{"_index":1209,"title":{},"body":{"injectables/LoginService.html":{},"coverage.html":{}}}],["src/app/services/user/login.service.ts:22",{"_index":1214,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/services/user/login.service.ts:40",{"_index":1225,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/services/user/login.service.ts:49",{"_index":1222,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/services/user/login.service.ts:61",{"_index":1217,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/services/user/login.service.ts:73",{"_index":1227,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/services/user/user",{"_index":2058,"title":{},"body":{"injectables/UserInfoService.html":{},"coverage.html":{}}}],["src/app/services/wiki",{"_index":366,"title":{},"body":{"injectables/ArtifactService.html":{},"injectables/CollectionService.html":{},"injectables/MuseumService.html":{},"coverage.html":{}}}],["src/app/static/about/about.component.ts",{"_index":10,"title":{},"body":{"components/AboutComponent.html":{},"coverage.html":{}}}],["src/app/static/about/about.component.ts:17",{"_index":31,"title":{},"body":{"components/AboutComponent.html":{}}}],["src/app/static/confirmation",{"_index":581,"title":{},"body":{"components/ConfirmationModalComponent.html":{},"coverage.html":{}}}],["src/app/static/footer/footer.component.ts",{"_index":1003,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{}}}],["src/app/static/footer/footer.component.ts:12",{"_index":1009,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/static/home/home.component.ts",{"_index":1046,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/static/home/home.component.ts:18",{"_index":1050,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/static/loading/loading.component.ts",{"_index":1063,"title":{},"body":{"components/LoadingComponent.html":{},"coverage.html":{}}}],["src/app/static/loading/loading.component.ts:19",{"_index":1075,"title":{},"body":{"components/LoadingComponent.html":{}}}],["src/app/static/loading/loading.component.ts:23",{"_index":1073,"title":{},"body":{"components/LoadingComponent.html":{}}}],["src/app/static/loading/loading.component.ts:28",{"_index":1083,"title":{},"body":{"components/LoadingComponent.html":{}}}],["src/app/static/loading/loading.component.ts:32",{"_index":1071,"title":{},"body":{"components/LoadingComponent.html":{}}}],["src/app/static/loading/loading.component.ts:45",{"_index":1077,"title":{},"body":{"components/LoadingComponent.html":{}}}],["src/app/static/modal",{"_index":1332,"title":{},"body":{"components/ModalMessageComponent.html":{},"coverage.html":{}}}],["src/app/static/navigation",{"_index":1439,"title":{},"body":{"components/NavigationBarComponent.html":{},"coverage.html":{}}}],["src/app/static/page",{"_index":1474,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["src/app/static/reset",{"_index":1738,"title":{},"body":{"components/ResetPasswordModalComponent.html":{},"coverage.html":{}}}],["src/app/static/search/search",{"_index":1787,"title":{},"body":{"components/SearchInCategoryComponent.html":{},"coverage.html":{}}}],["src/app/static/search/search/search.component.ts",{"_index":1749,"title":{},"body":{"components/SearchComponent.html":{},"coverage.html":{}}}],["src/app/static/search/search/search.component.ts:18",{"_index":1775,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/static/search/search/search.component.ts:23",{"_index":1777,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/static/search/search/search.component.ts:28",{"_index":1773,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/static/search/search/search.component.ts:30",{"_index":1772,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/static/search/search/search.component.ts:35",{"_index":1761,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/static/search/search/search.component.ts:39",{"_index":1760,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/static/search/search/search.component.ts:52",{"_index":1764,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/static/search/search/search.component.ts:60",{"_index":1768,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/static/search/search/search.component.ts:68",{"_index":1766,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/user/login/login.component.ts",{"_index":1086,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/user/login/login.component.ts:125",{"_index":1119,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/user/login/login.component.ts:136",{"_index":1110,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/user/login/login.component.ts:161",{"_index":1121,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/user/login/login.component.ts:28",{"_index":1127,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/user/login/login.component.ts:32",{"_index":1125,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/user/login/login.component.ts:37",{"_index":1093,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/user/login/login.component.ts:59",{"_index":1105,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/user/login/login.component.ts:78",{"_index":1103,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/user/registration/exampledescription.ts",{"_index":2464,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/user/registration/registration.component.ts",{"_index":1652,"title":{},"body":{"components/RegistrationComponent.html":{},"coverage.html":{}}}],["src/app/user/registration/registration.component.ts:140",{"_index":1698,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["src/app/user/registration/registration.component.ts:147",{"_index":1700,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["src/app/user/registration/registration.component.ts:154",{"_index":1702,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["src/app/user/registration/registration.component.ts:161",{"_index":1704,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["src/app/user/registration/registration.component.ts:24",{"_index":1684,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["src/app/user/registration/registration.component.ts:28",{"_index":1681,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["src/app/user/registration/registration.component.ts:33",{"_index":1683,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["src/app/user/registration/registration.component.ts:37",{"_index":1679,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["src/app/user/registration/registration.component.ts:42",{"_index":1695,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["src/app/user/registration/registration.component.ts:59",{"_index":1666,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["src/app/user/registration/registration.component.ts:80",{"_index":1673,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["src/app/user/registration/registration.component.ts:90",{"_index":1668,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["src/app/user/registration/registration.component.ts:99",{"_index":1670,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["src/app/user/user",{"_index":1947,"title":{},"body":{"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{}}}],["src/app/view/collection",{"_index":531,"title":{},"body":{"components/CollectionListComponent.html":{},"coverage.html":{}}}],["src/app/view/entry",{"_index":904,"title":{},"body":{"components/EntryListComponent.html":{},"coverage.html":{}}}],["src/app/view/museum",{"_index":1404,"title":{},"body":{"components/MuseumListComponent.html":{},"coverage.html":{}}}],["src/app/view/view",{"_index":2256,"title":{},"body":{"components/ViewEditComponent.html":{},"coverage.html":{}}}],["src/app/view/view/view.component.ts",{"_index":2190,"title":{},"body":{"components/ViewComponent.html":{},"coverage.html":{}}}],["src/app/view/view/view.component.ts:104",{"_index":2212,"title":{},"body":{"components/ViewComponent.html":{}}}],["src/app/view/view/view.component.ts:107",{"_index":2205,"title":{},"body":{"components/ViewComponent.html":{}}}],["src/app/view/view/view.component.ts:192",{"_index":2211,"title":{},"body":{"components/ViewComponent.html":{}}}],["src/app/view/view/view.component.ts:200",{"_index":2210,"title":{},"body":{"components/ViewComponent.html":{}}}],["src/app/view/view/view.component.ts:34",{"_index":2230,"title":{},"body":{"components/ViewComponent.html":{}}}],["src/app/view/view/view.component.ts:38",{"_index":2221,"title":{},"body":{"components/ViewComponent.html":{}}}],["src/app/view/view/view.component.ts:43",{"_index":2223,"title":{},"body":{"components/ViewComponent.html":{}}}],["src/app/view/view/view.component.ts:47",{"_index":2220,"title":{},"body":{"components/ViewComponent.html":{}}}],["src/app/view/view/view.component.ts:52",{"_index":2216,"title":{},"body":{"components/ViewComponent.html":{}}}],["src/app/view/view/view.component.ts:57",{"_index":2224,"title":{},"body":{"components/ViewComponent.html":{}}}],["src/app/view/view/view.component.ts:62",{"_index":2214,"title":{},"body":{"components/ViewComponent.html":{}}}],["src/app/view/view/view.component.ts:67",{"_index":2213,"title":{},"body":{"components/ViewComponent.html":{}}}],["src/app/view/view/view.component.ts:73",{"_index":2217,"title":{},"body":{"components/ViewComponent.html":{}}}],["src/app/view/view/view.component.ts:77",{"_index":2225,"title":{},"body":{"components/ViewComponent.html":{}}}],["src/app/view/view/view.component.ts:82",{"_index":2219,"title":{},"body":{"components/ViewComponent.html":{}}}],["src/app/view/view/view.component.ts:86",{"_index":2227,"title":{},"body":{"components/ViewComponent.html":{}}}],["src/app/view/view/view.component.ts:90",{"_index":2228,"title":{},"body":{"components/ViewComponent.html":{}}}],["src/app/view/view/view.component.ts:94",{"_index":2226,"title":{},"body":{"components/ViewComponent.html":{}}}],["src/app/view/view/view.component.ts:99",{"_index":2215,"title":{},"body":{"components/ViewComponent.html":{}}}],["src/app/view/wiki",{"_index":2398,"title":{},"body":{"components/WikiEntryViewComponent.html":{},"coverage.html":{}}}],["src/environments/environment.prod.ts",{"_index":2471,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":2473,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":2474,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["stable",{"_index":2530,"title":{},"body":{"index.html":{}}}],["stands",{"_index":463,"title":{},"body":{"classes/BasicEntryBuilder.html":{}}}],["start",{"_index":1450,"title":{},"body":{"components/NavigationBarComponent.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":2520,"title":{"index.html":{}},"body":{}}],["starts",{"_index":1887,"title":{},"body":{"components/TagSelectionComponent.html":{},"components/ViewComponent.html":{}}}],["state",{"_index":1194,"title":{},"body":{"guards/LoginGuardService.html":{}}}],["statements",{"_index":2440,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":35,"title":{},"body":{"components/AboutComponent.html":{},"components/FooterComponent.html":{},"classes/HashHelper.html":{},"components/HomeComponent.html":{},"classes/Mocker.html":{},"classes/Museum.html":{},"components/PageNotFoundComponent.html":{},"classes/ProjectConfig.html":{},"classes/ProtoArtifact.html":{},"classes/ProtoCollection.html":{},"classes/ProtoEdit.html":{},"classes/ProtoUser.html":{},"classes/PrototypeBuilder.html":{},"components/RegistrationComponent.html":{},"classes/ServerCannotConnect.html":{},"classes/ServerConfig.html":{},"classes/Tag.html":{},"components/WikiEntryEditorComponent.html":{}}}],["static/about/about.component",{"_index":168,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["static/confirmation",{"_index":243,"title":{},"body":{"modules/AppModule.html":{},"components/UserMuseumListComponent.html":{}}}],["static/footer/footer.component",{"_index":225,"title":{},"body":{"modules/AppModule.html":{}}}],["static/home/home.component",{"_index":166,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["static/loading/loading.component",{"_index":185,"title":{},"body":{"modules/AppModule.html":{}}}],["static/modal",{"_index":204,"title":{},"body":{"modules/AppModule.html":{},"components/EditOrCreateComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryViewComponent.html":{}}}],["static/navigation",{"_index":175,"title":{},"body":{"modules/AppModule.html":{}}}],["static/page",{"_index":169,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["static/reset",{"_index":246,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{}}}],["static/search/search",{"_index":176,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["static/search/search/search.component",{"_index":167,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["status",{"_index":676,"title":{},"body":{"classes/EditBuilder.html":{},"components/EditOrCreateComponent.html":{},"components/LoadingComponent.html":{},"components/NavigationBarComponent.html":{},"components/UserEditListComponent.html":{},"injectables/UserInfoService.html":{},"components/UserMuseumListComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{}}}],["statuses",{"_index":1293,"title":{},"body":{"classes/Mocker.html":{}}}],["stephenhay",{"_index":2373,"title":{},"body":{"components/WikiEntryEditorComponent.html":{}}}],["still",{"_index":47,"title":{},"body":{"components/AboutComponent.html":{}}}],["store",{"_index":1997,"title":{},"body":{"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"components/ViewComponent.html":{}}}],["stored",{"_index":493,"title":{},"body":{"classes/BasicUserInfo.html":{},"classes/Edit.html":{},"classes/User.html":{},"classes/Wrapper.html":{},"index.html":{}}}],["stores",{"_index":570,"title":{},"body":{"injectables/CollectionService.html":{},"components/CreateComponent.html":{},"components/EditOrCreateComponent.html":{},"guards/LoginGuardService.html":{},"injectables/ServerConfigService.html":{},"injectables/UserInfoService.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{}}}],["storing",{"_index":2084,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["str",{"_index":2518,"title":{},"body":{"miscellaneous/functions.html":{}}}],["straight",{"_index":1669,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["string",{"_index":132,"title":{},"body":{"components/AppComponent.html":{},"classes/Artifact.html":{},"classes/ArtifactBuilder.html":{},"injectables/ArtifactService.html":{},"classes/BasicEntry.html":{},"classes/BasicEntryBuilder.html":{},"classes/BasicUserInfo.html":{},"classes/Collection.html":{},"classes/CollectionBuilder.html":{},"components/CollectionListComponent.html":{},"injectables/CollectionService.html":{},"components/ConfirmationModalComponent.html":{},"components/CreateComponent.html":{},"classes/Edit.html":{},"classes/EditBuilder.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"injectables/EditService.html":{},"components/EntryListComponent.html":{},"injectables/GetByCategoryService.html":{},"classes/HashHelper.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/MarkdownDisplayComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/ModalMessageComponent.html":{},"classes/Museum.html":{},"classes/MuseumBuilder.html":{},"components/MuseumListComponent.html":{},"injectables/MuseumService.html":{},"components/NavigationBarComponent.html":{},"classes/ProtoEdit.html":{},"components/ResetPasswordModalComponent.html":{},"components/SearchComponent.html":{},"classes/ServerConfig.html":{},"classes/ServerResponse.html":{},"classes/Tag.html":{},"pipes/TextLimitPipe.html":{},"classes/User.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"classes/WikiEntry.html":{},"classes/WikiEntryBuilder.html":{},"components/WikiEntryEditorComponent.html":{},"components/WikiEntryViewComponent.html":{},"miscellaneous/functions.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/CollectionListComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/CreateComponent.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"components/EntryListComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownDisplayComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/ModalMessageComponent.html":{},"components/MuseumListComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordModalComponent.html":{},"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{},"components/TagSelectionComponent.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryEditorComponent.html":{},"components/WikiEntryViewComponent.html":{}}}],["styleurls",{"_index":23,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/CollectionListComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/CreateComponent.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"components/EntryListComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownDisplayComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/ModalMessageComponent.html":{},"components/MuseumListComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordModalComponent.html":{},"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{},"components/TagSelectionComponent.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryEditorComponent.html":{},"components/WikiEntryViewComponent.html":{}}}],["subcomponents",{"_index":1051,"title":{},"body":{"components/HomeComponent.html":{}}}],["subject",{"_index":2093,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["sublist",{"_index":2229,"title":{},"body":{"components/ViewComponent.html":{}}}],["sublistname",{"_index":2200,"title":{},"body":{"components/ViewComponent.html":{}}}],["sublistnamereference",{"_index":2201,"title":{},"body":{"components/ViewComponent.html":{}}}],["submit",{"_index":775,"title":{},"body":{"components/EditOrCreateComponent.html":{},"components/ResetPasswordModalComponent.html":{}}}],["submitted",{"_index":795,"title":{},"body":{"components/EditOrCreateComponent.html":{},"classes/ProtoUser.html":{},"classes/User.html":{},"components/UserEditListComponent.html":{}}}],["subscribe((res",{"_index":2307,"title":{},"body":{"components/ViewEditComponent.html":{}}}],["success",{"_index":1152,"title":{},"body":{"components/LoginComponent.html":{},"components/ModalMessageComponent.html":{},"classes/ServerResponse.html":{}}}],["success/failure",{"_index":1847,"title":{},"body":{"classes/ServerResponse.html":{}}}],["successful",{"_index":785,"title":{},"body":{"components/EditOrCreateComponent.html":{},"components/LoginComponent.html":{},"components/ModalMessageComponent.html":{},"components/RegistrationComponent.html":{},"classes/ServerResponse.html":{},"injectables/UserInfoService.html":{}}}],["successfully",{"_index":1065,"title":{},"body":{"components/LoadingComponent.html":{}}}],["super(artifact",{"_index":358,"title":{},"body":{"classes/ArtifactBuilder.html":{}}}],["super(collection",{"_index":529,"title":{},"body":{"classes/CollectionBuilder.html":{}}}],["super(museum",{"_index":1403,"title":{},"body":{"classes/MuseumBuilder.html":{}}}],["super(name",{"_index":1392,"title":{},"body":{"classes/Museum.html":{},"classes/WikiEntry.html":{}}}],["super(self?.name",{"_index":513,"title":{},"body":{"classes/Collection.html":{}}}],["super(type",{"_index":2351,"title":{},"body":{"classes/WikiEntryBuilder.html":{}}}],["super(username",{"_index":1945,"title":{},"body":{"classes/User.html":{}}}],["support",{"_index":2568,"title":{},"body":{"modules.html":{}}}],["supports",{"_index":457,"title":{},"body":{"classes/BasicEntryBuilder.html":{},"components/EntryListComponent.html":{},"components/MarkdownEditorComponent.html":{}}}],["sure",{"_index":2155,"title":{},"body":{"components/UserMuseumListComponent.html":{}}}],["svg",{"_index":1369,"title":{},"body":{"components/ModalMessageComponent.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"dependencies.html":{},"modules.html":{}}}],["switch",{"_index":2321,"title":{},"body":{"components/ViewEditComponent.html":{}}}],["switchmap",{"_index":1797,"title":{},"body":{"components/SearchInCategoryComponent.html":{}}}],["system",{"_index":2556,"title":{},"body":{"index.html":{}}}],["t",{"_index":341,"title":{},"body":{"classes/ArtifactBuilder.html":{},"classes/BasicEntryBuilder.html":{},"classes/CollectionBuilder.html":{},"classes/MuseumBuilder.html":{},"classes/WikiEntryBuilder.html":{},"classes/Wrapper.html":{}}}],["table",{"_index":2001,"title":{},"body":{"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2477,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":104,"title":{"classes/Tag.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"classes/Collection.html":{},"components/CollectionListComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/CreateComponent.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"components/EntryListComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownDisplayComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/ModalMessageComponent.html":{},"components/MuseumListComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordModalComponent.html":{},"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{},"classes/Tag.html":{},"components/TagSelectionComponent.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryEditorComponent.html":{},"components/WikiEntryViewComponent.html":{},"coverage.html":{}}}],["tag(entry",{"_index":1865,"title":{},"body":{"classes/Tag.html":{}}}],["tag.name",{"_index":1920,"title":{},"body":{"components/TagSelectionComponent.html":{}}}],["tag.selected",{"_index":1917,"title":{},"body":{"components/TagSelectionComponent.html":{}}}],["tags",{"_index":1868,"title":{},"body":{"components/TagSelectionComponent.html":{}}}],["tagselection",{"_index":771,"title":{},"body":{"components/EditOrCreateComponent.html":{}}}],["tagselectioncomponent",{"_index":103,"title":{"components/TagSelectionComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CollectionListComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/CreateComponent.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"components/EntryListComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownDisplayComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/ModalMessageComponent.html":{},"components/MuseumListComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordModalComponent.html":{},"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{},"components/TagSelectionComponent.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryEditorComponent.html":{},"components/WikiEntryViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["take",{"_index":1052,"title":{},"body":{"components/HomeComponent.html":{},"components/UserEditListComponent.html":{},"index.html":{}}}],["takes",{"_index":1079,"title":{},"body":{"components/LoadingComponent.html":{}}}],["target",{"_index":1461,"title":{},"body":{"components/NavigationBarComponent.html":{},"components/ViewComponent.html":{}}}],["team",{"_index":1006,"title":{},"body":{"components/FooterComponent.html":{}}}],["telling",{"_index":1101,"title":{},"body":{"components/LoginComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/CollectionListComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/CreateComponent.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"components/EntryListComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownDisplayComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/ModalMessageComponent.html":{},"components/MuseumListComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordModalComponent.html":{},"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{},"components/TagSelectionComponent.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryEditorComponent.html":{},"components/WikiEntryViewComponent.html":{}}}],["templateurl",{"_index":25,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/CollectionListComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/CreateComponent.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"components/EntryListComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownDisplayComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/ModalMessageComponent.html":{},"components/MuseumListComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordModalComponent.html":{},"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{},"components/TagSelectionComponent.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryEditorComponent.html":{},"components/WikiEntryViewComponent.html":{}}}],["test",{"_index":1324,"title":{},"body":{"classes/Mocker.html":{},"classes/ProjectConfig.html":{}}}],["testing",{"_index":254,"title":{},"body":{"classes/AppPage.html":{},"classes/Mocker.html":{},"classes/ProjectConfig.html":{},"classes/ServerConfig.html":{},"miscellaneous/variables.html":{}}}],["testingmode",{"_index":1505,"title":{},"body":{"classes/ProjectConfig.html":{}}}],["tests",{"_index":2582,"title":{},"body":{"miscellaneous/variables.html":{}}}],["text",{"_index":303,"title":{},"body":{"classes/Artifact.html":{},"classes/Collection.html":{},"components/CollectionListComponent.html":{},"components/EntryListComponent.html":{},"classes/HashHelper.html":{},"components/MarkdownDisplayComponent.html":{},"components/MarkdownEditorComponent.html":{},"pipes/MarkedPipe.html":{},"classes/Museum.html":{},"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{},"pipes/TextLimitPipe.html":{},"classes/WikiEntry.html":{},"miscellaneous/variables.html":{}}}],["text.includes(keyword.tolowercase",{"_index":984,"title":{},"body":{"components/EntryListComponent.html":{}}}],["text.length",{"_index":1934,"title":{},"body":{"pipes/TextLimitPipe.html":{}}}],["text.substring(0",{"_index":1935,"title":{},"body":{"pipes/TextLimitPipe.html":{}}}],["textlimit",{"_index":995,"title":{},"body":{"components/EntryListComponent.html":{},"pipes/TextLimitPipe.html":{}}}],["textlimitpipe",{"_index":151,"title":{"pipes/TextLimitPipe.html":{}},"body":{"modules/AppModule.html":{},"pipes/TextLimitPipe.html":{},"coverage.html":{},"overview.html":{}}}],["then((res",{"_index":2104,"title":{},"body":{"injectables/UserInfoService.html":{},"components/UserProfileComponent.html":{},"components/WikiEntryViewComponent.html":{}}}],["there's",{"_index":727,"title":{},"body":{"components/EditComponent.html":{},"components/LoginComponent.html":{},"components/NavigationBarComponent.html":{},"components/SearchComponent.html":{}}}],["thing",{"_index":1311,"title":{},"body":{"classes/Mocker.html":{}}}],["this.activatedroute.parammap.subscribe((params",{"_index":2311,"title":{},"body":{"components/ViewEditComponent.html":{}}}],["this.activeurl",{"_index":1833,"title":{},"body":{"classes/ServerConfig.html":{}}}],["this.adjustnavbarbasedonloginstatus(loggedin",{"_index":1468,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["this.adjustnavbarbasedonloginstatus(userinfoservice.isloggedin",{"_index":1466,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["this.artifact",{"_index":553,"title":{},"body":{"components/CollectionListComponent.html":{},"components/ViewComponent.html":{}}}],["this.artifact.collectionlist",{"_index":549,"title":{},"body":{"components/CollectionListComponent.html":{}}}],["this.artifact.collectionlist.length",{"_index":550,"title":{},"body":{"components/CollectionListComponent.html":{}}}],["this.artifacts",{"_index":519,"title":{},"body":{"classes/Collection.html":{}}}],["this.artifactservice",{"_index":2420,"title":{},"body":{"components/WikiEntryViewComponent.html":{}}}],["this.artifactservice.addartifact(newartifact",{"_index":867,"title":{},"body":{"components/EditOrCreateComponent.html":{}}}],["this.artifactservice.getartifact(id",{"_index":1037,"title":{},"body":{"injectables/GetByCategoryService.html":{}}}],["this.artifactservice.getartifact(this.id).subscribe((res",{"_index":2252,"title":{},"body":{"components/ViewComponent.html":{}}}],["this.basicuserinfo",{"_index":2098,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["this.candelete",{"_index":2417,"title":{},"body":{"components/WikiEntryViewComponent.html":{}}}],["this.cansubmit",{"_index":846,"title":{},"body":{"components/EditOrCreateComponent.html":{}}}],["this.category",{"_index":630,"title":{},"body":{"components/CreateComponent.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"components/EntryListComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryViewComponent.html":{}}}],["this.category.tolowercase",{"_index":978,"title":{},"body":{"components/EntryListComponent.html":{}}}],["this.changedentry",{"_index":2319,"title":{},"body":{"components/ViewEditComponent.html":{}}}],["this.changedentry.id",{"_index":2306,"title":{},"body":{"components/ViewEditComponent.html":{}}}],["this.clearcookies",{"_index":2105,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["this.collection",{"_index":2248,"title":{},"body":{"components/ViewComponent.html":{}}}],["this.collectionlist",{"_index":1393,"title":{},"body":{"classes/Museum.html":{}}}],["this.collectionservice.addcollection(newcollection",{"_index":861,"title":{},"body":{"components/EditOrCreateComponent.html":{}}}],["this.collectionservice.getcollection(id",{"_index":1036,"title":{},"body":{"injectables/GetByCategoryService.html":{}}}],["this.collectionservice.getcollection(this.id).subscribe",{"_index":2246,"title":{},"body":{"components/ViewComponent.html":{}}}],["this.columnnametofieldname[column",{"_index":2029,"title":{},"body":{"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{}}}],["this.columnsortstatus",{"_index":2015,"title":{},"body":{"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{}}}],["this.columnsortstatus[column",{"_index":2017,"title":{},"body":{"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{}}}],["this.columnstosort",{"_index":2016,"title":{},"body":{"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{}}}],["this.config",{"_index":829,"title":{},"body":{"components/EditOrCreateComponent.html":{},"classes/ProjectConfig.html":{},"components/TagSelectionComponent.html":{},"components/ViewComponent.html":{}}}],["this.config.islogging",{"_index":831,"title":{},"body":{"components/EditOrCreateComponent.html":{},"components/TagSelectionComponent.html":{}}}],["this.config?.islogging",{"_index":2240,"title":{},"body":{"components/ViewComponent.html":{}}}],["this.content",{"_index":2243,"title":{},"body":{"components/ViewComponent.html":{}}}],["this.contentparents",{"_index":2250,"title":{},"body":{"components/ViewComponent.html":{}}}],["this.contentsublist",{"_index":2244,"title":{},"body":{"components/ViewComponent.html":{}}}],["this.cookieservice.delete('password",{"_index":2109,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["this.cookieservice.delete('username",{"_index":2108,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["this.cookieservice.set('password",{"_index":2116,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["this.cookieservice.set('username",{"_index":2114,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["this.currententry",{"_index":2309,"title":{},"body":{"components/ViewEditComponent.html":{}}}],["this.currentusername",{"_index":2304,"title":{},"body":{"components/ViewEditComponent.html":{}}}],["this.default_search_category",{"_index":1782,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.description",{"_index":2343,"title":{},"body":{"classes/WikiEntry.html":{}}}],["this.descriptionformcontrol.value",{"_index":1268,"title":{},"body":{"components/MarkdownEditorComponent.html":{}}}],["this.display",{"_index":552,"title":{},"body":{"components/CollectionListComponent.html":{}}}],["this.displaycurrent",{"_index":2323,"title":{},"body":{"components/ViewEditComponent.html":{}}}],["this.displaylist",{"_index":975,"title":{},"body":{"components/EntryListComponent.html":{}}}],["this.displaylist.filter((entry",{"_index":980,"title":{},"body":{"components/EntryListComponent.html":{}}}],["this.edit",{"_index":694,"title":{},"body":{"classes/EditBuilder.html":{},"components/ViewEditComponent.html":{}}}],["this.edit.approvalstatus",{"_index":701,"title":{},"body":{"classes/EditBuilder.html":{}}}],["this.edit.artifact",{"_index":698,"title":{},"body":{"classes/EditBuilder.html":{}}}],["this.edit.category",{"_index":697,"title":{},"body":{"classes/EditBuilder.html":{},"components/ViewEditComponent.html":{}}}],["this.edit.collection",{"_index":699,"title":{},"body":{"classes/EditBuilder.html":{}}}],["this.edit.date",{"_index":703,"title":{},"body":{"classes/EditBuilder.html":{}}}],["this.edit.id",{"_index":695,"title":{},"body":{"classes/EditBuilder.html":{}}}],["this.edit.museum",{"_index":700,"title":{},"body":{"classes/EditBuilder.html":{}}}],["this.edit.reviewerusername",{"_index":702,"title":{},"body":{"classes/EditBuilder.html":{}}}],["this.edit.type",{"_index":696,"title":{},"body":{"classes/EditBuilder.html":{}}}],["this.edit.type.tolowercase",{"_index":2318,"title":{},"body":{"components/ViewEditComponent.html":{}}}],["this.edit[this.category",{"_index":2320,"title":{},"body":{"components/ViewEditComponent.html":{}}}],["this.editid",{"_index":2312,"title":{},"body":{"components/ViewEditComponent.html":{}}}],["this.editlist.sort",{"_index":2030,"title":{},"body":{"components/UserEditListComponent.html":{}}}],["this.editservice.getedit(this.editid).subscribe((res",{"_index":2314,"title":{},"body":{"components/ViewEditComponent.html":{}}}],["this.editservice.reviewedit(entry",{"_index":2043,"title":{},"body":{"components/UserEditListComponent.html":{},"components/ViewEditComponent.html":{}}}],["this.email",{"_index":1946,"title":{},"body":{"classes/User.html":{}}}],["this.entry",{"_index":362,"title":{},"body":{"classes/ArtifactBuilder.html":{},"classes/BasicEntryBuilder.html":{},"classes/MuseumBuilder.html":{},"classes/WikiEntryBuilder.html":{}}}],["this.entry.artifacts",{"_index":530,"title":{},"body":{"classes/CollectionBuilder.html":{}}}],["this.entry.collectionlist",{"_index":361,"title":{},"body":{"classes/ArtifactBuilder.html":{},"classes/MuseumBuilder.html":{}}}],["this.entry.description",{"_index":2354,"title":{},"body":{"classes/WikiEntryBuilder.html":{}}}],["this.entry.id",{"_index":477,"title":{},"body":{"classes/BasicEntryBuilder.html":{}}}],["this.entry.image",{"_index":2353,"title":{},"body":{"classes/WikiEntryBuilder.html":{}}}],["this.entry.introduction",{"_index":2352,"title":{},"body":{"classes/WikiEntryBuilder.html":{}}}],["this.entry.museum",{"_index":360,"title":{},"body":{"classes/ArtifactBuilder.html":{},"classes/CollectionBuilder.html":{}}}],["this.entry.name",{"_index":475,"title":{},"body":{"classes/BasicEntryBuilder.html":{}}}],["this.entry[property",{"_index":2357,"title":{},"body":{"classes/WikiEntryBuilder.html":{}}}],["this.entrylist",{"_index":976,"title":{},"body":{"components/EntryListComponent.html":{}}}],["this.error",{"_index":748,"title":{},"body":{"components/EditComponent.html":{},"components/LoadingComponent.html":{},"components/MuseumListComponent.html":{},"components/TagSelectionComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{}}}],["this.erroredit",{"_index":2327,"title":{},"body":{"components/ViewEditComponent.html":{}}}],["this.existingartifact",{"_index":835,"title":{},"body":{"components/EditOrCreateComponent.html":{}}}],["this.existingcollections",{"_index":1904,"title":{},"body":{"components/TagSelectionComponent.html":{}}}],["this.existingcollections?.foreach((collection",{"_index":1907,"title":{},"body":{"components/TagSelectionComponent.html":{}}}],["this.existingobject",{"_index":757,"title":{},"body":{"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{}}}],["this.fetchcurrent",{"_index":2325,"title":{},"body":{"components/ViewEditComponent.html":{}}}],["this.filterdisplaylist(keywords",{"_index":989,"title":{},"body":{"components/EntryListComponent.html":{}}}],["this.getbycategoryservice",{"_index":751,"title":{},"body":{"components/EditComponent.html":{}}}],["this.getuserinfo",{"_index":2187,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.http",{"_index":576,"title":{},"body":{"injectables/CollectionService.html":{},"injectables/LoginService.html":{},"injectables/MuseumService.html":{}}}],["this.http.get(this.url",{"_index":425,"title":{},"body":{"injectables/ArtifactService.html":{},"injectables/EditService.html":{},"injectables/MuseumService.html":{}}}],["this.http.post",{"_index":426,"title":{},"body":{"injectables/ArtifactService.html":{}}}],["this.http.post(this.url",{"_index":892,"title":{},"body":{"injectables/EditService.html":{},"injectables/LoginService.html":{},"injectables/MuseumService.html":{}}}],["this.id",{"_index":451,"title":{},"body":{"classes/BasicEntry.html":{},"components/EditComponent.html":{},"classes/Tag.html":{},"components/ViewComponent.html":{}}}],["this.id).subscribe",{"_index":753,"title":{},"body":{"components/EditComponent.html":{}}}],["this.idtotag",{"_index":1901,"title":{},"body":{"components/TagSelectionComponent.html":{}}}],["this.idtotag[collection.id",{"_index":1908,"title":{},"body":{"components/TagSelectionComponent.html":{}}}],["this.idtotag[collection.id].selected",{"_index":1909,"title":{},"body":{"components/TagSelectionComponent.html":{}}}],["this.idtotag[tag.id",{"_index":1906,"title":{},"body":{"components/TagSelectionComponent.html":{}}}],["this.image",{"_index":2342,"title":{},"body":{"classes/WikiEntry.html":{}}}],["this.introduction",{"_index":2341,"title":{},"body":{"classes/WikiEntry.html":{}}}],["this.isloggedin",{"_index":2097,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["this.list.sort",{"_index":2162,"title":{},"body":{"components/UserMuseumListComponent.html":{}}}],["this.loading",{"_index":746,"title":{},"body":{"components/EditComponent.html":{},"components/LoadingComponent.html":{},"components/ModalMessageComponent.html":{},"components/MuseumListComponent.html":{},"components/TagSelectionComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{}}}],["this.loadingedit",{"_index":2326,"title":{},"body":{"components/ViewEditComponent.html":{}}}],["this.log",{"_index":1538,"title":{},"body":{"classes/ProjectConfig.html":{}}}],["this.loginevent.asobservable",{"_index":2134,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["this.loginevent.next(false",{"_index":2118,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["this.loginevent.next(true",{"_index":2113,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["this.loginservice.getcompleteuserinfo(this.basicuserinfo",{"_index":2133,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["this.loginservice.login(logincredentials",{"_index":2111,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["this.max_password_length",{"_index":1729,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["this.max_username_length",{"_index":1727,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["this.message",{"_index":1371,"title":{},"body":{"components/ModalMessageComponent.html":{},"classes/ServerResponse.html":{}}}],["this.min_password_length",{"_index":1728,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["this.min_username_length",{"_index":1725,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["this.mock",{"_index":1539,"title":{},"body":{"classes/ProjectConfig.html":{}}}],["this.mockwikientry",{"_index":1327,"title":{},"body":{"classes/Mocker.html":{}}}],["this.modal.close(new",{"_index":1746,"title":{},"body":{"components/ResetPasswordModalComponent.html":{}}}],["this.modal.dismiss('user",{"_index":1748,"title":{},"body":{"components/ResetPasswordModalComponent.html":{}}}],["this.modalservice.open(confirmationmodalcomponent",{"_index":2151,"title":{},"body":{"components/UserMuseumListComponent.html":{}}}],["this.modalservice.open(modalmessagecomponent",{"_index":847,"title":{},"body":{"components/EditOrCreateComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryViewComponent.html":{}}}],["this.modalservice.open(resetpasswordmodalcomponent",{"_index":1171,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.mode",{"_index":834,"title":{},"body":{"components/EditOrCreateComponent.html":{}}}],["this.museum",{"_index":518,"title":{},"body":{"classes/Collection.html":{},"components/ViewComponent.html":{}}}],["this.museumid",{"_index":632,"title":{},"body":{"components/CreateComponent.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"components/TagSelectionComponent.html":{}}}],["this.museums",{"_index":1414,"title":{},"body":{"components/MuseumListComponent.html":{}}}],["this.museums.concat(museums",{"_index":1415,"title":{},"body":{"components/MuseumListComponent.html":{}}}],["this.museumservice.addmuseum(newmuseum",{"_index":857,"title":{},"body":{"components/EditOrCreateComponent.html":{}}}],["this.museumservice.deletemuseum(entry.id).then",{"_index":2161,"title":{},"body":{"components/UserMuseumListComponent.html":{}}}],["this.museumservice.getmuseum(id",{"_index":1035,"title":{},"body":{"injectables/GetByCategoryService.html":{}}}],["this.museumservice.getmuseum(this.id).subscribe",{"_index":2239,"title":{},"body":{"components/ViewComponent.html":{}}}],["this.museumservice.getmuseum(this.museumid).subscribe",{"_index":1911,"title":{},"body":{"components/TagSelectionComponent.html":{}}}],["this.museumservice.getmuseumlist().subscribe",{"_index":1413,"title":{},"body":{"components/MuseumListComponent.html":{}}}],["this.name",{"_index":450,"title":{},"body":{"classes/BasicEntry.html":{},"classes/Tag.html":{}}}],["this.navigationbaritemlinks[0",{"_index":1470,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["this.navigationbaritemnames[0",{"_index":1469,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["this.ngonchanges",{"_index":1902,"title":{},"body":{"components/TagSelectionComponent.html":{}}}],["this.openmodalwithpromise(resetpromisewrapper.value",{"_index":1176,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.parentid",{"_index":990,"title":{},"body":{"components/EntryListComponent.html":{}}}],["this.parentname",{"_index":2237,"title":{},"body":{"components/ViewComponent.html":{}}}],["this.parentnamereference[this.viewcategory",{"_index":2238,"title":{},"body":{"components/ViewComponent.html":{}}}],["this.password",{"_index":502,"title":{},"body":{"classes/BasicUserInfo.html":{},"components/LoginComponent.html":{}}}],["this.previewtext",{"_index":1267,"title":{},"body":{"components/MarkdownEditorComponent.html":{}}}],["this.previouscategory",{"_index":1781,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.previousroute.previousroute",{"_index":1137,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.previousroute.topreviousroute",{"_index":1138,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.previousrouteservice.previousroute",{"_index":1207,"title":{},"body":{"guards/LoginGuardService.html":{}}}],["this.previoustext",{"_index":1783,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.previouswikientry",{"_index":2382,"title":{},"body":{"components/WikiEntryEditorComponent.html":{}}}],["this.previouswikientry.description",{"_index":2386,"title":{},"body":{"components/WikiEntryEditorComponent.html":{}}}],["this.previouswikientry.image",{"_index":2385,"title":{},"body":{"components/WikiEntryEditorComponent.html":{}}}],["this.previouswikientry.introduction",{"_index":2384,"title":{},"body":{"components/WikiEntryEditorComponent.html":{}}}],["this.previouswikientry.name",{"_index":2383,"title":{},"body":{"components/WikiEntryEditorComponent.html":{}}}],["this.processpromiseresponse",{"_index":856,"title":{},"body":{"components/EditOrCreateComponent.html":{}}}],["this.projectconfig",{"_index":423,"title":{},"body":{"injectables/ArtifactService.html":{},"injectables/EditService.html":{},"components/EntryListComponent.html":{},"components/LoginComponent.html":{},"injectables/ProjectConfigService.html":{},"components/UserProfileComponent.html":{},"components/ViewEditComponent.html":{}}}],["this.projectconfig.islogging",{"_index":437,"title":{},"body":{"injectables/ArtifactService.html":{},"components/EntryListComponent.html":{},"components/LoginComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewEditComponent.html":{}}}],["this.projectconfig.isusingmockdata",{"_index":897,"title":{},"body":{"injectables/EditService.html":{}}}],["this.projectconfigservice.getprojectconfig",{"_index":830,"title":{},"body":{"components/EditOrCreateComponent.html":{},"components/ViewComponent.html":{}}}],["this.projectconfigservice.getprojectconfig().islogging",{"_index":759,"title":{},"body":{"components/EditComponent.html":{}}}],["this.randomelement(this.categories",{"_index":1317,"title":{},"body":{"classes/Mocker.html":{}}}],["this.randomelement(this.statuses",{"_index":1320,"title":{},"body":{"classes/Mocker.html":{}}}],["this.randomelement(this.types",{"_index":1318,"title":{},"body":{"classes/Mocker.html":{}}}],["this.registrationform",{"_index":1712,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["this.reloadprofile.emit",{"_index":2045,"title":{},"body":{"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{}}}],["this.resetcolumnsortstatus",{"_index":2019,"title":{},"body":{"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{}}}],["this.resetloadingstatus",{"_index":2231,"title":{},"body":{"components/ViewComponent.html":{}}}],["this.reviewedit(entry",{"_index":2042,"title":{},"body":{"components/UserEditListComponent.html":{},"components/ViewEditComponent.html":{}}}],["this.route",{"_index":1498,"title":{},"body":{"injectables/PreviousRouteService.html":{}}}],["this.route.parammap.subscribe((parammap",{"_index":1799,"title":{},"body":{"components/SearchInCategoryComponent.html":{},"components/ViewComponent.html":{}}}],["this.route.parammap.subscribe((params",{"_index":629,"title":{},"body":{"components/CreateComponent.html":{},"components/EditComponent.html":{}}}],["this.router.navigatebyurl('/edit",{"_index":2418,"title":{},"body":{"components/WikiEntryViewComponent.html":{}}}],["this.router.navigatebyurl('/home",{"_index":1160,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.navigatebyurl('/login",{"_index":1719,"title":{},"body":{"components/RegistrationComponent.html":{},"components/UserProfileComponent.html":{}}}],["this.router.navigatebyurl('/register",{"_index":1163,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.navigatebyurl('/user",{"_index":841,"title":{},"body":{"components/EditOrCreateComponent.html":{},"components/LoginComponent.html":{}}}],["this.router.navigatebyurl('/view",{"_index":977,"title":{},"body":{"components/EntryListComponent.html":{},"components/UserEditListComponent.html":{},"components/ViewComponent.html":{}}}],["this.router.navigatebyurl('/view/museum",{"_index":1416,"title":{},"body":{"components/MuseumListComponent.html":{},"components/UserMuseumListComponent.html":{}}}],["this.router.navigatebyurl('search",{"_index":1784,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.router.navigatebyurl('user",{"_index":1711,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["this.router.navigatebyurl(link",{"_index":1471,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["this.router.navigatebyurl(this.route.url.join",{"_index":1500,"title":{},"body":{"injectables/PreviousRouteService.html":{}}}],["this.router.navigatebyurl(url",{"_index":991,"title":{},"body":{"components/EntryListComponent.html":{}}}],["this.search_options[0",{"_index":1771,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.searchcategory",{"_index":1780,"title":{},"body":{"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{}}}],["this.searchtext",{"_index":974,"title":{},"body":{"components/EntryListComponent.html":{},"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{}}}],["this.searchtext).then",{"_index":1785,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.searchtext.split",{"_index":988,"title":{},"body":{"components/EntryListComponent.html":{}}}],["this.searchtext.trim",{"_index":987,"title":{},"body":{"components/EntryListComponent.html":{}}}],["this.selected",{"_index":1864,"title":{},"body":{"classes/Tag.html":{}}}],["this.self",{"_index":476,"title":{},"body":{"classes/BasicEntryBuilder.html":{},"classes/WikiEntryBuilder.html":{}}}],["this.serverconfig",{"_index":574,"title":{},"body":{"injectables/CollectionService.html":{},"injectables/ServerConfigService.html":{}}}],["this.serverconfig.geturl",{"_index":579,"title":{},"body":{"injectables/CollectionService.html":{}}}],["this.serverconfigservice.getserverconfig().geturl",{"_index":422,"title":{},"body":{"injectables/ArtifactService.html":{}}}],["this.settoinput",{"_index":1779,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.sort('date",{"_index":2022,"title":{},"body":{"components/UserEditListComponent.html":{}}}],["this.sortdown",{"_index":2026,"title":{},"body":{"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{}}}],["this.sortuntouched",{"_index":2018,"title":{},"body":{"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{}}}],["this.sortup",{"_index":2025,"title":{},"body":{"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{}}}],["this.sublistname",{"_index":2235,"title":{},"body":{"components/ViewComponent.html":{}}}],["this.sublistnamereference[this.viewcategory",{"_index":2236,"title":{},"body":{"components/ViewComponent.html":{}}}],["this.success",{"_index":1373,"title":{},"body":{"components/ModalMessageComponent.html":{},"classes/ServerResponse.html":{}}}],["this.tags",{"_index":1900,"title":{},"body":{"components/TagSelectionComponent.html":{}}}],["this.tags.foreach(tag",{"_index":1905,"title":{},"body":{"components/TagSelectionComponent.html":{}}}],["this.tagselection.getallselectedtags().length",{"_index":845,"title":{},"body":{"components/EditOrCreateComponent.html":{}}}],["this.testing",{"_index":1537,"title":{},"body":{"classes/ProjectConfig.html":{}}}],["this.type",{"_index":2317,"title":{},"body":{"components/ViewEditComponent.html":{}}}],["this.updatecurrentusername(loggedin",{"_index":2303,"title":{},"body":{"components/ViewEditComponent.html":{}}}],["this.updatecurrentusername(this.userinfoservice.isloggedin",{"_index":2302,"title":{},"body":{"components/ViewEditComponent.html":{}}}],["this.updateidtotag",{"_index":1913,"title":{},"body":{"components/TagSelectionComponent.html":{}}}],["this.updateselectedtags",{"_index":1914,"title":{},"body":{"components/TagSelectionComponent.html":{}}}],["this.url",{"_index":421,"title":{},"body":{"injectables/ArtifactService.html":{},"injectables/EditService.html":{},"injectables/LoginService.html":{},"injectables/MuseumService.html":{}}}],["this.user",{"_index":2185,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.userinfo.basicuserinfo",{"_index":1436,"title":{},"body":{"injectables/MuseumService.html":{}}}],["this.userinfo.basicuserinfo}).topromise",{"_index":1435,"title":{},"body":{"injectables/MuseumService.html":{}}}],["this.userinfoservice",{"_index":2183,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.userinfoservice.basicuserinfo",{"_index":436,"title":{},"body":{"injectables/ArtifactService.html":{},"injectables/CollectionService.html":{},"injectables/EditService.html":{}}}],["this.userinfoservice.basicuserinfo.password",{"_index":429,"title":{},"body":{"injectables/ArtifactService.html":{}}}],["this.userinfoservice.basicuserinfo.username",{"_index":428,"title":{},"body":{"injectables/ArtifactService.html":{}}}],["this.userinfoservice.basicuserinfo?.username",{"_index":2305,"title":{},"body":{"components/ViewEditComponent.html":{}}}],["this.userinfoservice.isloggedin",{"_index":1134,"title":{},"body":{"components/LoginComponent.html":{},"guards/LoginGuardService.html":{},"components/RegistrationComponent.html":{},"components/UserProfileComponent.html":{},"components/WikiEntryViewComponent.html":{}}}],["this.userinfoservice.login(userinfo).then",{"_index":1150,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userinfoservice.logout",{"_index":2188,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.userinfoservice.trackloginstatus().subscribe((loggedin",{"_index":1467,"title":{},"body":{"components/NavigationBarComponent.html":{},"components/ViewEditComponent.html":{}}}],["this.username",{"_index":500,"title":{},"body":{"classes/BasicUserInfo.html":{},"components/LoginComponent.html":{},"components/UserProfileComponent.html":{}}}],["this.value",{"_index":2436,"title":{},"body":{"classes/Wrapper.html":{}}}],["this.viewcategory",{"_index":2232,"title":{},"body":{"components/ViewComponent.html":{}}}],["this.wikientry.id",{"_index":2419,"title":{},"body":{"components/WikiEntryViewComponent.html":{}}}],["this.wikientryeditor?.wikientryformgroup?.valid",{"_index":844,"title":{},"body":{"components/EditOrCreateComponent.html":{}}}],["this.wikientryformgroup",{"_index":2387,"title":{},"body":{"components/WikiEntryEditorComponent.html":{}}}],["those",{"_index":944,"title":{},"body":{"components/EntryListComponent.html":{}}}],["through",{"_index":460,"title":{},"body":{"classes/BasicEntryBuilder.html":{},"components/MarkdownDisplayComponent.html":{},"components/ModalMessageComponent.html":{},"components/UserMuseumListComponent.html":{}}}],["thus",{"_index":794,"title":{},"body":{"components/EditOrCreateComponent.html":{}}}],["time",{"_index":655,"title":{},"body":{"classes/Edit.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"classes/ProtoEdit.html":{}}}],["times",{"_index":1379,"title":{},"body":{"components/ModalMessageComponent.html":{}}}],["title",{"_index":130,"title":{},"body":{"components/AppComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/ModalMessageComponent.html":{}}}],["toartifact",{"_index":1552,"title":{},"body":{"classes/ProtoArtifact.html":{}}}],["toartifact(protoartifact",{"_index":1557,"title":{},"body":{"classes/ProtoArtifact.html":{}}}],["tocollection",{"_index":1568,"title":{},"body":{"classes/ProtoCollection.html":{}}}],["tocollection(protocollection",{"_index":1573,"title":{},"body":{"classes/ProtoCollection.html":{}}}],["toedit",{"_index":1579,"title":{},"body":{"classes/ProtoEdit.html":{}}}],["toedit(protoedit",{"_index":1594,"title":{},"body":{"classes/ProtoEdit.html":{}}}],["top",{"_index":604,"title":{},"body":{"components/ConfirmationModalComponent.html":{},"components/NavigationBarComponent.html":{},"classes/ProjectConfig.html":{}}}],["topreviousroute",{"_index":1485,"title":{},"body":{"injectables/PreviousRouteService.html":{}}}],["topromise",{"_index":430,"title":{},"body":{"injectables/ArtifactService.html":{},"injectables/CollectionService.html":{},"injectables/EditService.html":{},"injectables/LoginService.html":{},"injectables/MuseumService.html":{},"components/UserProfileComponent.html":{}}}],["touser",{"_index":1617,"title":{},"body":{"classes/ProtoUser.html":{}}}],["touser(protouser",{"_index":1627,"title":{},"body":{"classes/ProtoUser.html":{}}}],["track",{"_index":2089,"title":{},"body":{"injectables/UserInfoService.html":{},"components/ViewEditComponent.html":{}}}],["tracked",{"_index":1246,"title":{},"body":{"components/MarkdownDisplayComponent.html":{}}}],["tracking",{"_index":1451,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["trackloginstatus",{"_index":2067,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["tracks",{"_index":2271,"title":{},"body":{"components/ViewEditComponent.html":{}}}],["trailingtext",{"_index":1931,"title":{},"body":{"pipes/TextLimitPipe.html":{}}}],["transform",{"_index":1280,"title":{},"body":{"pipes/MarkedPipe.html":{},"pipes/TextLimitPipe.html":{}}}],["transform(text",{"_index":1924,"title":{},"body":{"pipes/TextLimitPipe.html":{}}}],["transform(value",{"_index":1281,"title":{},"body":{"pipes/MarkedPipe.html":{}}}],["transformed",{"_index":1284,"title":{},"body":{"pipes/MarkedPipe.html":{}}}],["transforms",{"_index":1277,"title":{},"body":{"pipes/MarkedPipe.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/CollectionListComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/CreateComponent.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"components/EntryListComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownDisplayComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/ModalMessageComponent.html":{},"components/MuseumListComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordModalComponent.html":{},"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{},"components/TagSelectionComponent.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryEditorComponent.html":{},"components/WikiEntryViewComponent.html":{}}}],["tried",{"_index":1497,"title":{},"body":{"injectables/PreviousRouteService.html":{}}}],["tries",{"_index":937,"title":{},"body":{"components/EntryListComponent.html":{},"injectables/PreviousRouteService.html":{},"injectables/UserInfoService.html":{}}}],["trigger",{"_index":1886,"title":{},"body":{"components/TagSelectionComponent.html":{}}}],["triggered",{"_index":936,"title":{},"body":{"components/EntryListComponent.html":{},"components/ResetPasswordModalComponent.html":{},"components/TagSelectionComponent.html":{}}}],["true",{"_index":747,"title":{},"body":{"components/EditComponent.html":{},"injectables/EditService.html":{},"components/EntryListComponent.html":{},"guards/LoginGuardService.html":{},"components/ModalMessageComponent.html":{},"components/MuseumListComponent.html":{},"classes/ProjectConfig.html":{},"components/RegistrationComponent.html":{},"components/TagSelectionComponent.html":{},"components/UserEditListComponent.html":{},"injectables/UserInfoService.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":1104,"title":{},"body":{"components/LoginComponent.html":{}}}],["trying",{"_index":728,"title":{},"body":{"components/EditComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/MuseumListComponent.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"components/ViewComponent.html":{}}}],["tslib",{"_index":2508,"title":{},"body":{"dependencies.html":{}}}],["turned",{"_index":389,"title":{},"body":{"injectables/ArtifactService.html":{}}}],["two",{"_index":2034,"title":{},"body":{"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"miscellaneous/variables.html":{}}}],["type",{"_index":131,"title":{},"body":{"components/AppComponent.html":{},"classes/Artifact.html":{},"classes/ArtifactBuilder.html":{},"injectables/ArtifactService.html":{},"classes/BasicEntry.html":{},"classes/BasicEntryBuilder.html":{},"classes/BasicUserInfo.html":{},"classes/Collection.html":{},"classes/CollectionBuilder.html":{},"components/CollectionListComponent.html":{},"injectables/CollectionService.html":{},"components/ConfirmationModalComponent.html":{},"components/CreateComponent.html":{},"classes/Edit.html":{},"classes/EditBuilder.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"injectables/EditService.html":{},"components/EntryListComponent.html":{},"injectables/GetByCategoryService.html":{},"classes/HashHelper.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardService.html":{},"injectables/LoginService.html":{},"components/MarkdownDisplayComponent.html":{},"components/MarkdownEditorComponent.html":{},"pipes/MarkedPipe.html":{},"classes/Mocker.html":{},"components/ModalMessageComponent.html":{},"classes/Museum.html":{},"classes/MuseumBuilder.html":{},"components/MuseumListComponent.html":{},"injectables/MuseumService.html":{},"components/NavigationBarComponent.html":{},"injectables/PreviousRouteService.html":{},"injectables/ProjectConfigService.html":{},"classes/ProtoArtifact.html":{},"classes/ProtoCollection.html":{},"classes/ProtoEdit.html":{},"classes/ProtoMuseum.html":{},"classes/ProtoUser.html":{},"classes/PrototypeBuilder.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordModalComponent.html":{},"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{},"classes/ServerConfig.html":{},"injectables/ServerConfigService.html":{},"classes/ServerResponse.html":{},"classes/Tag.html":{},"components/TagSelectionComponent.html":{},"pipes/TextLimitPipe.html":{},"classes/User.html":{},"components/UserEditListComponent.html":{},"injectables/UserInfoService.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"classes/WikiEntry.html":{},"classes/WikiEntryBuilder.html":{},"components/WikiEntryEditorComponent.html":{},"components/WikiEntryViewComponent.html":{},"classes/Wrapper.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["type(protoedit.type",{"_index":1602,"title":{},"body":{"classes/ProtoEdit.html":{}}}],["type(type",{"_index":692,"title":{},"body":{"classes/EditBuilder.html":{}}}],["typed",{"_index":1126,"title":{},"body":{"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/ResetPasswordModalComponent.html":{}}}],["typeof",{"_index":452,"title":{},"body":{"classes/BasicEntry.html":{},"classes/BasicEntryBuilder.html":{}}}],["types",{"_index":1294,"title":{},"body":{"classes/Mocker.html":{}}}],["unable",{"_index":1804,"title":{},"body":{"classes/ServerCannotConnect.html":{}}}],["undefined",{"_index":650,"title":{},"body":{"classes/Edit.html":{},"components/EditOrCreateComponent.html":{},"classes/Museum.html":{},"injectables/PreviousRouteService.html":{},"classes/ProtoArtifact.html":{},"classes/ProtoCollection.html":{},"components/TagSelectionComponent.html":{},"injectables/UserInfoService.html":{},"components/ViewComponent.html":{},"components/WikiEntryViewComponent.html":{}}}],["under",{"_index":645,"title":{},"body":{"classes/Edit.html":{},"classes/Mocker.html":{},"classes/ProtoEdit.html":{},"components/UserEditListComponent.html":{},"injectables/UserInfoService.html":{}}}],["underscores__",{"_index":2612,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unique",{"_index":496,"title":{},"body":{"classes/BasicUserInfo.html":{},"classes/User.html":{}}}],["unknown",{"_index":478,"title":{},"body":{"classes/BasicEntryBuilder.html":{},"pipes/MarkedPipe.html":{},"classes/WikiEntryBuilder.html":{}}}],["untouched",{"_index":1980,"title":{},"body":{"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{}}}],["unused",{"_index":536,"title":{},"body":{"components/CollectionListComponent.html":{},"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{},"components/WikiEntryEditorComponent.html":{}}}],["up",{"_index":1987,"title":{},"body":{"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{}}}],["update",{"_index":958,"title":{},"body":{"components/EntryListComponent.html":{},"components/LoginComponent.html":{},"components/TagSelectionComponent.html":{},"components/ViewEditComponent.html":{}}}],["updatecurrentusername",{"_index":2268,"title":{},"body":{"components/ViewEditComponent.html":{}}}],["updatecurrentusername(loggedin",{"_index":2283,"title":{},"body":{"components/ViewEditComponent.html":{}}}],["updateidtotag",{"_index":1874,"title":{},"body":{"components/TagSelectionComponent.html":{}}}],["updatesearch",{"_index":919,"title":{},"body":{"components/EntryListComponent.html":{}}}],["updateselectedtags",{"_index":1875,"title":{},"body":{"components/TagSelectionComponent.html":{}}}],["uploads",{"_index":781,"title":{},"body":{"components/EditOrCreateComponent.html":{}}}],["upon",{"_index":1862,"title":{},"body":{"classes/Tag.html":{},"components/UserEditListComponent.html":{}}}],["url",{"_index":299,"title":{},"body":{"classes/Artifact.html":{},"classes/ArtifactBuilder.html":{},"injectables/ArtifactService.html":{},"classes/Collection.html":{},"classes/CollectionBuilder.html":{},"injectables/CollectionService.html":{},"components/CreateComponent.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"injectables/EditService.html":{},"components/EntryListComponent.html":{},"guards/LoginGuardService.html":{},"injectables/LoginService.html":{},"classes/Museum.html":{},"classes/MuseumBuilder.html":{},"injectables/MuseumService.html":{},"components/NavigationBarComponent.html":{},"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{},"classes/ServerConfig.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"classes/WikiEntry.html":{},"classes/WikiEntryBuilder.html":{},"components/WikiEntryEditorComponent.html":{}}}],["url_validation_regex",{"_index":2360,"title":{},"body":{"components/WikiEntryEditorComponent.html":{}}}],["urls",{"_index":1463,"title":{},"body":{"components/NavigationBarComponent.html":{}}}],["urlsegment",{"_index":1201,"title":{},"body":{"guards/LoginGuardService.html":{}}}],["urlsegment('login",{"_index":1205,"title":{},"body":{"guards/LoginGuardService.html":{}}}],["urlsegmentgroup",{"_index":1202,"title":{},"body":{"guards/LoginGuardService.html":{}}}],["urlsegmentgroup([new",{"_index":1204,"title":{},"body":{"guards/LoginGuardService.html":{}}}],["urltree",{"_index":1199,"title":{},"body":{"guards/LoginGuardService.html":{}}}],["urltree.queryparams",{"_index":1206,"title":{},"body":{"guards/LoginGuardService.html":{}}}],["urltree.root",{"_index":1203,"title":{},"body":{"guards/LoginGuardService.html":{}}}],["use",{"_index":461,"title":{},"body":{"classes/BasicEntryBuilder.html":{},"injectables/LoginService.html":{},"classes/ProjectConfig.html":{},"classes/ServerConfig.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["used",{"_index":17,"title":{},"body":{"components/AboutComponent.html":{},"classes/AppPage.html":{},"components/EditOrCreateComponent.html":{},"components/EntryListComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardService.html":{},"injectables/LoginService.html":{},"components/MarkdownEditorComponent.html":{},"classes/ProjectConfig.html":{},"injectables/ProjectConfigService.html":{},"classes/ServerConfig.html":{}}}],["usemockdata",{"_index":1506,"title":{},"body":{"classes/ProjectConfig.html":{}}}],["user",{"_index":107,"title":{"classes/User.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/ArtifactService.html":{},"classes/BasicUserInfo.html":{},"components/CollectionListComponent.html":{},"injectables/CollectionService.html":{},"components/ConfirmationModalComponent.html":{},"components/CreateComponent.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"injectables/EditService.html":{},"components/EntryListComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardService.html":{},"injectables/LoginService.html":{},"components/MarkdownDisplayComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/ModalMessageComponent.html":{},"components/MuseumListComponent.html":{},"injectables/MuseumService.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"injectables/PreviousRouteService.html":{},"classes/ProtoEdit.html":{},"classes/ProtoUser.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordModalComponent.html":{},"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{},"classes/ServerCannotConnect.html":{},"classes/ServerResponse.html":{},"components/TagSelectionComponent.html":{},"classes/User.html":{},"components/UserEditListComponent.html":{},"injectables/UserInfoService.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryEditorComponent.html":{},"components/WikiEntryViewComponent.html":{},"coverage.html":{}}}],["user('peter",{"_index":2121,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["user).topromise",{"_index":1232,"title":{},"body":{"injectables/LoginService.html":{}}}],["user.email",{"_index":2189,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["user.password",{"_index":1438,"title":{},"body":{"injectables/MuseumService.html":{}}}],["user.ts",{"_index":1611,"title":{},"body":{"classes/ProtoUser.html":{},"coverage.html":{}}}],["user.ts:12",{"_index":1625,"title":{},"body":{"classes/ProtoUser.html":{}}}],["user.ts:16",{"_index":1623,"title":{},"body":{"classes/ProtoUser.html":{}}}],["user.ts:20",{"_index":1620,"title":{},"body":{"classes/ProtoUser.html":{}}}],["user.ts:24",{"_index":1618,"title":{},"body":{"classes/ProtoUser.html":{}}}],["user.ts:28",{"_index":1619,"title":{},"body":{"classes/ProtoUser.html":{}}}],["user.ts:35",{"_index":1628,"title":{},"body":{"classes/ProtoUser.html":{}}}],["user.username",{"_index":1437,"title":{},"body":{"injectables/MuseumService.html":{},"components/UserProfileComponent.html":{}}}],["user/login/login.component",{"_index":199,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["user/registration/exampledescription",{"_index":2377,"title":{},"body":{"components/WikiEntryEditorComponent.html":{}}}],["user/registration/registration.component",{"_index":203,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["user/user",{"_index":180,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/ArtifactService.html":{},"injectables/CollectionService.html":{},"injectables/EditService.html":{},"injectables/MuseumService.html":{}}}],["usercredentials",{"_index":1219,"title":{},"body":{"injectables/LoginService.html":{}}}],["usercredentials.password",{"_index":1235,"title":{},"body":{"injectables/LoginService.html":{}}}],["usercredentials.username",{"_index":1234,"title":{},"body":{"injectables/LoginService.html":{}}}],["usereditlistcomponent",{"_index":106,"title":{"components/UserEditListComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CollectionListComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/CreateComponent.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"components/EntryListComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownDisplayComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/ModalMessageComponent.html":{},"components/MuseumListComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordModalComponent.html":{},"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{},"components/TagSelectionComponent.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryEditorComponent.html":{},"components/WikiEntryViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["userinfo",{"_index":1148,"title":{},"body":{"components/LoginComponent.html":{},"injectables/MuseumService.html":{}}}],["userinfoservice",{"_index":381,"title":{"injectables/UserInfoService.html":{}},"body":{"injectables/ArtifactService.html":{},"injectables/CollectionService.html":{},"injectables/EditService.html":{},"components/LoginComponent.html":{},"guards/LoginGuardService.html":{},"injectables/LoginService.html":{},"injectables/MuseumService.html":{},"components/NavigationBarComponent.html":{},"components/RegistrationComponent.html":{},"injectables/UserInfoService.html":{},"components/UserProfileComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryViewComponent.html":{},"coverage.html":{}}}],["userinfoservice.getbasicuserinfo().username",{"_index":2182,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["usermuseumlistcomponent",{"_index":108,"title":{"components/UserMuseumListComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CollectionListComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/CreateComponent.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"components/EntryListComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownDisplayComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/ModalMessageComponent.html":{},"components/MuseumListComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordModalComponent.html":{},"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{},"components/TagSelectionComponent.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryEditorComponent.html":{},"components/WikiEntryViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["username",{"_index":427,"title":{},"body":{"injectables/ArtifactService.html":{},"classes/BasicUserInfo.html":{},"classes/Edit.html":{},"classes/EditBuilder.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"injectables/MuseumService.html":{},"classes/ProtoEdit.html":{},"classes/ProtoUser.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordModalComponent.html":{},"classes/ServerResponse.html":{},"classes/User.html":{},"injectables/UserInfoService.html":{},"components/UserProfileComponent.html":{},"components/ViewEditComponent.html":{}}}],["username}).topromise",{"_index":1236,"title":{},"body":{"injectables/LoginService.html":{}}}],["userprofilecomponent",{"_index":109,"title":{"components/UserProfileComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CollectionListComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/CreateComponent.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"components/EntryListComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownDisplayComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/ModalMessageComponent.html":{},"components/MuseumListComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordModalComponent.html":{},"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{},"components/TagSelectionComponent.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryEditorComponent.html":{},"components/WikiEntryViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["users",{"_index":2597,"title":{},"body":{"miscellaneous/variables.html":{}}}],["uses",{"_index":2060,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["using",{"_index":906,"title":{},"body":{"components/EntryListComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["valid",{"_index":793,"title":{},"body":{"components/EditOrCreateComponent.html":{},"components/RegistrationComponent.html":{},"components/WikiEntryEditorComponent.html":{}}}],["validate",{"_index":1674,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["validation",{"_index":1141,"title":{},"body":{"components/LoginComponent.html":{}}}],["validationerrors",{"_index":1677,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["validatorfn",{"_index":1707,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["validators",{"_index":1694,"title":{},"body":{"components/RegistrationComponent.html":{},"components/WikiEntryEditorComponent.html":{}}}],["validators.email",{"_index":1692,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["validators.maxlength(registrationcomponent._max_password_length",{"_index":1689,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["validators.maxlength(registrationcomponent._max_username_length",{"_index":1687,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["validators.minlength(registrationcomponent._min_password_length",{"_index":1688,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["validators.minlength(registrationcomponent._min_username_length",{"_index":1686,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["validators.pattern(wikientryeditorcomponent.url_validation_regex",{"_index":2391,"title":{},"body":{"components/WikiEntryEditorComponent.html":{}}}],["validators.required",{"_index":1685,"title":{},"body":{"components/RegistrationComponent.html":{},"components/WikiEntryEditorComponent.html":{}}}],["value",{"_index":134,"title":{},"body":{"components/AppComponent.html":{},"injectables/ArtifactService.html":{},"injectables/CollectionService.html":{},"components/CreateComponent.html":{},"classes/EditBuilder.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"components/EntryListComponent.html":{},"components/LoadingComponent.html":{},"pipes/MarkedPipe.html":{},"classes/Mocker.html":{},"components/ModalMessageComponent.html":{},"components/MuseumListComponent.html":{},"injectables/MuseumService.html":{},"components/NavigationBarComponent.html":{},"classes/ProjectConfig.html":{},"components/RegistrationComponent.html":{},"components/SearchComponent.html":{},"classes/ServerCannotConnect.html":{},"classes/ServerConfig.html":{},"components/UserEditListComponent.html":{},"injectables/UserInfoService.html":{},"components/UserMuseumListComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryEditorComponent.html":{},"classes/Wrapper.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.length",{"_index":1287,"title":{},"body":{"pipes/MarkedPipe.html":{}}}],["values",{"_index":1543,"title":{},"body":{"injectables/ProjectConfigService.html":{}}}],["var",{"_index":53,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/CollectionListComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/CreateComponent.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"components/EntryListComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownDisplayComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/ModalMessageComponent.html":{},"components/MuseumListComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordModalComponent.html":{},"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{},"components/TagSelectionComponent.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryEditorComponent.html":{},"components/WikiEntryViewComponent.html":{}}}],["variable",{"_index":1846,"title":{},"body":{"classes/ServerResponse.html":{},"coverage.html":{}}}],["variables",{"_index":925,"title":{"miscellaneous/variables.html":{}},"body":{"components/EntryListComponent.html":{},"miscellaneous/variables.html":{}}}],["vasu",{"_index":1019,"title":{},"body":{"components/FooterComponent.html":{}}}],["version",{"_index":2294,"title":{},"body":{"components/ViewEditComponent.html":{},"components/WikiEntryEditorComponent.html":{},"index.html":{}}}],["view",{"_index":114,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CollectionListComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/CreateComponent.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"components/EntryListComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownDisplayComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/ModalMessageComponent.html":{},"components/MuseumListComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordModalComponent.html":{},"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{},"components/TagSelectionComponent.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryEditorComponent.html":{},"components/WikiEntryViewComponent.html":{}}}],["view'},{'name",{"_index":112,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/CollectionListComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/CreateComponent.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"components/EntryListComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownDisplayComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/ModalMessageComponent.html":{},"components/MuseumListComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordModalComponent.html":{},"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{},"components/TagSelectionComponent.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryEditorComponent.html":{},"components/WikiEntryViewComponent.html":{}}}],["view(entry",{"_index":1989,"title":{},"body":{"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{}}}],["view.component",{"_index":198,"title":{},"body":{"modules/AppModule.html":{}}}],["view.component.css",{"_index":2194,"title":{},"body":{"components/ViewComponent.html":{},"components/WikiEntryViewComponent.html":{}}}],["view.component.html",{"_index":2195,"title":{},"body":{"components/ViewComponent.html":{},"components/WikiEntryViewComponent.html":{}}}],["view.component.ts",{"_index":2399,"title":{},"body":{"components/WikiEntryViewComponent.html":{},"coverage.html":{}}}],["view.component.ts:26",{"_index":2413,"title":{},"body":{"components/WikiEntryViewComponent.html":{}}}],["view.component.ts:30",{"_index":2410,"title":{},"body":{"components/WikiEntryViewComponent.html":{}}}],["view.component.ts:36",{"_index":2411,"title":{},"body":{"components/WikiEntryViewComponent.html":{}}}],["view.component.ts:40",{"_index":2407,"title":{},"body":{"components/WikiEntryViewComponent.html":{}}}],["view.component.ts:59",{"_index":2416,"title":{},"body":{"components/WikiEntryViewComponent.html":{}}}],["view.component.ts:68",{"_index":2415,"title":{},"body":{"components/WikiEntryViewComponent.html":{}}}],["view.component.ts:76",{"_index":2414,"title":{},"body":{"components/WikiEntryViewComponent.html":{}}}],["view/:viewcategory/:id",{"_index":272,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["view/collection",{"_index":241,"title":{},"body":{"modules/AppModule.html":{}}}],["view/entry",{"_index":212,"title":{},"body":{"modules/AppModule.html":{}}}],["view/museum",{"_index":163,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["view/view",{"_index":238,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["view/view/view.component",{"_index":179,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["view/wiki",{"_index":197,"title":{},"body":{"modules/AppModule.html":{},"components/WikiEntryViewComponent.html":{},"coverage.html":{}}}],["viewcategory",{"_index":2202,"title":{},"body":{"components/ViewComponent.html":{}}}],["viewchild",{"_index":814,"title":{},"body":{"components/EditOrCreateComponent.html":{}}}],["viewchild(tagselectioncomponent",{"_index":806,"title":{},"body":{"components/EditOrCreateComponent.html":{}}}],["viewchild(wikientryeditorcomponent",{"_index":810,"title":{},"body":{"components/EditOrCreateComponent.html":{}}}],["viewcomponent",{"_index":111,"title":{"components/ViewComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CollectionListComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/CreateComponent.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"components/EntryListComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownDisplayComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/ModalMessageComponent.html":{},"components/MuseumListComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordModalComponent.html":{},"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{},"components/TagSelectionComponent.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryEditorComponent.html":{},"components/WikiEntryViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["vieweditcomponent",{"_index":113,"title":{"components/ViewEditComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CollectionListComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/CreateComponent.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"components/EntryListComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownDisplayComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/ModalMessageComponent.html":{},"components/MuseumListComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordModalComponent.html":{},"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{},"components/TagSelectionComponent.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryEditorComponent.html":{},"components/WikiEntryViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["visited",{"_index":2171,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["void",{"_index":38,"title":{},"body":{"components/AboutComponent.html":{},"components/CollectionListComponent.html":{},"components/CreateComponent.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"components/EntryListComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownDisplayComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/ModalMessageComponent.html":{},"components/MuseumListComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"injectables/PreviousRouteService.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordModalComponent.html":{},"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{},"components/TagSelectionComponent.html":{},"components/UserEditListComponent.html":{},"injectables/UserInfoService.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryEditorComponent.html":{},"components/WikiEntryViewComponent.html":{}}}],["vulnerability",{"_index":2076,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["wait",{"_index":1082,"title":{},"body":{"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/ModalMessageComponent.html":{}}}],["waiting",{"_index":733,"title":{},"body":{"components/EditComponent.html":{},"components/LoadingComponent.html":{},"components/ModalMessageComponent.html":{},"components/MuseumListComponent.html":{},"classes/ProtoUser.html":{},"components/RegistrationComponent.html":{},"components/TagSelectionComponent.html":{},"classes/User.html":{},"components/UserEditListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{}}}],["waitingforserverresponse",{"_index":1340,"title":{},"body":{"components/ModalMessageComponent.html":{}}}],["web",{"_index":1005,"title":{},"body":{"components/FooterComponent.html":{},"components/LoadingComponent.html":{},"classes/ServerConfig.html":{}}}],["welcome",{"_index":1055,"title":{},"body":{"components/HomeComponent.html":{}}}],["whenever",{"_index":1454,"title":{},"body":{"components/NavigationBarComponent.html":{},"injectables/UserInfoService.html":{},"components/UserMuseumListComponent.html":{}}}],["whether",{"_index":387,"title":{},"body":{"injectables/ArtifactService.html":{},"injectables/CollectionService.html":{},"classes/Edit.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"components/EntryListComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardService.html":{},"components/MarkdownEditorComponent.html":{},"components/ModalMessageComponent.html":{},"components/MuseumListComponent.html":{},"injectables/MuseumService.html":{},"components/NavigationBarComponent.html":{},"classes/ProjectConfig.html":{},"components/RegistrationComponent.html":{},"classes/ServerResponse.html":{},"classes/Tag.html":{},"components/TagSelectionComponent.html":{},"components/UserEditListComponent.html":{},"injectables/UserInfoService.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryViewComponent.html":{},"classes/Wrapper.html":{}}}],["whose",{"_index":1117,"title":{},"body":{"components/LoginComponent.html":{},"pipes/TextLimitPipe.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{}}}],["wiki",{"_index":15,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"classes/Artifact.html":{},"classes/ArtifactBuilder.html":{},"classes/Collection.html":{},"classes/CollectionBuilder.html":{},"components/CollectionListComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/CreateComponent.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"components/EntryListComponent.html":{},"components/FooterComponent.html":{},"injectables/GetByCategoryService.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownDisplayComponent.html":{},"components/MarkdownEditorComponent.html":{},"classes/Mocker.html":{},"components/ModalMessageComponent.html":{},"classes/Museum.html":{},"classes/MuseumBuilder.html":{},"components/MuseumListComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"classes/PrototypeBuilder.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordModalComponent.html":{},"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{},"components/TagSelectionComponent.html":{},"classes/User.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"classes/WikiEntry.html":{},"classes/WikiEntryBuilder.html":{},"components/WikiEntryEditorComponent.html":{},"components/WikiEntryViewComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["wikientry",{"_index":287,"title":{"classes/WikiEntry.html":{}},"body":{"classes/Artifact.html":{},"classes/ArtifactBuilder.html":{},"classes/Collection.html":{},"classes/CollectionBuilder.html":{},"components/EntryListComponent.html":{},"classes/Mocker.html":{},"classes/Museum.html":{},"classes/MuseumBuilder.html":{},"injectables/MuseumService.html":{},"classes/ProtoCollection.html":{},"classes/ProtoMuseum.html":{},"classes/ProtoUser.html":{},"classes/PrototypeBuilder.html":{},"components/SearchInCategoryComponent.html":{},"classes/User.html":{},"components/UserMuseumListComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"classes/WikiEntry.html":{},"classes/WikiEntryBuilder.html":{},"components/WikiEntryEditorComponent.html":{},"components/WikiEntryViewComponent.html":{},"coverage.html":{}}}],["wikientry(entry",{"_index":347,"title":{},"body":{"classes/ArtifactBuilder.html":{},"classes/CollectionBuilder.html":{},"classes/MuseumBuilder.html":{},"classes/WikiEntryBuilder.html":{}}}],["wikientry(protocollection.collection",{"_index":1576,"title":{},"body":{"classes/ProtoCollection.html":{}}}],["wikientry(res.artifact",{"_index":1650,"title":{},"body":{"classes/PrototypeBuilder.html":{}}}],["wikientry(res.collection",{"_index":1646,"title":{},"body":{"classes/PrototypeBuilder.html":{}}}],["wikientry(this.wikientryeditor.getwikientry",{"_index":854,"title":{},"body":{"components/EditOrCreateComponent.html":{}}}],["wikientry.description",{"_index":1397,"title":{},"body":{"classes/Museum.html":{}}}],["wikientry.id",{"_index":1398,"title":{},"body":{"classes/Museum.html":{}}}],["wikientry.image",{"_index":1396,"title":{},"body":{"classes/Museum.html":{}}}],["wikientry.introduction",{"_index":1395,"title":{},"body":{"classes/Museum.html":{},"components/WikiEntryViewComponent.html":{}}}],["wikientry.name",{"_index":2422,"title":{},"body":{"components/WikiEntryViewComponent.html":{}}}],["wikientry.name}}editdelete",{"_index":2423,"title":{},"body":{"components/WikiEntryViewComponent.html":{}}}],["wikientry:13",{"_index":301,"title":{},"body":{"classes/Artifact.html":{},"classes/Collection.html":{},"classes/Museum.html":{}}}],["wikientry:18",{"_index":297,"title":{},"body":{"classes/Artifact.html":{},"classes/Collection.html":{},"classes/Museum.html":{}}}],["wikientry:22",{"_index":298,"title":{},"body":{"classes/Artifact.html":{},"classes/Collection.html":{},"classes/Museum.html":{}}}],["wikientrybuilder",{"_index":314,"title":{"classes/WikiEntryBuilder.html":{}},"body":{"classes/ArtifactBuilder.html":{},"classes/CollectionBuilder.html":{},"classes/Mocker.html":{},"classes/MuseumBuilder.html":{},"classes/WikiEntry.html":{},"classes/WikiEntryBuilder.html":{},"components/WikiEntryEditorComponent.html":{},"coverage.html":{}}}],["wikientrybuilder(wikientry",{"_index":1321,"title":{},"body":{"classes/Mocker.html":{},"components/WikiEntryEditorComponent.html":{}}}],["wikientrybuilder:24",{"_index":345,"title":{},"body":{"classes/ArtifactBuilder.html":{},"classes/CollectionBuilder.html":{},"classes/MuseumBuilder.html":{}}}],["wikientrybuilder:34",{"_index":343,"title":{},"body":{"classes/ArtifactBuilder.html":{},"classes/CollectionBuilder.html":{},"classes/MuseumBuilder.html":{}}}],["wikientrybuilder:44",{"_index":340,"title":{},"body":{"classes/ArtifactBuilder.html":{},"classes/CollectionBuilder.html":{},"classes/MuseumBuilder.html":{}}}],["wikientrybuilder:54",{"_index":348,"title":{},"body":{"classes/ArtifactBuilder.html":{},"classes/CollectionBuilder.html":{},"classes/MuseumBuilder.html":{}}}],["wikientrybuilder:66",{"_index":337,"title":{},"body":{"classes/ArtifactBuilder.html":{},"classes/CollectionBuilder.html":{},"classes/MuseumBuilder.html":{}}}],["wikientrybuilder:73",{"_index":346,"title":{},"body":{"classes/ArtifactBuilder.html":{},"classes/CollectionBuilder.html":{},"classes/MuseumBuilder.html":{}}}],["wikientryeditor",{"_index":772,"title":{},"body":{"components/EditOrCreateComponent.html":{}}}],["wikientryeditorcomponent",{"_index":115,"title":{"components/WikiEntryEditorComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CollectionListComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/CreateComponent.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"components/EntryListComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownDisplayComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/ModalMessageComponent.html":{},"components/MuseumListComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordModalComponent.html":{},"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{},"components/TagSelectionComponent.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryEditorComponent.html":{},"components/WikiEntryViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["wikientryformgroup",{"_index":2361,"title":{},"body":{"components/WikiEntryEditorComponent.html":{}}}],["wikientryviewcomponent",{"_index":116,"title":{"components/WikiEntryViewComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CollectionListComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/CreateComponent.html":{},"components/EditComponent.html":{},"components/EditOrCreateComponent.html":{},"components/EntryListComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownDisplayComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/ModalMessageComponent.html":{},"components/MuseumListComponent.html":{},"components/NavigationBarComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordModalComponent.html":{},"components/SearchComponent.html":{},"components/SearchInCategoryComponent.html":{},"components/TagSelectionComponent.html":{},"components/UserEditListComponent.html":{},"components/UserMuseumListComponent.html":{},"components/UserProfileComponent.html":{},"components/ViewComponent.html":{},"components/ViewEditComponent.html":{},"components/WikiEntryEditorComponent.html":{},"components/WikiEntryViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["wikipedia",{"_index":1056,"title":{},"body":{"components/HomeComponent.html":{}}}],["within",{"_index":943,"title":{},"body":{"components/EntryListComponent.html":{},"components/SearchComponent.html":{}}}],["word",{"_index":2287,"title":{},"body":{"components/ViewEditComponent.html":{}}}],["works",{"_index":1532,"title":{},"body":{"classes/ProjectConfig.html":{},"miscellaneous/variables.html":{}}}],["wrapper",{"_index":1131,"title":{"classes/Wrapper.html":{}},"body":{"components/LoginComponent.html":{},"components/ResetPasswordModalComponent.html":{},"classes/Wrapper.html":{},"coverage.html":{}}}],["wrapper>(this.loginservice.resetpassword(this.username",{"_index":1747,"title":{},"body":{"components/ResetPasswordModalComponent.html":{}}}],["wraps",{"_index":2425,"title":{},"body":{"classes/Wrapper.html":{}}}],["writing",{"_index":2601,"title":{},"body":{"miscellaneous/variables.html":{}}}],["written",{"_index":2521,"title":{},"body":{"index.html":{}}}],["wrong",{"_index":1851,"title":{},"body":{"classes/ServerResponse.html":{}}}],["yes",{"_index":448,"title":{},"body":{"classes/BasicEntry.html":{},"classes/BasicEntryBuilder.html":{},"classes/BasicUserInfo.html":{},"classes/Collection.html":{},"components/ConfirmationModalComponent.html":{},"classes/Museum.html":{},"injectables/ProjectConfigService.html":{},"classes/User.html":{},"components/UserMuseumListComponent.html":{},"classes/WikiEntry.html":{},"classes/Wrapper.html":{}}}],["yevenyo",{"_index":1021,"title":{},"body":{"components/FooterComponent.html":{}}}],["z",{"_index":2369,"title":{},"body":{"components/WikiEntryEditorComponent.html":{}}}],["z.]{2,6})[/\\\\w",{"_index":2370,"title":{},"body":{"components/WikiEntryEditorComponent.html":{}}}],["zone.js",{"_index":2510,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":153,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AboutComponent.html":{"url":"components/AboutComponent.html","title":"component - AboutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AboutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/static/about/about.component.ts\n\n\n    \n        Description\n    \n    \n        detailed information about museum wiki, currently not used\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-about\n            \n\n            \n                styleUrls\n                ./about.component.css\n            \n\n\n\n            \n                templateUrl\n                ./about.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/static/about/about.component.ts:17\n                \n            \n\n\n            \n                \n                    do nothing on initialization since page is static\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {NavigationBarComponent} from '../navigation-bar/navigation-bar.component';\n\n/**\n * detailed information about museum wiki, currently not used\n */\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n  /**\n   * do nothing on initialization since page is static\n   */\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n  Info about museum wiki. Still in development.\n\n\n    \n\n    \n                \n                    ./about.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Info about museum wiki. Still in development.'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollectionListComponent', 'selector': 'app-collection-list'},{'name': 'ConfirmationModalComponent', 'selector': 'app-confirmation-modal'},{'name': 'CreateComponent', 'selector': 'app-create'},{'name': 'EditComponent', 'selector': 'app-edit'},{'name': 'EditOrCreateComponent', 'selector': 'app-edit-or-create'},{'name': 'EntryListComponent', 'selector': 'app-entry-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownDisplayComponent', 'selector': 'app-markdown-display'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'ModalMessageComponent', 'selector': 'app-modal-message'},{'name': 'MuseumListComponent', 'selector': 'app-museum-list'},{'name': 'NavigationBarComponent', 'selector': 'app-navigation-bar'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'ResetPasswordModalComponent', 'selector': 'app-reset-password-modal'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SearchInCategoryComponent', 'selector': 'app-search-in-category'},{'name': 'TagSelectionComponent', 'selector': 'app-tag-selection'},{'name': 'UserEditListComponent', 'selector': 'app-user-edit-list'},{'name': 'UserMuseumListComponent', 'selector': 'app-user-museum-list'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'ViewComponent', 'selector': 'app-view'},{'name': 'ViewEditComponent', 'selector': 'app-view-edit'},{'name': 'WikiEntryEditorComponent', 'selector': 'app-wiki-entry-editor'},{'name': 'WikiEntryViewComponent', 'selector': 'app-wiki-entry-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AboutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app/app.component.ts\n\n\n    \n        Description\n    \n    \n        The main app which contains everything.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Museum Wiki Frontend'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app/app.component.ts:15\n                            \n                        \n\n                \n                    \n                        Title of project\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * The main app which contains everything.\n */\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  /**\n   * Title of project\n   */\n  title = 'Museum Wiki Frontend';\n}\n\n    \n\n    \n        \n\n  \n\n  \n  \n\n    \n\n  \n  \n\n  \n  \n\n\n    \n\n    \n                \n                    ./app.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollectionListComponent', 'selector': 'app-collection-list'},{'name': 'ConfirmationModalComponent', 'selector': 'app-confirmation-modal'},{'name': 'CreateComponent', 'selector': 'app-create'},{'name': 'EditComponent', 'selector': 'app-edit'},{'name': 'EditOrCreateComponent', 'selector': 'app-edit-or-create'},{'name': 'EntryListComponent', 'selector': 'app-entry-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownDisplayComponent', 'selector': 'app-markdown-display'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'ModalMessageComponent', 'selector': 'app-modal-message'},{'name': 'MuseumListComponent', 'selector': 'app-museum-list'},{'name': 'NavigationBarComponent', 'selector': 'app-navigation-bar'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'ResetPasswordModalComponent', 'selector': 'app-reset-password-modal'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SearchInCategoryComponent', 'selector': 'app-search-in-category'},{'name': 'TagSelectionComponent', 'selector': 'app-tag-selection'},{'name': 'UserEditListComponent', 'selector': 'app-user-edit-list'},{'name': 'UserMuseumListComponent', 'selector': 'app-user-museum-list'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'ViewComponent', 'selector': 'app-view'},{'name': 'ViewEditComponent', 'selector': 'app-view-edit'},{'name': 'WikiEntryEditorComponent', 'selector': 'app-wiki-entry-editor'},{'name': 'WikiEntryViewComponent', 'selector': 'app-wiki-entry-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAboutComponent\n\nAboutComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAboutComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCollectionListComponent\n\nCollectionListComponent\n\nAppModule -->\n\nCollectionListComponent->AppModule\n\n\n\n\n\nConfirmationModalComponent\n\nConfirmationModalComponent\n\nAppModule -->\n\nConfirmationModalComponent->AppModule\n\n\n\n\n\nCreateComponent\n\nCreateComponent\n\nAppModule -->\n\nCreateComponent->AppModule\n\n\n\nAppModule -->\n\nCreateComponent->AppModule\n\n\n\n\n\nEditComponent\n\nEditComponent\n\nAppModule -->\n\nEditComponent->AppModule\n\n\n\n\n\nEditOrCreateComponent\n\nEditOrCreateComponent\n\nAppModule -->\n\nEditOrCreateComponent->AppModule\n\n\n\n\n\nEntryListComponent\n\nEntryListComponent\n\nAppModule -->\n\nEntryListComponent->AppModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nAppModule -->\n\nFooterComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nLoadingComponent\n\nLoadingComponent\n\nAppModule -->\n\nLoadingComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nMarkdownDisplayComponent\n\nMarkdownDisplayComponent\n\nAppModule -->\n\nMarkdownDisplayComponent->AppModule\n\n\n\n\n\nMarkdownEditorComponent\n\nMarkdownEditorComponent\n\nAppModule -->\n\nMarkdownEditorComponent->AppModule\n\n\n\n\n\nMarkedPipe\n\nMarkedPipe\n\nAppModule -->\n\nMarkedPipe->AppModule\n\n\n\n\n\nModalMessageComponent\n\nModalMessageComponent\n\nAppModule -->\n\nModalMessageComponent->AppModule\n\n\n\n\n\nMuseumListComponent\n\nMuseumListComponent\n\nAppModule -->\n\nMuseumListComponent->AppModule\n\n\n\n\n\nNavigationBarComponent\n\nNavigationBarComponent\n\nAppModule -->\n\nNavigationBarComponent->AppModule\n\n\n\n\n\nPageNotFoundComponent\n\nPageNotFoundComponent\n\nAppModule -->\n\nPageNotFoundComponent->AppModule\n\n\n\n\n\nRegistrationComponent\n\nRegistrationComponent\n\nAppModule -->\n\nRegistrationComponent->AppModule\n\n\n\n\n\nResetPasswordModalComponent\n\nResetPasswordModalComponent\n\nAppModule -->\n\nResetPasswordModalComponent->AppModule\n\n\n\n\n\nSearchComponent\n\nSearchComponent\n\nAppModule -->\n\nSearchComponent->AppModule\n\n\n\n\n\nSearchInCategoryComponent\n\nSearchInCategoryComponent\n\nAppModule -->\n\nSearchInCategoryComponent->AppModule\n\n\n\n\n\nTagSelectionComponent\n\nTagSelectionComponent\n\nAppModule -->\n\nTagSelectionComponent->AppModule\n\n\n\n\n\nTextLimitPipe\n\nTextLimitPipe\n\nAppModule -->\n\nTextLimitPipe->AppModule\n\n\n\n\n\nUserEditListComponent\n\nUserEditListComponent\n\nAppModule -->\n\nUserEditListComponent->AppModule\n\n\n\n\n\nUserMuseumListComponent\n\nUserMuseumListComponent\n\nAppModule -->\n\nUserMuseumListComponent->AppModule\n\n\n\n\n\nUserProfileComponent\n\nUserProfileComponent\n\nAppModule -->\n\nUserProfileComponent->AppModule\n\n\n\n\n\nViewComponent\n\nViewComponent\n\nAppModule -->\n\nViewComponent->AppModule\n\n\n\n\n\nViewEditComponent\n\nViewEditComponent\n\nAppModule -->\n\nViewEditComponent->AppModule\n\n\n\n\n\nWikiEntryEditorComponent\n\nWikiEntryEditorComponent\n\nAppModule -->\n\nWikiEntryEditorComponent->AppModule\n\n\n\n\n\nWikiEntryViewComponent\n\nWikiEntryViewComponent\n\nAppModule -->\n\nWikiEntryViewComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AboutComponent\n                        \n                        \n                            AppComponent\n                        \n                        \n                            CollectionListComponent\n                        \n                        \n                            ConfirmationModalComponent\n                        \n                        \n                            CreateComponent\n                        \n                        \n                            CreateComponent\n                        \n                        \n                            EditComponent\n                        \n                        \n                            EditOrCreateComponent\n                        \n                        \n                            EntryListComponent\n                        \n                        \n                            FooterComponent\n                        \n                        \n                            HomeComponent\n                        \n                        \n                            LoadingComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            MarkdownDisplayComponent\n                        \n                        \n                            MarkdownEditorComponent\n                        \n                        \n                            MarkedPipe\n                        \n                        \n                            ModalMessageComponent\n                        \n                        \n                            MuseumListComponent\n                        \n                        \n                            NavigationBarComponent\n                        \n                        \n                            PageNotFoundComponent\n                        \n                        \n                            RegistrationComponent\n                        \n                        \n                            ResetPasswordModalComponent\n                        \n                        \n                            SearchComponent\n                        \n                        \n                            SearchInCategoryComponent\n                        \n                        \n                            TagSelectionComponent\n                        \n                        \n                            TextLimitPipe\n                        \n                        \n                            UserEditListComponent\n                        \n                        \n                            UserMuseumListComponent\n                        \n                        \n                            UserProfileComponent\n                        \n                        \n                            ViewComponent\n                        \n                        \n                            ViewEditComponent\n                        \n                        \n                            WikiEntryEditorComponent\n                        \n                        \n                            WikiEntryViewComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\n\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app/app.component';\nimport {MuseumListComponent} from './view/museum-list/museum-list.component';\nimport {HomeComponent} from './static/home/home.component';\nimport {SearchComponent} from './static/search/search/search.component';\nimport {AboutComponent} from './static/about/about.component';\nimport {PageNotFoundComponent} from './static/page-not-found/page-not-found.component';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {NavigationBarComponent} from './static/navigation-bar/navigation-bar.component';\nimport {SearchInCategoryComponent} from './static/search/search-in-category/search-in-category.component';\nimport {ViewComponent} from './view/view/view.component';\nimport {UserProfileComponent} from './user/user-profile/user-profile.component';\nimport {HttpClientModule} from '@angular/common/http';\nimport {LoadingComponent} from './static/loading/loading.component';\nimport {EditOrCreateComponent} from './edit/edit-or-create/edit-or-create.component';\nimport {MarkdownEditorComponent} from './edit/markdown-editor/markdown-editor.component';\nimport {MarkedPipe} from './helper/marked.pipe';\nimport {MarkdownDisplayComponent} from './edit/markdown-display/markdown-display.component';\nimport {WikiEntryEditorComponent} from './edit/wiki-entry-editor/wiki-entry-editor.component';\nimport {WikiEntryViewComponent} from './view/wiki-entry-view/wiki-entry-view.component';\nimport {LoginComponent} from './user/login/login.component';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport { RegistrationComponent } from './user/registration/registration.component';\nimport { ModalMessageComponent } from './static/modal-message/modal-message.component';\nimport { TextLimitPipe } from './helper/text-limit.pipe';\nimport {FontAwesomeModule} from '@fortawesome/angular-fontawesome';\nimport { EntryListComponent } from './view/entry-list/entry-list.component';\nimport { TagSelectionComponent } from './edit/tag-selection/tag-selection.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatButtonModule} from '@angular/material/button';\nimport { FooterComponent } from './static/footer/footer.component';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatSelectModule} from '@angular/material/select';\nimport { EditComponent } from './edit/edit/edit.component';\nimport { CreateComponent } from './edit/create/create.component';\nimport { UserMuseumListComponent } from './user/user-profile/user-museum-list/user-museum-list.component';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport { UserEditListComponent } from './user/user-profile/user-edit-list/user-edit-list.component';\nimport { ViewEditComponent } from './view/view-edit/view-edit.component';\nimport { CollectionListComponent } from './view/collection-list/collection-list.component';\nimport { ConfirmationModalComponent } from './static/confirmation-modal/confirmation-modal.component';\nimport { ResetPasswordModalComponent } from './static/reset-password-modal/reset-password-modal.component';\nimport {DatePipe} from '@angular/common';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MuseumListComponent,\n    HomeComponent,\n    SearchComponent,\n    AboutComponent,\n    PageNotFoundComponent,\n    NavigationBarComponent,\n    SearchInCategoryComponent,\n    ViewComponent,\n    UserProfileComponent,\n    LoadingComponent,\n    CreateComponent,\n    MarkdownEditorComponent,\n    MarkedPipe,\n    MarkdownDisplayComponent,\n    WikiEntryEditorComponent,\n    WikiEntryViewComponent,\n    LoginComponent,\n    RegistrationComponent,\n    ModalMessageComponent,\n    TextLimitPipe,\n    EntryListComponent,\n    TagSelectionComponent,\n    FooterComponent,\n    EditComponent,\n    CreateComponent,\n    EditOrCreateComponent,\n    UserMuseumListComponent,\n    UserEditListComponent,\n    ViewEditComponent,\n    CollectionListComponent,\n    ConfirmationModalComponent,\n    ResetPasswordModalComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    NgbModule,\n    FontAwesomeModule,\n    BrowserAnimationsModule,\n    MatCheckboxModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatInputModule,\n    MatSelectModule,\n    MatCardModule,\n    MatGridListModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPage.html":{"url":"classes/AppPage.html","title":"class - AppPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            e2e/src/app.po.ts\n        \n\n            \n                Description\n            \n            \n                E2E testing is not used in this project\n\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element } from 'protractor';\n\n/**\n * E2E testing is not used in this project\n */\nexport class AppPage {\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {HomeComponent} from './static/home/home.component';\nimport {MuseumListComponent} from './view/museum-list/museum-list.component';\nimport {SearchComponent} from './static/search/search/search.component';\nimport {AboutComponent} from './static/about/about.component';\nimport {PageNotFoundComponent} from './static/page-not-found/page-not-found.component';\nimport {SearchInCategoryComponent} from './static/search/search-in-category/search-in-category.component';\nimport {ViewComponent} from './view/view/view.component';\nimport {UserProfileComponent} from './user/user-profile/user-profile.component';\nimport {EditOrCreateComponent} from './edit/edit-or-create/edit-or-create.component';\nimport {LoginGuardService} from './services/user/login-guard.service';\nimport {LoginComponent} from './user/login/login.component';\nimport {RegistrationComponent} from './user/registration/registration.component';\nimport {EditComponent} from './edit/edit/edit.component';\nimport {CreateComponent} from './edit/create/create.component';\nimport {ViewEditComponent} from './view/view-edit/view-edit.component';\n\n\nconst appRoutes: Routes = [\n  { path: 'home', component: HomeComponent},\n  { path: '', redirectTo: '/home', pathMatch: 'full'},\n  { path: 'museum-list', component: MuseumListComponent },\n  { path: 'search', component: SearchComponent },\n  { path: 'search/:searchCategory/:searchText', component: SearchInCategoryComponent},\n  { path: 'about', component: AboutComponent },\n  { path: 'view/:viewCategory/:id', component: ViewComponent},\n  { path: 'create/:category', component: CreateComponent, canActivate: [LoginGuardService]},\n  { path: 'create/:category/:museumId', component: CreateComponent, canActivate: [LoginGuardService]},\n  { path: 'edit/:category/:id', component: EditComponent, canActivate: [LoginGuardService]},\n  { path: 'view-edit/:editId', component: ViewEditComponent},\n  { path: 'login', component: LoginComponent},\n  { path: 'user-profile', component: UserProfileComponent, canActivate: [LoginGuardService]},\n  { path: 'register', component: RegistrationComponent},\n  { path: '**', component: PageNotFoundComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(appRoutes)],\n  exports: [RouterModule]\n})\n\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Artifact.html":{"url":"classes/Artifact.html","title":"class - Artifact","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Artifact\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/artifact.ts\n        \n\n            \n                Description\n            \n            \n                An artifact in some collections of a certain museum\n\n            \n\n            \n                Extends\n            \n            \n                        WikiEntry\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                collectionList\n                            \n                            \n                                museum\n                            \n                            \n                                description\n                            \n                            \n                                image\n                            \n                            \n                                introduction\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            collectionList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BasicEntry[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/artifact.ts:15\n                            \n                        \n\n                \n                    \n                        List of collections to which this museum belongs\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            museum\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BasicEntry\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/artifact.ts:11\n                            \n                        \n\n                \n                    \n                        Information of the museum to which this artifact belongs\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         WikiEntry\n\n                                \n                            \n                        \n                            \n                                    Defined in         WikiEntry:18\n\n                            \n                        \n\n                \n                    \n                        Detailed description for the entry.\nMust be in Markdown\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            image\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         WikiEntry\n\n                                \n                            \n                        \n                            \n                                    Defined in         WikiEntry:22\n\n                            \n                        \n\n                \n                    \n                        A url to the image that is displayed.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            introduction\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         WikiEntry\n\n                                \n                            \n                        \n                            \n                                    Defined in         WikiEntry:13\n\n                            \n                        \n\n                \n                    \n                        The introductory text for the entry.\nMust be in plain text.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BasicEntry\n\n                                \n                            \n                        \n                            \n                                    Defined in         BasicEntry:12\n\n                            \n                        \n\n                \n                    \n                        Id of entry\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BasicEntry\n\n                                \n                            \n                        \n                            \n                                    Defined in         BasicEntry:8\n\n                            \n                        \n\n                \n                    \n                        Name of entry\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {WikiEntry} from './wiki-entry';\nimport {BasicEntry} from './basic-entry';\n\n/**\n * An artifact in some collections of a certain museum\n */\nexport class Artifact extends WikiEntry {\n  /**\n   * Information of the museum to which this artifact belongs\n   */\n  museum: BasicEntry;\n  /**\n   * List of collections to which this museum belongs\n   */\n  collectionList: BasicEntry[];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ArtifactBuilder.html":{"url":"classes/ArtifactBuilder.html","title":"class - ArtifactBuilder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ArtifactBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/builders/artifact-builder.ts\n        \n\n            \n                Description\n            \n            \n                Builder for an Artifact object.\n\n            \n\n            \n                Extends\n            \n            \n                        WikiEntryBuilder\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                entry\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                build\n                            \n                            \n                                    Public\n                                collectionList\n                            \n                            \n                                    Public\n                                museum\n                            \n                            \n                                    Public\n                                build\n                            \n                            \n                                    Public\n                                description\n                            \n                            \n                                    Public\n                                image\n                            \n                            \n                                    Public\n                                introduction\n                            \n                            \n                                    Public\n                                self\n                            \n                            \n                                    Public\n                                wikiEntry\n                            \n                            \n                                    Public\n                                build\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                self\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/models/builders/artifact-builder.ts:8\n                            \n                        \n\n                \n                    \n                            Creates an artifact with nothing in it\n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            entry\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     E\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BasicEntryBuilder\n\n                                \n                            \n                        \n                            \n                                    Defined in         BasicEntryBuilder:13\n\n                            \n                        \n\n                \n                    \n                        The entry that will be created.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            build\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    build()\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/builders/artifact-builder.ts:39\n                \n            \n\n\n            \n                \n                    Create an artifact object\n\n\n                    \n                        Returns :         Artifact\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            collectionList\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    collectionList(collection: BasicEntry[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/builders/artifact-builder.ts:31\n                \n            \n\n\n            \n                \n                    Builder method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    collection\n                                    \n                                                BasicEntry[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Set the collections to which this artifact belongs\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ArtifactBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            museum\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    museum(museum: BasicEntry)\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/builders/artifact-builder.ts:21\n                \n            \n\n\n            \n                \n                    Set the corresponding museum of artifact\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    museum\n                                    \n                                                BasicEntry\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Museum to which this artifact belongs\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ArtifactBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            build\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    build()\n                \n            \n\n\n            \n                \n                    Inherited from         WikiEntryBuilder\n\n                \n            \n            \n                \n                        Defined in         WikiEntryBuilder:66\n\n                \n            \n\n\n            \n                \n                    Build a custom object that extends Wiki Entry\n\n\n                    \n                        Returns :     E\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            description\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    description(description: string)\n                \n            \n\n\n            \n                \n                    Inherited from         WikiEntryBuilder\n\n                \n            \n            \n                \n                        Defined in         WikiEntryBuilder:44\n\n                \n            \n\n\n            \n                \n                    Builder method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    description\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Description in Markdown of entry\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            image\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    image(image: string)\n                \n            \n\n\n            \n                \n                    Inherited from         WikiEntryBuilder\n\n                \n            \n            \n                \n                        Defined in         WikiEntryBuilder:34\n\n                \n            \n\n\n            \n                \n                    Builder method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    image\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Url of image\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            introduction\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    introduction(introduction: string)\n                \n            \n\n\n            \n                \n                    Inherited from         WikiEntryBuilder\n\n                \n            \n            \n                \n                        Defined in         WikiEntryBuilder:24\n\n                \n            \n\n\n            \n                \n                    Builder method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    introduction\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Introduction of wiki entry\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            self\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    self()\n                \n            \n\n\n            \n                \n                    Inherited from         WikiEntryBuilder\n\n                \n            \n            \n                \n                        Defined in         WikiEntryBuilder:73\n\n                \n            \n\n\n            \n                \n                    Returns a Builder that extends WikiEntryBuilder\n\n\n                    \n                        Returns :     T\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            wikiEntry\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    wikiEntry(entry: WikiEntry)\n                \n            \n\n\n            \n                \n                    Inherited from         WikiEntryBuilder\n\n                \n            \n            \n                \n                        Defined in         WikiEntryBuilder:54\n\n                \n            \n\n\n            \n                \n                    Builder method from another Wiki Entry\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    entry\n                                    \n                                                WikiEntry\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        A wiki entry from which the builder will copy the info\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            build\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    build()\n                \n            \n\n\n            \n                \n                    Inherited from         BasicEntryBuilder\n\n                \n            \n            \n                \n                        Defined in         BasicEntryBuilder:51\n\n                \n            \n\n\n            \n                \n                    Build the entry\n\n\n                    \n                        Returns :     E\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            id\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    id(id: number | string)\n                \n            \n\n\n            \n                \n                    Inherited from         BasicEntryBuilder\n\n                \n            \n            \n                \n                        Defined in         BasicEntryBuilder:43\n\n                \n            \n\n\n            \n                \n                    Builder method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                            number | string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Set id of entry\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            name\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    name(name: string)\n                \n            \n\n\n            \n                \n                    Inherited from         BasicEntryBuilder\n\n                \n            \n            \n                \n                        Defined in         BasicEntryBuilder:33\n\n                \n            \n\n\n            \n                \n                    Builder method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Set name of entry\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            self\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    self()\n                \n            \n\n\n            \n                \n                    Inherited from         BasicEntryBuilder\n\n                \n            \n            \n                \n                        Defined in         BasicEntryBuilder:58\n\n                \n            \n\n\n            \n                \n                    Return this builder as a T, which is another builder that extends BasicEntryBuilder\n\n\n                    \n                        Returns :     T\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {WikiEntryBuilder} from './wiki-entry-builder';\nimport {Artifact} from '../artifact';\nimport {BasicEntry} from '../basic-entry';\n\n/**\n * Builder for an Artifact object.\n */\nexport class ArtifactBuilder extends WikiEntryBuilder {\n  /**\n   * Creates an artifact with nothing in it\n   */\n  constructor() {\n    super(Artifact);\n  }\n\n  /**\n   * Set the corresponding museum of artifact\n   *\n   * @param museum Museum to which this artifact belongs\n   */\n  public museum(museum: BasicEntry): ArtifactBuilder {\n    this.entry.museum = museum;\n    return this;\n  }\n\n  /**\n   * Builder method\n   *\n   * @param collection Set the collections to which this artifact belongs\n   */\n  public collectionList(collection: BasicEntry[]): ArtifactBuilder {\n    this.entry.collectionList = collection;\n    return this;\n  }\n\n  /**\n   * Create an artifact object\n   */\n  public build(): Artifact {\n    if (!this.entry.collectionList) {\n      this.entry.collectionList = [];\n    }\n    return this.entry;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ArtifactService.html":{"url":"injectables/ArtifactService.html","title":"injectable - ArtifactService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ArtifactService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/wiki-entry/artifact.service.ts\n        \n\n            \n                Description\n            \n            \n                Provides interfaces for CRUD artifact information\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                projectConfig\n                            \n                            \n                                    Private\n                                    Readonly\n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addArtifact\n                            \n                            \n                                    Public\n                                deleteArtifact\n                            \n                            \n                                    Public\n                                getArtifact\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(serverConfigService: ServerConfigService, http: HttpClient, userInfoService: UserInfoService, projectConfigService: ProjectConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/wiki-entry/artifact.service.ts:28\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        serverConfigService\n                                                  \n                                                        \n                                                                        ServerConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Endpoint url\n\n                                                        \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provides http GET/PUT/POST/DELETE apis\n\n                                                        \n                                                \n                                                \n                                                        userInfoService\n                                                  \n                                                        \n                                                                        UserInfoService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provides user info\n\n                                                        \n                                                \n                                                \n                                                        projectConfigService\n                                                  \n                                                        \n                                                                        ProjectConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Whether logging is turned on\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            addArtifact\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addArtifact(artifact: Artifact, mode: Mode)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wiki-entry/artifact.service.ts:74\n                \n            \n\n\n            \n                \n                    Add/edit an artifact\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    artifact\n                                    \n                                                Artifact\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Artifact to be added/edited\n\n                                    \n                                \n                                \n                                    mode\n                                    \n                                                Mode\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        Mode.CREATE\n                                    \n\n                                    \n                                        Whether the artifact will be created or edited\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            deleteArtifact\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteArtifact(id: string | number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wiki-entry/artifact.service.ts:60\n                \n            \n\n\n            \n                \n                    Delete an artifact\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                            string | number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Id of artifact\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getArtifact\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getArtifact(id: string | number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wiki-entry/artifact.service.ts:51\n                \n            \n\n\n            \n                \n                    Get an artifact\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                            string | number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Id of artifact\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            projectConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ProjectConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/wiki-entry/artifact.service.ts:28\n                            \n                        \n\n                \n                    \n                        Project configuration\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            url\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/wiki-entry/artifact.service.ts:24\n                            \n                        \n\n                \n                    \n                        Server endpoint url\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {ServerConfigService} from '../config/server-config.service';\nimport {Observable} from 'rxjs';\nimport {ProtoArtifact} from '../object-prototypes/proto-artifact';\nimport {HttpClient} from '@angular/common/http';\nimport {Artifact} from '../../models/artifact';\nimport {UserInfoService} from '../user/user-info.service';\nimport {ServerResponse} from '../server-response';\nimport {Mode} from '../../edit/mode';\nimport {ProjectConfigService} from '../config/project-config.service';\nimport {ProjectConfig} from '../../config/ProjectConfig';\n\n/**\n * Provides interfaces for CRUD artifact information\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ArtifactService {\n\n  /**\n   * Server endpoint url\n   */\n  private readonly url: string;\n  /**\n   * Project configuration\n   */\n  private readonly projectConfig: ProjectConfig;\n\n  /**\n   * Constructor\n   *\n   * @param serverConfigService Endpoint url\n   * @param http Provides http GET/PUT/POST/DELETE apis\n   * @param userInfoService Provides user info\n   * @param projectConfigService Whether logging is turned on\n   */\n  constructor(private serverConfigService: ServerConfigService,\n              private http: HttpClient,\n              private userInfoService: UserInfoService,\n              private projectConfigService: ProjectConfigService) {\n    this.url = this.serverConfigService.getServerConfig().getUrl();\n    this.projectConfig = projectConfigService.getProjectConfig();\n  }\n\n  /**\n   * Get an artifact\n   *\n   * @param id Id of artifact\n   */\n  public getArtifact(id: string | number): Observable {\n    return this.http.get(this.url + 'artifact/' + id);\n  }\n\n  /**\n   * Delete an artifact\n   *\n   * @param id Id of artifact\n   */\n  public deleteArtifact(id: string | number): Promise {\n    return this.http.post(\n      this.url + 'delete-artifact/' + id, {\n        username: this.userInfoService.basicUserInfo.username,\n        password: this.userInfoService.basicUserInfo.password,\n      }).toPromise();\n  }\n\n  /**\n   * Add/edit an artifact\n   *\n   * @param artifact Artifact to be added/edited\n   * @param mode Whether the artifact will be created or edited\n   */\n  public addArtifact(artifact: Artifact, mode: Mode = Mode.CREATE): Promise {\n    const url = this.url + (mode === Mode.CREATE ? 'add-artifact' : 'edit-artifact');\n    const body = {\n      museum: {id: artifact.museum.id},\n      collection: artifact.collectionList.map((collection) => collection.id),\n      artifact,\n      user: this.userInfoService.basicUserInfo\n    };\n    if (this.projectConfig.isLogging()) {\n      console.log('Add artifact request url:');\n      console.log(url);\n      console.log('Add artifact request body:');\n      console.log(body);\n    }\n    return this.http.post(\n      url,\n      body).toPromise();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BasicEntry.html":{"url":"classes/BasicEntry.html","title":"class - BasicEntry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BasicEntry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/basic-entry.ts\n        \n\n            \n                Description\n            \n            \n                Minimal information for an entry.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name?: string, id?: number | string)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/basic-entry.ts:12\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                                Name of entry\n\n                                                        \n                                                \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                    number | string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                                Id of entry\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/basic-entry.ts:12\n                            \n                        \n\n                \n                    \n                        Id of entry\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/basic-entry.ts:8\n                            \n                        \n\n                \n                    \n                        Name of entry\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class BasicEntry {\n  /**\n   * Name of entry\n   */\n  name: string;\n  /**\n   * Id of entry\n   */\n  id: number;\n\n  /**\n   * Constructor\n   *\n   * @param name Name of entry\n   * @param id Id of entry\n   */\n  constructor(name?: string, id?: number | string) {\n    this.name = name;\n    this.id = typeof id === 'number' ? id : parseInt(id, 10);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BasicEntryBuilder.html":{"url":"classes/BasicEntryBuilder.html","title":"class - BasicEntryBuilder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BasicEntryBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/builders/basic-entry-builder.ts\n        \n\n            \n                Description\n            \n            \n                Builds a basic entry.\nSupports inheritance of Artifact/Collection/Museum Builder through use of generics.\nT stands for the Builder this will become.\nE stands for the type of object this builder will build.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                entry\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                build\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                self\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(Type?)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/builders/basic-entry-builder.ts:13\n                            \n                        \n\n                \n                    \n                            Creates the entry\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        Type\n                                                  \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                                The type that should be created. If not provided, use the generic argument.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            entry\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     E\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/builders/basic-entry-builder.ts:13\n                            \n                        \n\n                \n                    \n                        The entry that will be created.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            build\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    build()\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/builders/basic-entry-builder.ts:51\n                \n            \n\n\n            \n                \n                    Build the entry\n\n\n                    \n                        Returns :     E\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            id\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    id(id: number | string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/builders/basic-entry-builder.ts:43\n                \n            \n\n\n            \n                \n                    Builder method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                            number | string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Set id of entry\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            name\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    name(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/builders/basic-entry-builder.ts:33\n                \n            \n\n\n            \n                \n                    Builder method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Set name of entry\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            self\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    self()\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/builders/basic-entry-builder.ts:58\n                \n            \n\n\n            \n                \n                    Return this builder as a T, which is another builder that extends BasicEntryBuilder\n\n\n                    \n                        Returns :     T\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {BasicEntry} from '../basic-entry';\n\n/**\n * Builds a basic entry.\n * Supports inheritance of Artifact/Collection/Museum Builder through use of generics.\n * T stands for the Builder this will become.\n * E stands for the type of object this builder will build.\n */\nexport class BasicEntryBuilder, E extends BasicEntry> {\n  /**\n   * The entry that will be created.\n   */\n  protected entry: E;\n\n  /**\n   * Creates the entry\n   *\n   * @param Type The type that should be created. If not provided, use the generic argument.\n   */\n  constructor(Type?) {\n    if (Type) {\n      this.entry = new Type();\n    } else {\n      this.entry = new BasicEntry() as E;\n    }\n  }\n\n  /**\n   * Builder method\n   *\n   * @param name Set name of entry\n   */\n  public name(name: string): T {\n    this.entry.name = name;\n    return this.self();\n  }\n\n  /**\n   * Builder method\n   *\n   * @param id Set id of entry\n   */\n  public id(id: number | string): T {\n    this.entry.id = typeof id === 'number' ? id : parseInt(id, 10);\n    return this.self();\n  }\n\n  /**\n   * Build the entry\n   */\n  public build(): E {\n    return this.entry;\n  }\n\n  /**\n   * Return this builder as a T, which is another builder that extends BasicEntryBuilder\n   */\n  public self(): T {\n    return this as unknown as T;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BasicUserInfo.html":{"url":"classes/BasicUserInfo.html","title":"class - BasicUserInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BasicUserInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/basic-user-info.ts\n        \n\n            \n                Description\n            \n            \n                Minimum user info required for login\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(username?: string, password?: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/basic-user-info.ts:14\n                            \n                        \n\n                \n                    \n                            Create new basic user info. Convert password automatically to hash.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        username\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                                Username\n\n                                                        \n                                                \n                                                \n                                                        password\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                                A string of either raw password or hash. If length is not 128, assume it's not a hash and hash it.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/basic-user-info.ts:14\n                            \n                        \n\n                \n                    \n                        Password is stored automatically in SHA512 hash.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/basic-user-info.ts:10\n                            \n                        \n\n                \n                    \n                        Username must be unique.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {HashHelper} from '../helper/hash-helper';\n\n/**\n * Minimum user info required for login\n */\nexport class BasicUserInfo {\n  /**\n   * Username must be unique.\n   */\n  username: string;\n  /**\n   * Password is stored automatically in SHA512 hash.\n   */\n  password: string;\n\n  /**\n   * Create new basic user info. Convert password automatically to hash.\n   *\n   * @param username Username\n   * @param password A string of either raw password or hash. If length is not 128, assume it's not a hash and hash it.\n   */\n  constructor(username?: string, password?: string) {\n    this.username = username;\n    if (password && password.length !== 128) {\n      this.password = HashHelper.hash(password);\n    } else {\n      this.password = password;\n    }\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Collection.html":{"url":"classes/Collection.html","title":"class - Collection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Collection\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/collection.ts\n        \n\n            \n                Description\n            \n            \n                A collection in a museum, which functions like a tag.\n\n            \n\n            \n                Extends\n            \n            \n                        WikiEntry\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                artifacts\n                            \n                            \n                                museum\n                            \n                            \n                                description\n                            \n                            \n                                image\n                            \n                            \n                                introduction\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(self?: WikiEntry, museum?: BasicEntry)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/collection.ts:15\n                            \n                        \n\n                \n                    \n                            Create a collection object.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        self\n                                                  \n                                                        \n                                                                        WikiEntry\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                                An object containing basic information of a collection (name, id, description , etc.)\n\n                                                        \n                                                \n                                                \n                                                        museum\n                                                  \n                                                        \n                                                                        BasicEntry\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                                The museum to which this collection belongs\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            artifacts\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         WikiEntry[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/collection.ts:15\n                            \n                        \n\n                \n                    \n                        The artifacts that belong to this collection\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            museum\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BasicEntry\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/collection.ts:11\n                            \n                        \n\n                \n                    \n                        The museum to which this collection belongs\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         WikiEntry\n\n                                \n                            \n                        \n                            \n                                    Defined in         WikiEntry:18\n\n                            \n                        \n\n                \n                    \n                        Detailed description for the entry.\nMust be in Markdown\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            image\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         WikiEntry\n\n                                \n                            \n                        \n                            \n                                    Defined in         WikiEntry:22\n\n                            \n                        \n\n                \n                    \n                        A url to the image that is displayed.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            introduction\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         WikiEntry\n\n                                \n                            \n                        \n                            \n                                    Defined in         WikiEntry:13\n\n                            \n                        \n\n                \n                    \n                        The introductory text for the entry.\nMust be in plain text.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BasicEntry\n\n                                \n                            \n                        \n                            \n                                    Defined in         BasicEntry:12\n\n                            \n                        \n\n                \n                    \n                        Id of entry\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BasicEntry\n\n                                \n                            \n                        \n                            \n                                    Defined in         BasicEntry:8\n\n                            \n                        \n\n                \n                    \n                        Name of entry\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {WikiEntry} from './wiki-entry';\nimport {BasicEntry} from './basic-entry';\n\n/**\n * A collection in a museum, which functions like a tag.\n */\nexport class Collection extends WikiEntry {\n  /**\n   * The museum to which this collection belongs\n   */\n  museum: BasicEntry;\n  /**\n   * The artifacts that belong to this collection\n   */\n  artifacts: WikiEntry[];\n\n  /**\n   * Create a collection object.\n   *\n   * @param self An object containing basic information of a collection (name, id, description , etc.)\n   * @param museum The museum to which this collection belongs\n   */\n  constructor(self?: WikiEntry, museum?: BasicEntry) {\n    super(self?.name, self?.introduction, self?.image, self?.description, self?.id);\n    this.museum = museum;\n    this.artifacts = [];\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CollectionBuilder.html":{"url":"classes/CollectionBuilder.html","title":"class - CollectionBuilder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CollectionBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/builders/collection-builder.ts\n        \n\n            \n                Description\n            \n            \n                Builder for the Collection class\n\n            \n\n            \n                Extends\n            \n            \n                        WikiEntryBuilder\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                entry\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                artifacts\n                            \n                            \n                                museum\n                            \n                            \n                                    Public\n                                build\n                            \n                            \n                                    Public\n                                description\n                            \n                            \n                                    Public\n                                image\n                            \n                            \n                                    Public\n                                introduction\n                            \n                            \n                                    Public\n                                self\n                            \n                            \n                                    Public\n                                wikiEntry\n                            \n                            \n                                    Public\n                                build\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                self\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/models/builders/collection-builder.ts:9\n                            \n                        \n\n                \n                    \n                            Creates a collection in the entry field\n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            entry\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     E\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BasicEntryBuilder\n\n                                \n                            \n                        \n                            \n                                    Defined in         BasicEntryBuilder:13\n\n                            \n                        \n\n                \n                    \n                        The entry that will be created.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            artifacts\n                        \n                        \n                    \n                \n            \n            \n                \nartifacts(artifacts: WikiEntry[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/builders/collection-builder.ts:32\n                \n            \n\n\n            \n                \n                    Builder method for artifact field\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    artifacts\n                                    \n                                                WikiEntry[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Array of artifacts belonging to this collection\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CollectionBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            museum\n                        \n                        \n                    \n                \n            \n            \n                \nmuseum(museum: BasicEntry)\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/builders/collection-builder.ts:22\n                \n            \n\n\n            \n                \n                    Builder method for museum field\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    museum\n                                    \n                                                BasicEntry\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The museum to which this collection belongs\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CollectionBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            build\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    build()\n                \n            \n\n\n            \n                \n                    Inherited from         WikiEntryBuilder\n\n                \n            \n            \n                \n                        Defined in         WikiEntryBuilder:66\n\n                \n            \n\n\n            \n                \n                    Build a custom object that extends Wiki Entry\n\n\n                    \n                        Returns :     E\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            description\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    description(description: string)\n                \n            \n\n\n            \n                \n                    Inherited from         WikiEntryBuilder\n\n                \n            \n            \n                \n                        Defined in         WikiEntryBuilder:44\n\n                \n            \n\n\n            \n                \n                    Builder method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    description\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Description in Markdown of entry\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            image\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    image(image: string)\n                \n            \n\n\n            \n                \n                    Inherited from         WikiEntryBuilder\n\n                \n            \n            \n                \n                        Defined in         WikiEntryBuilder:34\n\n                \n            \n\n\n            \n                \n                    Builder method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    image\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Url of image\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            introduction\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    introduction(introduction: string)\n                \n            \n\n\n            \n                \n                    Inherited from         WikiEntryBuilder\n\n                \n            \n            \n                \n                        Defined in         WikiEntryBuilder:24\n\n                \n            \n\n\n            \n                \n                    Builder method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    introduction\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Introduction of wiki entry\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            self\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    self()\n                \n            \n\n\n            \n                \n                    Inherited from         WikiEntryBuilder\n\n                \n            \n            \n                \n                        Defined in         WikiEntryBuilder:73\n\n                \n            \n\n\n            \n                \n                    Returns a Builder that extends WikiEntryBuilder\n\n\n                    \n                        Returns :     T\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            wikiEntry\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    wikiEntry(entry: WikiEntry)\n                \n            \n\n\n            \n                \n                    Inherited from         WikiEntryBuilder\n\n                \n            \n            \n                \n                        Defined in         WikiEntryBuilder:54\n\n                \n            \n\n\n            \n                \n                    Builder method from another Wiki Entry\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    entry\n                                    \n                                                WikiEntry\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        A wiki entry from which the builder will copy the info\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            build\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    build()\n                \n            \n\n\n            \n                \n                    Inherited from         BasicEntryBuilder\n\n                \n            \n            \n                \n                        Defined in         BasicEntryBuilder:51\n\n                \n            \n\n\n            \n                \n                    Build the entry\n\n\n                    \n                        Returns :     E\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            id\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    id(id: number | string)\n                \n            \n\n\n            \n                \n                    Inherited from         BasicEntryBuilder\n\n                \n            \n            \n                \n                        Defined in         BasicEntryBuilder:43\n\n                \n            \n\n\n            \n                \n                    Builder method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                            number | string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Set id of entry\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            name\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    name(name: string)\n                \n            \n\n\n            \n                \n                    Inherited from         BasicEntryBuilder\n\n                \n            \n            \n                \n                        Defined in         BasicEntryBuilder:33\n\n                \n            \n\n\n            \n                \n                    Builder method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Set name of entry\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            self\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    self()\n                \n            \n\n\n            \n                \n                    Inherited from         BasicEntryBuilder\n\n                \n            \n            \n                \n                        Defined in         BasicEntryBuilder:58\n\n                \n            \n\n\n            \n                \n                    Return this builder as a T, which is another builder that extends BasicEntryBuilder\n\n\n                    \n                        Returns :     T\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {WikiEntryBuilder} from './wiki-entry-builder';\nimport {Collection} from '../collection';\nimport {BasicEntry} from '../basic-entry';\nimport {WikiEntry} from '../wiki-entry';\n\n/**\n * Builder for the Collection class\n */\nexport class CollectionBuilder extends WikiEntryBuilder {\n  /**\n   * Creates a collection in the entry field\n   */\n  constructor() {\n    super(Collection);\n  }\n\n  /**\n   * Builder method for museum field\n   *\n   * @param museum The museum to which this collection belongs\n   */\n  museum(museum: BasicEntry): CollectionBuilder {\n    this.entry.museum = museum;\n    return this;\n  }\n\n  /**\n   * Builder method for artifact field\n   *\n   * @param artifacts Array of artifacts belonging to this collection\n   */\n  artifacts(artifacts: WikiEntry[]): CollectionBuilder {\n    this.entry.artifacts = artifacts;\n    return this;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CollectionListComponent.html":{"url":"components/CollectionListComponent.html","title":"component - CollectionListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CollectionListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/view/collection-list/collection-list.component.ts\n\n\n    \n        Description\n    \n    \n        Displays a list of collections separated by commas. Currently unused. Replaced by the tag-selection app.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-collection-list\n            \n\n            \n                styleUrls\n                ./collection-list.component.css\n            \n\n\n\n            \n                templateUrl\n                ./collection-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                display\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                artifact\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        artifact\n                    \n                \n                \n                    \n                        Type :         Artifact\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/view/collection-list/collection-list.component.ts:18\n                            \n                        \n                \n                    \n                        the artifact which contains the desired collection list\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/view/collection-list/collection-list.component.ts:27\n                \n            \n\n\n            \n                \n                    Convert collection list into a string to be displayed\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            display\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/view/collection-list/collection-list.component.ts:22\n                            \n                        \n\n                \n                    \n                        The text to be displayed. It contains the name of all collections.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {Component, Input, OnInit} from '@angular/core';\nimport {BasicEntry} from '../../models/basic-entry';\nimport {Artifact} from '../../models/artifact';\n\n/**\n * Displays a list of collections separated by commas. Currently unused. Replaced by the tag-selection app.\n */\n@Component({\n  selector: 'app-collection-list',\n  templateUrl: './collection-list.component.html',\n  styleUrls: ['./collection-list.component.css']\n})\nexport class CollectionListComponent implements OnInit {\n\n  /**\n   * the artifact which contains the desired collection list\n   */\n  @Input() artifact: Artifact;\n  /**\n   * The text to be displayed. It contains the name of all collections.\n   */\n  display: string;\n\n  /**\n   * Convert collection list into a string to be displayed\n   */\n  ngOnInit(): void {\n    if (this.artifact.collectionList && this.artifact.collectionList.length > 0) {\n      this.display =\n        this.artifact\n          .collectionList\n          .map((entry) => entry.name)\n          .join(', ');\n    }\n  }\n\n}\n\n    \n\n    \n        Collections: {{display}}\n\n    \n\n    \n                \n                    ./collection-list.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Collections: {{display}}'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollectionListComponent', 'selector': 'app-collection-list'},{'name': 'ConfirmationModalComponent', 'selector': 'app-confirmation-modal'},{'name': 'CreateComponent', 'selector': 'app-create'},{'name': 'EditComponent', 'selector': 'app-edit'},{'name': 'EditOrCreateComponent', 'selector': 'app-edit-or-create'},{'name': 'EntryListComponent', 'selector': 'app-entry-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownDisplayComponent', 'selector': 'app-markdown-display'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'ModalMessageComponent', 'selector': 'app-modal-message'},{'name': 'MuseumListComponent', 'selector': 'app-museum-list'},{'name': 'NavigationBarComponent', 'selector': 'app-navigation-bar'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'ResetPasswordModalComponent', 'selector': 'app-reset-password-modal'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SearchInCategoryComponent', 'selector': 'app-search-in-category'},{'name': 'TagSelectionComponent', 'selector': 'app-tag-selection'},{'name': 'UserEditListComponent', 'selector': 'app-user-edit-list'},{'name': 'UserMuseumListComponent', 'selector': 'app-user-museum-list'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'ViewComponent', 'selector': 'app-view'},{'name': 'ViewEditComponent', 'selector': 'app-view-edit'},{'name': 'WikiEntryEditorComponent', 'selector': 'app-wiki-entry-editor'},{'name': 'WikiEntryViewComponent', 'selector': 'app-wiki-entry-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CollectionListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CollectionService.html":{"url":"injectables/CollectionService.html","title":"injectable - CollectionService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CollectionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/wiki-entry/collection.service.ts\n        \n\n            \n                Description\n            \n            \n                Provides interfaces for CRUD collection information\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                serverConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addCollection\n                            \n                            \n                                    Public\n                                getCollection\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(serverConfigService: ServerConfigService, http: HttpClient, userInfoService: UserInfoService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/wiki-entry/collection.service.ts:23\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        serverConfigService\n                                                  \n                                                        \n                                                                        ServerConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Server endpoint url\n\n                                                        \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Http GET/PUT/POST/DELETE apis\n\n                                                        \n                                                \n                                                \n                                                        userInfoService\n                                                  \n                                                        \n                                                                        UserInfoService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Gets user info\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            addCollection\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addCollection(collection: Collection, mode: Mode)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wiki-entry/collection.service.ts:54\n                \n            \n\n\n            \n                \n                    Add/edit a collection\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    collection\n                                    \n                                                Collection\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Collection to be added/edited\n\n                                    \n                                \n                                \n                                    mode\n                                    \n                                                Mode\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        Mode.CREATE\n                                    \n\n                                    \n                                        Whether user is creating or editing the collection\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getCollection\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCollection(id: string | number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wiki-entry/collection.service.ts:43\n                \n            \n\n\n            \n                \n                    Get a collection\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                            string | number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Id of collection\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            serverConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ServerConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/wiki-entry/collection.service.ts:23\n                            \n                        \n\n                \n                    \n                        Stores endpoint url\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {ServerConfigService} from '../config/server-config.service';\nimport {HttpClient} from '@angular/common/http';\nimport {Collection} from '../../models/collection';\nimport {ServerConfig} from '../../config/ServerConfig';\nimport {ProtoCollection} from '../object-prototypes/proto-collection';\nimport {ServerResponse} from '../server-response';\nimport {UserInfoService} from '../user/user-info.service';\nimport {Observable} from 'rxjs';\nimport {Mode} from '../../edit/mode';\n\n/**\n * Provides interfaces for CRUD collection information\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class CollectionService {\n\n  /**\n   * Stores endpoint url\n   */\n  private readonly serverConfig: ServerConfig;\n\n  /**\n   * Constructor\n   *\n   * @param serverConfigService Server endpoint url\n   * @param http Http GET/PUT/POST/DELETE apis\n   * @param userInfoService Gets user info\n   */\n  constructor(private serverConfigService: ServerConfigService,\n              private http: HttpClient,\n              private userInfoService: UserInfoService) {\n    this.serverConfig = serverConfigService.getServerConfig();\n  }\n\n  /**\n   * Get a collection\n   *\n   * @param id Id of collection\n   */\n  public getCollection(id: string | number): Observable {\n    return this.http\n      .get(this.serverConfig.getUrl() + 'collection/' + id);\n  }\n\n  /**\n   * Add/edit a collection\n   *\n   * @param collection Collection to be added/edited\n   * @param mode Whether user is creating or editing the collection\n   */\n  public addCollection(collection: Collection, mode: Mode = Mode.CREATE): Promise {\n    return this.http\n      .post(\n        this.serverConfig.getUrl() + (mode === Mode.CREATE ? 'add-collection' : 'edit-collection'),\n        {\n          museum: {id: collection.museum.id},\n          collection,\n          user: this.userInfoService.basicUserInfo\n        })\n      .toPromise();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConfirmationModalComponent.html":{"url":"components/ConfirmationModalComponent.html","title":"component - ConfirmationModalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ConfirmationModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/static/confirmation-modal/confirmation-modal.component.ts\n\n\n    \n        Description\n    \n    \n        a modal asking for the user to confirm an action that has an irreversible and detrimental consequence\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-confirmation-modal\n            \n\n            \n                styleUrls\n                ./confirmation-modal.component.css\n            \n\n\n\n            \n                templateUrl\n                ./confirmation-modal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                message\n                            \n                            \n                                modal\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/static/confirmation-modal/confirmation-modal.component.ts:25\n                            \n                        \n\n                \n                    \n                            all members are publicly accessible, so no constructor is needed\n\n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/static/confirmation-modal/confirmation-modal.component.ts:20\n                            \n                        \n\n                \n                    \n                        message displayed in the modal\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modal\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     NgbActiveModal\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/static/confirmation-modal/confirmation-modal.component.ts:25\n                            \n                        \n\n                \n                    \n                        the modal class that contains the content of this component;\nneed this information so that the modal can be closed on user click\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/static/confirmation-modal/confirmation-modal.component.ts:16\n                            \n                        \n\n                \n                    \n                        title on top of modal\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {Component, Input, OnInit} from '@angular/core';\nimport {NgbActiveModal} from '@ng-bootstrap/ng-bootstrap';\n\n/**\n * a modal asking for the user to confirm an action that has an irreversible and detrimental consequence\n */\n@Component({\n  selector: 'app-confirmation-modal',\n  templateUrl: './confirmation-modal.component.html',\n  styleUrls: ['./confirmation-modal.component.css']\n})\nexport class ConfirmationModalComponent {\n  /**\n   * title on top of modal\n   */\n  title: string;\n  /**\n   * message displayed in the modal\n   */\n  message: string;\n  /**\n   * the modal class that contains the content of this component;\n   * need this information so that the modal can be closed on user click\n   */\n  modal: NgbActiveModal;\n\n  /**\n   * all members are publicly accessible, so no constructor is needed\n   */\n  constructor() { }\n\n}\n\n    \n\n    \n        \n  {{title}}\n\n\n  {{message}}\n\n\n  Yes\n  No\n\n\n    \n\n    \n                \n                    ./confirmation-modal.component.css\n                \n                button {\n  outline: none;\n  box-shadow: none;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{title}}  {{message}}  Yes  No'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollectionListComponent', 'selector': 'app-collection-list'},{'name': 'ConfirmationModalComponent', 'selector': 'app-confirmation-modal'},{'name': 'CreateComponent', 'selector': 'app-create'},{'name': 'EditComponent', 'selector': 'app-edit'},{'name': 'EditOrCreateComponent', 'selector': 'app-edit-or-create'},{'name': 'EntryListComponent', 'selector': 'app-entry-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownDisplayComponent', 'selector': 'app-markdown-display'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'ModalMessageComponent', 'selector': 'app-modal-message'},{'name': 'MuseumListComponent', 'selector': 'app-museum-list'},{'name': 'NavigationBarComponent', 'selector': 'app-navigation-bar'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'ResetPasswordModalComponent', 'selector': 'app-reset-password-modal'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SearchInCategoryComponent', 'selector': 'app-search-in-category'},{'name': 'TagSelectionComponent', 'selector': 'app-tag-selection'},{'name': 'UserEditListComponent', 'selector': 'app-user-edit-list'},{'name': 'UserMuseumListComponent', 'selector': 'app-user-museum-list'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'ViewComponent', 'selector': 'app-view'},{'name': 'ViewEditComponent', 'selector': 'app-view-edit'},{'name': 'WikiEntryEditorComponent', 'selector': 'app-wiki-entry-editor'},{'name': 'WikiEntryViewComponent', 'selector': 'app-wiki-entry-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ConfirmationModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CreateComponent.html":{"url":"components/CreateComponent.html","title":"component - CreateComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CreateComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/edit/create/create.component.ts\n\n\n    \n        Description\n    \n    \n        Create a museum/collection/artifact\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-create\n            \n\n            \n                styleUrls\n                ./create.component.css\n            \n\n\n\n            \n                templateUrl\n                ./create.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                category\n                            \n                            \n                                    Readonly\n                                create\n                            \n                            \n                                museumId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/edit/create/create.component.ts:27\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The current Url\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/edit/create/create.component.ts:40\n                \n            \n\n\n            \n                \n                    Analyze the parameters in the Url to retrieve category and museum id information\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            category\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit/create/create.component.ts:18\n                            \n                        \n\n                \n                    \n                        Category of new object\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            create\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Mode.CREATE\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit/create/create.component.ts:27\n                            \n                        \n\n                \n                    \n                        Create mode. Passed as a parameter to app-edit-or-create.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            museumId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit/create/create.component.ts:22\n                            \n                        \n\n                \n                    \n                        If category is not museum, stores the id of the museum to which this new object will belong\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute, ParamMap} from '@angular/router';\nimport {Mode} from '../mode';\n\n/**\n * Create a museum/collection/artifact\n */\n@Component({\n  selector: 'app-create',\n  templateUrl: './create.component.html',\n  styleUrls: ['./create.component.css']\n})\nexport class CreateComponent implements OnInit {\n\n  /**\n   * Category of new object\n   */\n  category: string;\n  /**\n   * If category is not museum, stores the id of the museum to which this new object will belong\n   */\n  museumId: string;\n\n  /**\n   * Create mode. Passed as a parameter to app-edit-or-create.\n   */\n  readonly create = Mode.CREATE;\n\n  /**\n   * Constructor\n   *\n   * @param route The current Url\n   */\n  constructor(private route: ActivatedRoute) {\n  }\n\n  /**\n   * Analyze the parameters in the Url to retrieve category and museum id information\n   */\n  ngOnInit(): void {\n    this.route.paramMap.subscribe((params: ParamMap) => {\n      this.category = params.get('category');\n\n      if (this.category !== 'museum') {\n        this.museumId = params.get('museumId');\n      }\n    });\n  }\n\n}\n\n    \n\n    \n        \n\n\n    \n\n    \n                \n                    ./create.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollectionListComponent', 'selector': 'app-collection-list'},{'name': 'ConfirmationModalComponent', 'selector': 'app-confirmation-modal'},{'name': 'CreateComponent', 'selector': 'app-create'},{'name': 'EditComponent', 'selector': 'app-edit'},{'name': 'EditOrCreateComponent', 'selector': 'app-edit-or-create'},{'name': 'EntryListComponent', 'selector': 'app-entry-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownDisplayComponent', 'selector': 'app-markdown-display'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'ModalMessageComponent', 'selector': 'app-modal-message'},{'name': 'MuseumListComponent', 'selector': 'app-museum-list'},{'name': 'NavigationBarComponent', 'selector': 'app-navigation-bar'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'ResetPasswordModalComponent', 'selector': 'app-reset-password-modal'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SearchInCategoryComponent', 'selector': 'app-search-in-category'},{'name': 'TagSelectionComponent', 'selector': 'app-tag-selection'},{'name': 'UserEditListComponent', 'selector': 'app-user-edit-list'},{'name': 'UserMuseumListComponent', 'selector': 'app-user-museum-list'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'ViewComponent', 'selector': 'app-view'},{'name': 'ViewEditComponent', 'selector': 'app-view-edit'},{'name': 'WikiEntryEditorComponent', 'selector': 'app-wiki-entry-editor'},{'name': 'WikiEntryViewComponent', 'selector': 'app-wiki-entry-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CreateComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Edit.html":{"url":"classes/Edit.html","title":"class - Edit","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Edit\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/edit.ts\n        \n\n            \n                Description\n            \n            \n                Describes a change made to an object.\nCan be either add, delete, or edit something.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                approvalStatus\n                            \n                            \n                                artifact\n                            \n                            \n                                category\n                            \n                            \n                                collection\n                            \n                            \n                                date\n                            \n                            \n                                id\n                            \n                            \n                                museum\n                            \n                            \n                                reviewerUsername\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            approvalStatus\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/edit.ts:41\n                            \n                        \n\n                \n                    \n                        Whether this edit is approved.\nCan be: approved, denied, or under review\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            artifact\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Artifact\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/edit.ts:26\n                            \n                        \n\n                \n                    \n                        If an artifact is changed, the changed object will be stored here.\nIf not, this will be undefined.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            category\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/edit.ts:21\n                            \n                        \n\n                \n                    \n                        Category of the modified object: museum, collection, artifact\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            collection\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Collection\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/edit.ts:31\n                            \n                        \n\n                \n                    \n                        If a collection is changed, the changed object will be stored here.\nIf not, this will be undefined.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            date\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/edit.ts:46\n                            \n                        \n\n                \n                    \n                        The date and time at which this edit proposal is made.\nShould be a ISO 8601 date representation.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/edit.ts:13\n                            \n                        \n\n                \n                    \n                        The id of this edit\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            museum\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Museum\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/edit.ts:36\n                            \n                        \n\n                \n                    \n                        If a museum is changed, the changed object will be stored here.\nIf not, this will be undefined.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reviewerUsername\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/edit.ts:50\n                            \n                        \n\n                \n                    \n                        The username of the person responsible for reviewing it.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/edit.ts:17\n                            \n                        \n\n                \n                    \n                        The type of edit: addition, deletion, edit\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Artifact} from './artifact';\nimport {Collection} from './collection';\nimport {Museum} from './museum';\n\n/**\n * Describes a change made to an object.\n * Can be either add, delete, or edit something.\n */\nexport class Edit {\n  /**\n   * The id of this edit\n   */\n  id: number;\n  /**\n   * The type of edit: addition, deletion, edit\n   */\n  type: string;\n  /**\n   * Category of the modified object: museum, collection, artifact\n   */\n  category: string;\n  /**\n   * If an artifact is changed, the changed object will be stored here.\n   * If not, this will be undefined.\n   */\n  artifact: Artifact;\n  /**\n   * If a collection is changed, the changed object will be stored here.\n   * If not, this will be undefined.\n   */\n  collection: Collection;\n  /**\n   * If a museum is changed, the changed object will be stored here.\n   * If not, this will be undefined.\n   */\n  museum: Museum;\n  /**\n   * Whether this edit is approved.\n   * Can be: approved, denied, or under review\n   */\n  approvalStatus: string;\n  /**\n   * The date and time at which this edit proposal is made.\n   * Should be a ISO 8601 date representation.\n   */\n  date: string;\n  /**\n   * The username of the person responsible for reviewing it.\n   */\n  reviewerUsername: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EditBuilder.html":{"url":"classes/EditBuilder.html","title":"class - EditBuilder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EditBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/builders/edit-builder.ts\n        \n\n            \n                Description\n            \n            \n                Builder for edit class\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                edit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                approvalStatus\n                            \n                            \n                                artifact\n                            \n                            \n                                build\n                            \n                            \n                                category\n                            \n                            \n                                collection\n                            \n                            \n                                date\n                            \n                            \n                                id\n                            \n                            \n                                museum\n                            \n                            \n                                reviewerUsername\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/models/builders/edit-builder.ts:13\n                            \n                        \n\n                \n                    \n                            Creates an empty edit object\n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            edit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Edit\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/builders/edit-builder.ts:13\n                            \n                        \n\n                \n                    \n                        The edit prepared by this builder\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            approvalStatus\n                        \n                        \n                    \n                \n            \n            \n                \napprovalStatus(value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/builders/edit-builder.ts:87\n                \n            \n\n\n            \n                \n                    Builder method for approval status\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Approval status\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         EditBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            artifact\n                        \n                        \n                    \n                \n            \n            \n                \nartifact(value: Artifact)\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/builders/edit-builder.ts:57\n                \n            \n\n\n            \n                \n                    Builder method for artifact\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                Artifact\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Artifact\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         EditBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            build\n                        \n                        \n                    \n                \n            \n            \n                \nbuild()\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/builders/edit-builder.ts:117\n                \n            \n\n\n            \n                \n                    Create the desired edit object\n\n\n                    \n                        Returns :         Edit\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            category\n                        \n                        \n                    \n                \n            \n            \n                \ncategory(category: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/builders/edit-builder.ts:47\n                \n            \n\n\n            \n                \n                    Builder method for category\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    category\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Category\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         EditBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            collection\n                        \n                        \n                    \n                \n            \n            \n                \ncollection(value: Collection)\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/builders/edit-builder.ts:67\n                \n            \n\n\n            \n                \n                    Builder method for collection\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                Collection\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Collection\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         EditBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            date\n                        \n                        \n                    \n                \n            \n            \n                \ndate(value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/builders/edit-builder.ts:107\n                \n            \n\n\n            \n                \n                    Builder method for date of edit\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Date\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         EditBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            id\n                        \n                        \n                    \n                \n            \n            \n                \nid(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/builders/edit-builder.ts:27\n                \n            \n\n\n            \n                \n                    Builder method for id\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Id of edit\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         EditBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            museum\n                        \n                        \n                    \n                \n            \n            \n                \nmuseum(value: Museum)\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/builders/edit-builder.ts:77\n                \n            \n\n\n            \n                \n                    Builder method for museum\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                Museum\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Museum\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         EditBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            reviewerUsername\n                        \n                        \n                    \n                \n            \n            \n                \nreviewerUsername(value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/builders/edit-builder.ts:97\n                \n            \n\n\n            \n                \n                    Builder method for reviewer username\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Username of the reviewer\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         EditBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            type\n                        \n                        \n                    \n                \n            \n            \n                \ntype(type: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/builders/edit-builder.ts:37\n                \n            \n\n\n            \n                \n                    Builder method for type\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Type\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         EditBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {Edit} from '../edit';\nimport {Artifact} from '../artifact';\nimport {Collection} from '../collection';\nimport {Museum} from '../museum';\n\n/**\n * Builder for edit class\n */\nexport class EditBuilder {\n  /**\n   * The edit prepared by this builder\n   */\n  edit: Edit;\n\n  /**\n   * Creates an empty edit object\n   */\n  constructor() {\n    this.edit = new Edit();\n  }\n\n  /**\n   * Builder method for id\n   *\n   * @param id Id of edit\n   */\n  id(id: number): EditBuilder {\n    this.edit.id = id;\n    return this;\n  }\n\n  /**\n   * Builder method for type\n   *\n   * @param type Type\n   */\n  type(type: string): EditBuilder {\n    this.edit.type = type;\n    return this;\n  }\n\n  /**\n   * Builder method for category\n   *\n   * @param category Category\n   */\n  category(category: string): EditBuilder {\n    this.edit.category = category;\n    return this;\n  }\n\n  /**\n   * Builder method for artifact\n   *\n   * @param value Artifact\n   */\n  artifact(value: Artifact): EditBuilder {\n    this.edit.artifact = value;\n    return this;\n  }\n\n  /**\n   * Builder method for collection\n   *\n   * @param value Collection\n   */\n  collection(value: Collection): EditBuilder {\n    this.edit.collection = value;\n    return this;\n  }\n\n  /**\n   * Builder method for museum\n   *\n   * @param value Museum\n   */\n  museum(value: Museum): EditBuilder {\n    this.edit.museum = value;\n    return this;\n  }\n\n  /**\n   * Builder method for approval status\n   *\n   * @param value Approval status\n   */\n  approvalStatus(value: string): EditBuilder {\n    this.edit.approvalStatus = value;\n    return this;\n  }\n\n  /**\n   * Builder method for reviewer username\n   *\n   * @param value Username of the reviewer\n   */\n  reviewerUsername(value: string): EditBuilder {\n    this.edit.reviewerUsername = value;\n    return this;\n  }\n\n  /**\n   * Builder method for date of edit\n   *\n   * @param value Date\n   */\n  date(value: string): EditBuilder {\n    if (value) {\n      this.edit.date = value;\n    }\n    return this;\n  }\n\n  /**\n   * Create the desired edit object\n   */\n  build(): Edit {\n    return this.edit;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditComponent.html":{"url":"components/EditComponent.html","title":"component - EditComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EditComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/edit/edit/edit.component.ts\n\n\n    \n        Description\n    \n    \n        Edit an existing entry\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-edit\n            \n\n            \n                styleUrls\n                ./edit.component.css\n            \n\n\n\n            \n                templateUrl\n                ./edit.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                category\n                            \n                            \n                                    Readonly\n                                edit\n                            \n                            \n                                error\n                            \n                            \n                                existingObject\n                            \n                            \n                                id\n                            \n                            \n                                loading\n                            \n                            \n                                museumId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, getByCategoryService: GetByCategoryService, projectConfigService: ProjectConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/app/edit/edit/edit.component.ts:57\n                            \n                        \n\n                \n                    \n                            Constructor.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The current Url.\n\n                                                        \n                                                \n                                                \n                                                        getByCategoryService\n                                                  \n                                                        \n                                                                        GetByCategoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Gets a corresponding object of a certain category and id.\n\n                                                        \n                                                \n                                                \n                                                        projectConfigService\n                                                  \n                                                        \n                                                                        ProjectConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Project configuration for determining whether the program should log in console.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/edit/edit/edit.component.ts:78\n                \n            \n\n\n            \n                \n                    Analyze the url and make a request for the existing object.\nAfter the object is received, show the edit page which contains information\nof the original object.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            category\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit/edit/edit.component.ts:29\n                            \n                        \n\n                \n                    \n                        Category of the entry to be edited.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            edit\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Mode.EDIT\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit/edit/edit.component.ts:43\n                            \n                        \n\n                \n                    \n                        Edit object passed as a parameter to the editor\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit/edit/edit.component.ts:57\n                            \n                        \n\n                \n                    \n                        Whether there's an error when trying to retrieve server data\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            existingObject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Museum | Collection | Artifact\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit/edit/edit.component.ts:48\n                            \n                        \n\n                \n                    \n                        The existing museum/collection/artifact\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number | string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit/edit/edit.component.ts:33\n                            \n                        \n\n                \n                    \n                        Id of edited entry.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit/edit/edit.component.ts:53\n                            \n                        \n\n                \n                    \n                        Whether the program is waiting for backend server's response\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            museumId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit/edit/edit.component.ts:38\n                            \n                        \n\n                \n                    \n                        If category is not museum, this will be id of museum to which the entry belongs.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute, ParamMap} from '@angular/router';\nimport {Mode} from '../mode';\nimport {GetByCategoryService} from '../../services/get-by-category.service';\nimport {ProtoMuseum} from '../../services/object-prototypes/proto-museum';\nimport {ProtoCollection} from '../../services/object-prototypes/proto-collection';\nimport {ProtoArtifact} from '../../services/object-prototypes/proto-artifact';\nimport {Museum} from '../../models/museum';\nimport {Collection} from '../../models/collection';\nimport {Artifact} from '../../models/artifact';\nimport {HttpErrorResponse} from '@angular/common/http';\nimport {PrototypeBuilder} from '../../models/builders/prototype-builder';\nimport {ProjectConfig} from '../../config/ProjectConfig';\nimport {ProjectConfigService} from '../../services/config/project-config.service';\n\n/**\n * Edit an existing entry\n */\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.css']\n})\nexport class EditComponent implements OnInit {\n\n  /**\n   * Category of the entry to be edited.\n   */\n  category: string;\n  /**\n   * Id of edited entry.\n   */\n  id: number | string;\n\n  /**\n   * If category is not museum, this will be id of museum to which the entry belongs.\n   */\n  museumId: number;\n\n  /**\n   * Edit object passed as a parameter to the editor\n   */\n  readonly edit = Mode.EDIT;\n\n  /**\n   * The existing museum/collection/artifact\n   */\n  existingObject: Museum | Collection | Artifact;\n\n  /**\n   * Whether the program is waiting for backend server's response\n   */\n  loading: boolean;\n  /**\n   * Whether there's an error when trying to retrieve server data\n   */\n  error: boolean;\n\n  /**\n   * Constructor.\n   *\n   * @param route The current Url.\n   * @param getByCategoryService Gets a corresponding object of a certain category and id.\n   * @param projectConfigService Project configuration for determining whether the program should log in console.\n   */\n  constructor(private route: ActivatedRoute,\n              private getByCategoryService: GetByCategoryService,\n              private projectConfigService: ProjectConfigService) {\n    this.loading = true;\n    this.error = false;\n  }\n\n  /**\n   * Analyze the url and make a request for the existing object.\n   * After the object is received, show the edit page which contains information\n   * of the original object.\n   */\n  ngOnInit(): void {\n    this.route.paramMap.subscribe((params: ParamMap) => {\n      this.category = params.get('category');\n\n      this.id = params.get('id');\n    });\n\n    this.getByCategoryService\n      .getByCategoryAndId(this.category, this.id).subscribe(\n      (res: ProtoMuseum | ProtoCollection | ProtoArtifact) => {\n        const prototype = {};\n        prototype[this.category] = res;\n        this.existingObject = PrototypeBuilder.buildFromPrototype(prototype);\n        if (this.projectConfigService.getProjectConfig().isLogging()) {\n          console.log('Existing object of type ' + this.category);\n          console.log(this.existingObject);\n        }\n        if (this.category !== 'museum') {\n          this.museumId = res.museum.id;\n        }\n        this.loading = false;\n      },\n      (err: HttpErrorResponse) => {\n        this.error = true;\n        console.log(err);\n      });\n\n  }\n}\n\n    \n\n    \n        \n\n\n\n\n    \n\n    \n                \n                    ./edit.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollectionListComponent', 'selector': 'app-collection-list'},{'name': 'ConfirmationModalComponent', 'selector': 'app-confirmation-modal'},{'name': 'CreateComponent', 'selector': 'app-create'},{'name': 'EditComponent', 'selector': 'app-edit'},{'name': 'EditOrCreateComponent', 'selector': 'app-edit-or-create'},{'name': 'EntryListComponent', 'selector': 'app-entry-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownDisplayComponent', 'selector': 'app-markdown-display'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'ModalMessageComponent', 'selector': 'app-modal-message'},{'name': 'MuseumListComponent', 'selector': 'app-museum-list'},{'name': 'NavigationBarComponent', 'selector': 'app-navigation-bar'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'ResetPasswordModalComponent', 'selector': 'app-reset-password-modal'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SearchInCategoryComponent', 'selector': 'app-search-in-category'},{'name': 'TagSelectionComponent', 'selector': 'app-tag-selection'},{'name': 'UserEditListComponent', 'selector': 'app-user-edit-list'},{'name': 'UserMuseumListComponent', 'selector': 'app-user-museum-list'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'ViewComponent', 'selector': 'app-view'},{'name': 'ViewEditComponent', 'selector': 'app-view-edit'},{'name': 'WikiEntryEditorComponent', 'selector': 'app-wiki-entry-editor'},{'name': 'WikiEntryViewComponent', 'selector': 'app-wiki-entry-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditOrCreateComponent.html":{"url":"components/EditOrCreateComponent.html","title":"component - EditOrCreateComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EditOrCreateComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/edit/edit-or-create/edit-or-create.component.ts\n\n\n    \n        Description\n    \n    \n        An editor that allows the user to edit information of an existing entry or a new entry.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-edit-or-create\n            \n\n            \n                styleUrls\n                ./edit-or-create.component.css\n            \n\n\n\n            \n                templateUrl\n                ./edit-or-create.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                createMode\n                            \n                            \n                                existingArtifact\n                            \n                            \n                                tagSelection\n                            \n                            \n                                wikiEntryEditor\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canSubmit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                processPromiseResponse\n                            \n                            \n                                    Public\n                                submit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                category\n                            \n                            \n                                existingObject\n                            \n                            \n                                mode\n                            \n                            \n                                museumId\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, museumService: MuseumService, collectionService: CollectionService, artifactService: ArtifactService, modalService: NgbModal, projectConfigService: ProjectConfigService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/edit/edit-or-create/edit-or-create.component.ts:79\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The current Url\n\n                                                        \n                                                \n                                                \n                                                        museumService\n                                                  \n                                                        \n                                                                        MuseumService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Uploads the museum info\n\n                                                        \n                                                \n                                                \n                                                        collectionService\n                                                  \n                                                        \n                                                                        CollectionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Uploads collection info\n\n                                                        \n                                                \n                                                \n                                                        artifactService\n                                                  \n                                                        \n                                                                        ArtifactService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Uploads artifact info\n\n                                                        \n                                                \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                    NgbModal\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Opens new modal for user feedback\n\n                                                        \n                                                \n                                                \n                                                        projectConfigService\n                                                  \n                                                        \n                                                                        ProjectConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Stores logging configs\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Automatically routes user after successful edit/create\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        category\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/edit/edit-or-create/edit-or-create.component.ts:38\n                            \n                        \n                \n                    \n                        Category of current object.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        existingObject\n                    \n                \n                \n                    \n                        Type :     Museum | Collection | Artifact\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/edit/edit-or-create/edit-or-create.component.ts:47\n                            \n                        \n                \n                    \n                        The existing entry. Will be undefined if in create mode.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        mode\n                    \n                \n                \n                    \n                        Type :         Mode\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/edit/edit-or-create/edit-or-create.component.ts:58\n                            \n                        \n                \n                    \n                        The current Mode.\nCan either be edit or create.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        museumId\n                    \n                \n                \n                    \n                        Type :     number | string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/edit/edit-or-create/edit-or-create.component.ts:42\n                            \n                        \n                \n                    \n                        If category is not museum, stores the id of the museum to which this entry belongs.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canSubmit\n                        \n                        \n                    \n                \n            \n            \n                \ncanSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/edit/edit-or-create/edit-or-create.component.ts:143\n                \n            \n\n\n            \n                \n                    Returns whether the current changes are valid and thus whether they can be submitted\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/edit/edit-or-create/edit-or-create.component.ts:105\n                \n            \n\n\n            \n                \n                    Log current status\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            processPromiseResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    processPromiseResponse(promise: Promise, modalComponent: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/edit/edit-or-create/edit-or-create.component.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    promise\n                                    \n                                            Promise\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    modalComponent\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            submit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    submit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/edit/edit-or-create/edit-or-create.component.ts:151\n                \n            \n\n\n            \n                \n                    Submit current changes\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ProjectConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit/edit-or-create/edit-or-create.component.ts:79\n                            \n                        \n\n                \n                    \n                        Project config which stores logging settings\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createMode\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Mode.CREATE\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit/edit-or-create/edit-or-create.component.ts:62\n                            \n                        \n\n                \n                    \n                        Create mode. Used for comparisons in the HTML template.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            existingArtifact\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Artifact\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit/edit-or-create/edit-or-create.component.ts:52\n                            \n                        \n\n                \n                    \n                        The existing artifact.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tagSelection\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TagSelectionComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(TagSelectionComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit/edit-or-create/edit-or-create.component.ts:74\n                            \n                        \n\n                \n                    \n                        If category is artifact, need to see the selections in tag selection component\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            wikiEntryEditor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         WikiEntryEditorComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(WikiEntryEditorComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit/edit-or-create/edit-or-create.component.ts:68\n                            \n                        \n\n                \n                    \n                        Look into the form in the wiki entry editor\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {Component, Input, OnInit, ViewChild} from '@angular/core';\nimport {ActivatedRoute, ParamMap, Router} from '@angular/router';\nimport {MuseumService} from '../../services/wiki-entry/museum.service';\nimport {Museum} from '../../models/museum';\nimport {WikiEntryEditorComponent} from '../wiki-entry-editor/wiki-entry-editor.component';\nimport {NgbModal} from '@ng-bootstrap/ng-bootstrap';\nimport {ModalMessageComponent} from '../../static/modal-message/modal-message.component';\nimport {ServerResponse} from '../../services/server-response';\nimport {HttpErrorResponse} from '@angular/common/http';\nimport {capitalizeFirstLetter} from '../../helper/capitalize-first-letter';\nimport {Collection} from '../../models/collection';\nimport {CollectionService} from '../../services/wiki-entry/collection.service';\nimport {BasicEntry} from '../../models/basic-entry';\nimport {ProjectConfigService} from '../../services/config/project-config.service';\nimport {ProjectConfig} from '../../config/ProjectConfig';\nimport {ArtifactBuilder} from '../../models/builders/artifact-builder';\nimport {BasicEntryBuilder} from '../../models/builders/basic-entry-builder';\nimport {ArtifactService} from '../../services/wiki-entry/artifact.service';\nimport {TagSelectionComponent} from '../tag-selection/tag-selection.component';\nimport {Mode} from '../mode';\nimport {Artifact} from '../../models/artifact';\nimport {MuseumBuilder} from '../../models/builders/museum-builder';\nimport {CollectionBuilder} from '../../models/builders/collection-builder';\n\n/**\n * An editor that allows the user to edit information of an existing entry or a new entry.\n */\n@Component({\n  selector: 'app-edit-or-create',\n  templateUrl: './edit-or-create.component.html',\n  styleUrls: ['./edit-or-create.component.css']\n})\nexport class EditOrCreateComponent implements OnInit {\n\n  /**\n   * Category of current object.\n   */\n  @Input() category: string;\n  /**\n   * If category is not museum, stores the id of the museum to which this entry belongs.\n   */\n  @Input() museumId: number | string;\n\n  /**\n   * The existing entry. Will be undefined if in create mode.\n   */\n  @Input() existingObject: Museum | Collection | Artifact;\n\n  /**\n   * The existing artifact.\n   */\n  existingArtifact: Artifact;\n\n  /**\n   * The current Mode.\n   * Can either be edit or create.\n   */\n  @Input() mode: Mode;\n  /**\n   * Create mode. Used for comparisons in the HTML template.\n   */\n  createMode = Mode.CREATE;\n\n  /**\n   * Look into the form in the wiki entry editor\n   */\n  @ViewChild(WikiEntryEditorComponent)\n  wikiEntryEditor: WikiEntryEditorComponent;\n\n  /**\n   * If category is artifact, need to see the selections in tag selection component\n   */\n  @ViewChild(TagSelectionComponent)\n  tagSelection: TagSelectionComponent;\n\n  /**\n   * Project config which stores logging settings\n   */\n  config: ProjectConfig;\n\n  /**\n   * Constructor\n   *\n   * @param route The current Url\n   * @param museumService Uploads the museum info\n   * @param collectionService Uploads collection info\n   * @param artifactService Uploads artifact info\n   * @param modalService Opens new modal for user feedback\n   * @param projectConfigService Stores logging configs\n   * @param router Automatically routes user after successful edit/create\n   */\n  constructor(private route: ActivatedRoute,\n              private museumService: MuseumService,\n              private collectionService: CollectionService,\n              private artifactService: ArtifactService,\n              private modalService: NgbModal,\n              private projectConfigService: ProjectConfigService,\n              private router: Router) {\n    this.config = this.projectConfigService.getProjectConfig();\n  }\n\n  /**\n   * Log current status\n   */\n  ngOnInit(): void {\n    if (this.config.isLogging()) {\n      console.log(EditOrCreateComponent.name);\n      console.log('Mode: ' + this.mode);\n      console.log('Existing object:');\n      console.log(this.existingObject);\n    }\n\n    if (this.mode === Mode.EDIT) {\n      if (this.category === 'artifact') {\n        this.existingArtifact = this.existingObject as Artifact;\n      }\n    }\n  }\n\n  private processPromiseResponse(promise: Promise, modalComponent: any): void {\n    promise.then((res: ServerResponse) => {\n        if (this.config.isLogging()) {\n          console.log(res);\n        }\n        modalComponent.fromServerResponse(res);\n        if (res.success) {\n          setTimeout(() => {\n              this.router.navigateByUrl('/user-profile');\n            },\n            3000\n          );\n        }\n      },\n      (err: HttpErrorResponse) => {\n        modalComponent.fromNetworkError(err);\n        console.log(err);\n      });\n  }\n\n  /**\n   * Returns whether the current changes are valid and thus whether they can be submitted\n   */\n  canSubmit(): boolean {\n    return this.wikiEntryEditor?.wikiEntryFormGroup?.valid\n      && (this.category !== 'artifact' || this.tagSelection.getAllSelectedTags().length > 0);\n  }\n\n  /**\n   * Submit current changes\n   */\n  public submit(): void {\n    if (!this.canSubmit()) {\n      return;\n    }\n    const modal = this.modalService.open(ModalMessageComponent);\n    const modalComponent = modal.componentInstance;\n    modalComponent.title = (this.mode === Mode.CREATE ? 'Create New ' : 'Edit ') + capitalizeFirstLetter(this.category);\n    modalComponent.modal = modal;\n    modalComponent.waitingForServerResponse();\n\n    if (this.category === 'museum') {\n      const newMuseum =\n        new MuseumBuilder()\n          .wikiEntry(this.wikiEntryEditor.getWikiEntry())\n          .build();\n\n      if (this.config.isLogging()) {\n        console.log(newMuseum);\n      }\n      this.processPromiseResponse(\n        this.museumService.addMuseum(newMuseum, this.mode),\n        modalComponent,\n      );\n    } else if (this.category === 'collection') {\n      const newCollection = new CollectionBuilder()\n        .wikiEntry(this.wikiEntryEditor.getWikiEntry())\n        .museum(new BasicEntry('', this.museumId))\n        .build();\n      if (this.config.isLogging()) {\n        console.log(newCollection);\n      }\n      this.processPromiseResponse(\n        this.collectionService.addCollection(newCollection, this.mode),\n        modalComponent,\n      );\n    } else if (this.category === 'artifact') {\n      const newArtifact =\n        new ArtifactBuilder()\n          .wikiEntry(this.wikiEntryEditor.getWikiEntry())\n          .museum(new BasicEntryBuilder().id(this.museumId).build())\n          .collectionList(this.tagSelection.getAllSelectedTags())\n          .build();\n      if (this.config.isLogging()) {\n        console.log(this.tagSelection.getAllSelectedTags());\n        console.log(newArtifact);\n      }\n      this.processPromiseResponse(\n        this.artifactService.addArtifact(newArtifact, this.mode),\n        modalComponent\n      );\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    Please edit {{category}} info\n  \n  \n    Back\n  \n  \n    Submit\n  \n  \n\n\n\n\n\n\n\n    \n\n    \n                \n                    ./edit-or-create.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Please edit {{category}} info        Back        Submit    '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollectionListComponent', 'selector': 'app-collection-list'},{'name': 'ConfirmationModalComponent', 'selector': 'app-confirmation-modal'},{'name': 'CreateComponent', 'selector': 'app-create'},{'name': 'EditComponent', 'selector': 'app-edit'},{'name': 'EditOrCreateComponent', 'selector': 'app-edit-or-create'},{'name': 'EntryListComponent', 'selector': 'app-entry-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownDisplayComponent', 'selector': 'app-markdown-display'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'ModalMessageComponent', 'selector': 'app-modal-message'},{'name': 'MuseumListComponent', 'selector': 'app-museum-list'},{'name': 'NavigationBarComponent', 'selector': 'app-navigation-bar'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'ResetPasswordModalComponent', 'selector': 'app-reset-password-modal'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SearchInCategoryComponent', 'selector': 'app-search-in-category'},{'name': 'TagSelectionComponent', 'selector': 'app-tag-selection'},{'name': 'UserEditListComponent', 'selector': 'app-user-edit-list'},{'name': 'UserMuseumListComponent', 'selector': 'app-user-museum-list'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'ViewComponent', 'selector': 'app-view'},{'name': 'ViewEditComponent', 'selector': 'app-view-edit'},{'name': 'WikiEntryEditorComponent', 'selector': 'app-wiki-entry-editor'},{'name': 'WikiEntryViewComponent', 'selector': 'app-wiki-entry-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditOrCreateComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EditService.html":{"url":"injectables/EditService.html","title":"injectable - EditService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  EditService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/edit.service.ts\n        \n\n            \n                Description\n            \n            \n                Edit related server interactions\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                projectConfig\n                            \n                            \n                                    Private\n                                    Readonly\n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getEdit\n                            \n                            \n                                reviewEdit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, serverConfigService: ServerConfigService, userInfoService: UserInfoService, projectConfigService: ProjectConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/edit.service.ts:31\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Http request api\n\n                                                        \n                                                \n                                                \n                                                        serverConfigService\n                                                  \n                                                        \n                                                                        ServerConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Server configuration\n\n                                                        \n                                                \n                                                \n                                                        userInfoService\n                                                  \n                                                        \n                                                                        UserInfoService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                User information\n\n                                                        \n                                                \n                                                \n                                                        projectConfigService\n                                                  \n                                                        \n                                                                        ProjectConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Project configuration\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getEdit\n                        \n                        \n                    \n                \n            \n            \n                \ngetEdit(id: number | string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/edit.service.ts:70\n                \n            \n\n\n            \n                \n                    Get detailed information of an edit\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                            number | string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Id of edit\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            reviewEdit\n                        \n                        \n                    \n                \n            \n            \n                \nreviewEdit(edit: Edit, action: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/edit.service.ts:55\n                \n            \n\n\n            \n                \n                    Review an edit\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    edit\n                                    \n                                                Edit\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The edit to be reviewed\n\n                                    \n                                \n                                \n                                    action\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        True if edit is approved; false otherwise\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            projectConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ProjectConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/edit.service.ts:31\n                            \n                        \n\n                \n                    \n                        Project configuration\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            url\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/edit.service.ts:26\n                            \n                        \n\n                \n                    \n                        Server endpoint url\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {UserInfoService} from './user/user-info.service';\nimport {Observable} from 'rxjs';\nimport {ProtoEdit} from './object-prototypes/proto-edit';\nimport {ServerResponse} from './server-response';\nimport {HttpClient} from '@angular/common/http';\nimport {ServerConfigService} from './config/server-config.service';\nimport {ProjectConfigService} from './config/project-config.service';\nimport {ProjectConfig} from '../config/ProjectConfig';\nimport {ProtoArtifact} from './object-prototypes/proto-artifact';\nimport {Mocker} from './mocker';\nimport {Mock} from 'protractor/built/driverProviders';\nimport {Edit} from '../models/edit';\n\n/**\n * Edit related server interactions\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class EditService {\n\n  /**\n   * Server endpoint url\n   */\n  private readonly url: string;\n\n  /**\n   * Project configuration\n   */\n  private readonly projectConfig: ProjectConfig;\n\n  /**\n   * Constructor\n   *\n   * @param http Http request api\n   * @param serverConfigService Server configuration\n   * @param userInfoService User information\n   * @param projectConfigService Project configuration\n   */\n  constructor(private http: HttpClient,\n              private serverConfigService: ServerConfigService,\n              private userInfoService: UserInfoService,\n              private projectConfigService: ProjectConfigService) {\n    this.url = serverConfigService.getServerConfig().getUrl();\n    this.projectConfig = projectConfigService.getProjectConfig();\n  }\n\n  /**\n   * Review an edit\n   *\n   * @param edit The edit to be reviewed\n   * @param action True if edit is approved; false otherwise\n   */\n  reviewEdit(edit: Edit, action: boolean): Promise {\n    return this.http.post(this.url + 'review-edit', {\n      user: this.userInfoService.basicUserInfo,\n      editId: edit.id,\n      category: edit.category,\n      type: edit.type,\n      action\n    }).toPromise();\n  }\n\n  /**\n   * Get detailed information of an edit\n   *\n   * @param id Id of edit\n   */\n  getEdit(id: number | string): Observable {\n    if (this.projectConfig.isUsingMockData()) {\n      return new Observable((observer) => {\n        const protoEdit = Mocker.mockProtoEdit();\n        protoEdit.category = 'artifact';\n        protoEdit.artifact = Mocker.mockProtoArtifact();\n        observer.next(protoEdit);\n      });\n    } else {\n      return this.http.get(this.url + 'edit/' + id);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EntryListComponent.html":{"url":"components/EntryListComponent.html","title":"component - EntryListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EntryListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/view/entry-list/entry-list.component.ts\n\n\n    \n        Description\n    \n    \n        Display a list of entries using Bootstrap cards.\nCan display museums, collections, or artifacts.\nSupports searching for keywords.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-entry-list\n            \n\n            \n                styleUrls\n                ./entry-list.component.css\n            \n\n\n\n            \n                templateUrl\n                ./entry-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                displayList\n                            \n                            \n                                page\n                            \n                            \n                                pageSize\n                            \n                            \n                                    Private\n                                projectConfig\n                            \n                            \n                                searchText\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createItem\n                            \n                            \n                                    Private\n                                filterDisplayList\n                            \n                            \n                                goToEntry\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                updateSearch\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                category\n                            \n                            \n                                entryList\n                            \n                            \n                                parentId\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, projectConfigService: ProjectConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/app/view/entry-list/entry-list.component.ts:61\n                            \n                        \n\n                \n                    \n                            Initializes variables\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Route to create/view component after user clicks\n\n                                                        \n                                                \n                                                \n                                                        projectConfigService\n                                                  \n                                                        \n                                                                        ProjectConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Get project config for logging\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        category\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/view/entry-list/entry-list.component.ts:33\n                            \n                        \n                \n                    \n                        The category of the displayed entry list.\nCan be museum, collection, or artifact.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        entryList\n                    \n                \n                \n                    \n                        Type :         WikiEntry[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/view/entry-list/entry-list.component.ts:22\n                            \n                        \n                \n                    \n                        List of all entries.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        parentId\n                    \n                \n                \n                    \n                        Type :     string | number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/view/entry-list/entry-list.component.ts:39\n                            \n                        \n                \n                    \n                        The id of the parent of the entry.\nDoes not exist if category is museum.\nHelps to generated a URL for routing to create component.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createItem\n                        \n                        \n                    \n                \n            \n            \n                \ncreateItem()\n                \n            \n\n\n            \n                \n                    Defined in src/app/view/entry-list/entry-list.component.ts:138\n                \n            \n\n\n            \n                \n                    Triggered when user tries to create an item\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            filterDisplayList\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    filterDisplayList(keywords: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/view/entry-list/entry-list.component.ts:105\n                \n            \n\n\n            \n                \n                    Filter the items within displayList so that only those containing the keywords remain\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    keywords\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        An array of keywords used for filtering\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            goToEntry\n                        \n                        \n                    \n                \n            \n            \n                \ngoToEntry(entry: WikiEntry)\n                \n            \n\n\n            \n                \n                    Defined in src/app/view/entry-list/entry-list.component.ts:96\n                \n            \n\n\n            \n                \n                    Go to the view of a certain entry\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    entry\n                                    \n                                                WikiEntry\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Destination entry object\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in src/app/view/entry-list/entry-list.component.ts:87\n                \n            \n\n\n            \n                \n                    Adjust to changes to the list to display, if there is any.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Changes made to entryList.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/view/entry-list/entry-list.component.ts:78\n                \n            \n\n\n            \n                \n                    Initially, display everything in list\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateSearch\n                        \n                        \n                    \n                \n            \n            \n                \nupdateSearch()\n                \n            \n\n\n            \n                \n                    Defined in src/app/view/entry-list/entry-list.component.ts:121\n                \n            \n\n\n            \n                \n                    Update displayList based on the new search text\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         WikiEntry[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/view/entry-list/entry-list.component.ts:27\n                            \n                        \n\n                \n                    \n                        List of entries to be displayed.\nBecomes different from entryList if user searches for something.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            page\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 1\n                        \n                    \n                        \n                            \n                                    Defined in src/app/view/entry-list/entry-list.component.ts:50\n                            \n                        \n\n                \n                    \n                        The current page the user is on.\nPart of NgbPaginator.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pageSize\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 12\n                        \n                    \n                        \n                            \n                                    Defined in src/app/view/entry-list/entry-list.component.ts:55\n                            \n                        \n\n                \n                    \n                        The number of items per page.\nPart of NgbPaginator.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            projectConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ProjectConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/view/entry-list/entry-list.component.ts:61\n                            \n                        \n\n                \n                    \n                        The project configuration.\nUsed for checking whether logging is on.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            searchText\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/view/entry-list/entry-list.component.ts:44\n                            \n                        \n\n                \n                    \n                        The text the user puts into the search box\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {Component, Input, OnChanges, OnInit, SimpleChanges} from '@angular/core';\nimport {WikiEntry} from '../../models/wiki-entry';\nimport {Router} from '@angular/router';\nimport {ProjectConfigService} from '../../services/config/project-config.service';\nimport {ProjectConfig} from '../../config/ProjectConfig';\n\n/**\n * Display a list of entries using Bootstrap cards.\n * Can display museums, collections, or artifacts.\n * Supports searching for keywords.\n */\n@Component({\n  selector: 'app-entry-list',\n  templateUrl: './entry-list.component.html',\n  styleUrls: ['./entry-list.component.css']\n})\nexport class EntryListComponent implements OnInit, OnChanges {\n\n  /**\n   * List of all entries.\n   */\n  @Input() entryList!: WikiEntry[];\n  /**\n   * List of entries to be displayed.\n   * Becomes different from entryList if user searches for something.\n   */\n  displayList: WikiEntry[];\n\n  /**\n   * The category of the displayed entry list.\n   * Can be museum, collection, or artifact.\n   */\n  @Input() category: string;\n  /**\n   * The id of the parent of the entry.\n   * Does not exist if category is museum.\n   * Helps to generated a URL for routing to create component.\n   */\n  @Input() parentId: string | number;\n\n  /**\n   * The text the user puts into the search box\n   */\n  searchText: string;\n\n  /**\n   * The current page the user is on.\n   * Part of NgbPaginator.\n   */\n  page = 1;\n  /**\n   * The number of items per page.\n   * Part of NgbPaginator.\n   */\n  pageSize = 12;\n\n  /**\n   * The project configuration.\n   * Used for checking whether logging is on.\n   */\n  private projectConfig: ProjectConfig;\n\n  /**\n   * Initializes variables\n   *\n   * @param router Route to create/view component after user clicks\n   * @param projectConfigService Get project config for logging\n   */\n  constructor(private router: Router,\n              private projectConfigService: ProjectConfigService) {\n    this.searchText = '';\n    this.projectConfig = projectConfigService.getProjectConfig();\n  }\n\n  /**\n   * Initially, display everything in list\n   */\n  ngOnInit(): void {\n    this.displayList = this.entryList;\n  }\n\n  /**\n   * Adjust to changes to the list to display, if there is any.\n   *\n   * @param changes Changes made to entryList.\n   */\n  ngOnChanges(changes: SimpleChanges): void {\n    this.displayList = this.entryList;\n  }\n\n  /**\n   * Go to the view of a certain entry\n   *\n   * @param entry Destination entry object\n   */\n  goToEntry(entry: WikiEntry): void {\n    this.router.navigateByUrl('/view/' + this.category.toLowerCase() + '/' + entry.id);\n  }\n\n  /**\n   * Filter the items within displayList so that only those containing the keywords remain\n   *\n   * @param keywords An array of keywords used for filtering\n   */\n  private filterDisplayList(keywords: string[]): void {\n    this.displayList = this.displayList.filter((entry: WikiEntry) => {\n      // concatenate name and introduction to make the full text\n      const text = `${entry.name}.${entry.introduction}`.toLowerCase();\n      for (const keyword of keywords) {\n        if (!text.includes(keyword.toLowerCase())) {\n          return false;\n        }\n      }\n      return true;\n    });\n  }\n\n  /**\n   * Update displayList based on the new search text\n   */\n  updateSearch(): void {\n    if (this.projectConfig.isLogging()) {\n      console.log('Search text: ');\n      console.log(this.searchText);\n    }\n\n    this.displayList = this.entryList;\n    if (this.searchText.trim() === '') {\n      return;\n    }\n    const keywords = this.searchText.split(' ');\n    this.filterDisplayList(keywords);\n  }\n\n  /**\n   * Triggered when user tries to create an item\n   */\n  createItem() {\n    const url = '/create/' + this.category.toLowerCase() + '/' + (this.category === 'Museum' ? '' : this.parentId);\n    this.router.navigateByUrl(url);\n  }\n}\n\n    \n\n    \n        \n  {{category + 's'}}\n  Create New {{category}}\n  \n    Search\n    \n  \n  \n\n 0; else noEntryItem\">\n  \n    \n      \n        \n        \n          {{entry.name}}\n          \n            {{entry.introduction ? (entry.introduction | textLimit: ['200']) : 'Introduction is empty.'}}\n          \n        \n        \n          \n            View {{category}}\n          \n        \n      \n    \n  \n  \n  \n\n\n  It appears that there are no {{category.toLowerCase()}}s\n\n\n    \n\n    \n                \n                    ./entry-list.component.css\n                \n                .no-bottom-margin {\n  margin-bottom: 0;\n}\n\nh2 {\n  margin-bottom: 3px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{category + \\'s\\'}}  Create New {{category}}      Search         0; else noEntryItem\">                                      {{entry.name}}                      {{entry.introduction ? (entry.introduction | textLimit: [\\'200\\']) : \\'Introduction is empty.\\'}}                                                View {{category}}                                    It appears that there are no {{category.toLowerCase()}}s'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollectionListComponent', 'selector': 'app-collection-list'},{'name': 'ConfirmationModalComponent', 'selector': 'app-confirmation-modal'},{'name': 'CreateComponent', 'selector': 'app-create'},{'name': 'EditComponent', 'selector': 'app-edit'},{'name': 'EditOrCreateComponent', 'selector': 'app-edit-or-create'},{'name': 'EntryListComponent', 'selector': 'app-entry-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownDisplayComponent', 'selector': 'app-markdown-display'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'ModalMessageComponent', 'selector': 'app-modal-message'},{'name': 'MuseumListComponent', 'selector': 'app-museum-list'},{'name': 'NavigationBarComponent', 'selector': 'app-navigation-bar'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'ResetPasswordModalComponent', 'selector': 'app-reset-password-modal'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SearchInCategoryComponent', 'selector': 'app-search-in-category'},{'name': 'TagSelectionComponent', 'selector': 'app-tag-selection'},{'name': 'UserEditListComponent', 'selector': 'app-user-edit-list'},{'name': 'UserMuseumListComponent', 'selector': 'app-user-museum-list'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'ViewComponent', 'selector': 'app-view'},{'name': 'ViewEditComponent', 'selector': 'app-view-edit'},{'name': 'WikiEntryEditorComponent', 'selector': 'app-wiki-entry-editor'},{'name': 'WikiEntryViewComponent', 'selector': 'app-wiki-entry-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EntryListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/static/footer/footer.component.ts\n\n\n    \n        Description\n    \n    \n        the footer of the web page\nit displays the team name and its members\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-footer\n            \n\n            \n                styleUrls\n                ./footer.component.css\n            \n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/static/footer/footer.component.ts:12\n                            \n                        \n\n                \n                    \n                            do nothing on instantiation since page is static\n\n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\n\n/**\n * the footer of the web page\n * it displays the team name and its members\n */\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent {\n\n  /**\n   * do nothing on instantiation since page is static\n   */\n  constructor() {\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n    Copyright &copy; Lafayette53: Lekso Borashvili, Peter (Haohong) Li, Malolan Vasu, Sena Yevenyo 2020\n  \n  \n\n\n    \n\n    \n                \n                    ./footer.component.css\n                \n                .fill-remaining-space {\n  flex: 1 1 auto;\n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        Copyright © Lafayette53: Lekso Borashvili, Peter (Haohong) Li, Malolan Vasu, Sena Yevenyo 2020    '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollectionListComponent', 'selector': 'app-collection-list'},{'name': 'ConfirmationModalComponent', 'selector': 'app-confirmation-modal'},{'name': 'CreateComponent', 'selector': 'app-create'},{'name': 'EditComponent', 'selector': 'app-edit'},{'name': 'EditOrCreateComponent', 'selector': 'app-edit-or-create'},{'name': 'EntryListComponent', 'selector': 'app-entry-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownDisplayComponent', 'selector': 'app-markdown-display'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'ModalMessageComponent', 'selector': 'app-modal-message'},{'name': 'MuseumListComponent', 'selector': 'app-museum-list'},{'name': 'NavigationBarComponent', 'selector': 'app-navigation-bar'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'ResetPasswordModalComponent', 'selector': 'app-reset-password-modal'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SearchInCategoryComponent', 'selector': 'app-search-in-category'},{'name': 'TagSelectionComponent', 'selector': 'app-tag-selection'},{'name': 'UserEditListComponent', 'selector': 'app-user-edit-list'},{'name': 'UserMuseumListComponent', 'selector': 'app-user-museum-list'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'ViewComponent', 'selector': 'app-view'},{'name': 'ViewEditComponent', 'selector': 'app-view-edit'},{'name': 'WikiEntryEditorComponent', 'selector': 'app-wiki-entry-editor'},{'name': 'WikiEntryViewComponent', 'selector': 'app-wiki-entry-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GetByCategoryService.html":{"url":"injectables/GetByCategoryService.html","title":"injectable - GetByCategoryService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GetByCategoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/get-by-category.service.ts\n        \n\n            \n                Description\n            \n            \n                Get an entry by its category\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getByCategoryAndId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(museumService: MuseumService, collectionService: CollectionService, artifactService: ArtifactService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/get-by-category.service.ts:18\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        museumService\n                                                  \n                                                        \n                                                                        MuseumService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Gets museum\n\n                                                        \n                                                \n                                                \n                                                        collectionService\n                                                  \n                                                        \n                                                                        CollectionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Gets collection\n\n                                                        \n                                                \n                                                \n                                                        artifactService\n                                                  \n                                                        \n                                                                        ArtifactService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Gets artifact\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getByCategoryAndId\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getByCategoryAndId(category: string, id: number | string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/get-by-category.service.ts:38\n                \n            \n\n\n            \n                \n                    Get an entry by its category and id\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    category\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Can be museum, collection, or artifact\n\n                                    \n                                \n                                \n                                    id\n                                    \n                                            number | string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Id of entry\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {MuseumService} from './wiki-entry/museum.service';\nimport {CollectionService} from './wiki-entry/collection.service';\nimport {ArtifactService} from './wiki-entry/artifact.service';\nimport {Observable} from 'rxjs';\nimport {ProtoMuseum} from './object-prototypes/proto-museum';\nimport {ProtoArtifact} from './object-prototypes/proto-artifact';\nimport {ProtoCollection} from './object-prototypes/proto-collection';\nimport {ServerConfigService} from './config/server-config.service';\n\n/**\n * Get an entry by its category\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class GetByCategoryService {\n\n  /**\n   * Constructor\n   *\n   * @param museumService Gets museum\n   * @param collectionService Gets collection\n   * @param artifactService Gets artifact\n   */\n  constructor(private museumService: MuseumService,\n              private collectionService: CollectionService,\n              private artifactService: ArtifactService) {\n  }\n\n  /**\n   * Get an entry by its category and id\n   *\n   * @param category Can be museum, collection, or artifact\n   * @param id Id of entry\n   */\n  public getByCategoryAndId(category: string, id: number | string): Observable {\n    if (category === 'museum') {\n      return this.museumService.getMuseum(id);\n    } else if (category === 'collection') {\n      return this.collectionService.getCollection(id);\n    } else if (category === 'artifact') {\n      return this.artifactService.getArtifact(id);\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HashHelper.html":{"url":"classes/HashHelper.html","title":"class - HashHelper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HashHelper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/helper/hash-helper.ts\n        \n\n            \n                Description\n            \n            \n                Helps with hashing\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                hash\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            hash\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hash(text: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/helper/hash-helper.ts:12\n                \n            \n\n\n            \n                \n                    Creates the SHA512 hash to a text\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The text to be hashed\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import * as sha512 from 'js-sha512';\n\n/**\n * Helps with hashing\n */\nexport class HashHelper {\n  /**\n   * Creates the SHA512 hash to a text\n   *\n   * @param text The text to be hashed\n   */\n  public static hash(text: string): string {\n    return sha512.sha512(text);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/static/home/home.component.ts\n\n\n    \n        Description\n    \n    \n        the home page of the application\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                styleUrls\n                ./home.component.css\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/static/home/home.component.ts:18\n                \n            \n\n\n            \n                \n                    do nothing on initialization since page is static\nit's subcomponents will take care of fetching museum list from the server\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {NavigationBarComponent} from '../navigation-bar/navigation-bar.component';\n\n/**\n * the home page of the application\n */\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  /**\n   * do nothing on initialization since page is static\n   * it's subcomponents will take care of fetching museum list from the server\n   */\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n  \n    Welcome to Museum Wiki!\n  \n  \n    Museum Wiki is Wikipedia-like site that hosts museums and artifacts.\n    Anyone can create a museum and become the curator who is responsible for that museum.\n    Any registered user can add and edit information about artifacts and collections in a museum,\n    but only changes approved by the curator will be published.\n  \n\n\n\n\n\n    \n\n    \n                \n                    ./home.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Welcome to Museum Wiki!        Museum Wiki is Wikipedia-like site that hosts museums and artifacts.    Anyone can create a museum and become the curator who is responsible for that museum.    Any registered user can add and edit information about artifacts and collections in a museum,    but only changes approved by the curator will be published.  '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollectionListComponent', 'selector': 'app-collection-list'},{'name': 'ConfirmationModalComponent', 'selector': 'app-confirmation-modal'},{'name': 'CreateComponent', 'selector': 'app-create'},{'name': 'EditComponent', 'selector': 'app-edit'},{'name': 'EditOrCreateComponent', 'selector': 'app-edit-or-create'},{'name': 'EntryListComponent', 'selector': 'app-entry-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownDisplayComponent', 'selector': 'app-markdown-display'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'ModalMessageComponent', 'selector': 'app-modal-message'},{'name': 'MuseumListComponent', 'selector': 'app-museum-list'},{'name': 'NavigationBarComponent', 'selector': 'app-navigation-bar'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'ResetPasswordModalComponent', 'selector': 'app-reset-password-modal'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SearchInCategoryComponent', 'selector': 'app-search-in-category'},{'name': 'TagSelectionComponent', 'selector': 'app-tag-selection'},{'name': 'UserEditListComponent', 'selector': 'app-user-edit-list'},{'name': 'UserMuseumListComponent', 'selector': 'app-user-museum-list'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'ViewComponent', 'selector': 'app-view'},{'name': 'ViewEditComponent', 'selector': 'app-view-edit'},{'name': 'WikiEntryEditorComponent', 'selector': 'app-wiki-entry-editor'},{'name': 'WikiEntryViewComponent', 'selector': 'app-wiki-entry-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoadingComponent.html":{"url":"components/LoadingComponent.html","title":"component - LoadingComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoadingComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/static/loading/loading.component.ts\n\n\n    \n        Description\n    \n    \n        displays the loading status of the web page\nif the app is loading data or has encountered an error, display a message\nif the app has successfully finished loading, display nothing\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-loading\n            \n\n            \n                styleUrls\n                ./loading.component.css\n            \n\n\n\n            \n                templateUrl\n                ./loading.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                errorMessage\n                            \n                            \n                                    Readonly\n                                loadingMessage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                loading\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/static/loading/loading.component.ts:32\n                            \n                        \n\n                \n                    \n                            default to not loading and no errors\n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        error\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/static/loading/loading.component.ts:23\n                            \n                        \n                \n                    \n                        whether the frontend experienced an error while trying to retrieve data\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        loading\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/static/loading/loading.component.ts:19\n                            \n                        \n                \n                    \n                        whether the frontend is waiting for a backend to respond\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/static/loading/loading.component.ts:45\n                \n            \n\n\n            \n                \n                    do nothing since input binding takes care of changes in loading status\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            errorMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ServerCannotConnect.MESSAGE\n                        \n                    \n                        \n                            \n                                    Defined in src/app/static/loading/loading.component.ts:32\n                            \n                        \n\n                \n                    \n                        the message for a server connection error\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            loadingMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Loading, please wait...'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/static/loading/loading.component.ts:28\n                            \n                        \n\n                \n                    \n                        the message for loading data\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {Component, Input, OnInit} from '@angular/core';\nimport {ServerCannotConnect} from '../../config/ServerCannotConnect';\n\n/**\n * displays the loading status of the web page\n * if the app is loading data or has encountered an error, display a message\n * if the app has successfully finished loading, display nothing\n */\n@Component({\n  selector: 'app-loading',\n  templateUrl: './loading.component.html',\n  styleUrls: ['./loading.component.css']\n})\nexport class LoadingComponent implements OnInit {\n\n  /**\n   * whether the frontend is waiting for a backend to respond\n   */\n  @Input() loading: boolean;\n  /**\n   * whether the frontend experienced an error while trying to retrieve data\n   */\n  @Input() error: boolean;\n\n  /**\n   * the message for loading data\n   */\n  readonly loadingMessage = 'Loading, please wait...';\n  /**\n   * the message for a server connection error\n   */\n  readonly errorMessage = ServerCannotConnect.MESSAGE;\n\n  /**\n   * default to not loading and no errors\n   */\n  constructor() {\n    this.loading = false;\n    this.error = false;\n  }\n\n  /**\n   * do nothing since input binding takes care of changes in loading status\n   */\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n  {{loadingMessage}}\n\n\n  {{errorMessage}}\n\n\n    \n\n    \n                \n                    ./loading.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{loadingMessage}}  {{errorMessage}}'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollectionListComponent', 'selector': 'app-collection-list'},{'name': 'ConfirmationModalComponent', 'selector': 'app-confirmation-modal'},{'name': 'CreateComponent', 'selector': 'app-create'},{'name': 'EditComponent', 'selector': 'app-edit'},{'name': 'EditOrCreateComponent', 'selector': 'app-edit-or-create'},{'name': 'EntryListComponent', 'selector': 'app-entry-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownDisplayComponent', 'selector': 'app-markdown-display'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'ModalMessageComponent', 'selector': 'app-modal-message'},{'name': 'MuseumListComponent', 'selector': 'app-museum-list'},{'name': 'NavigationBarComponent', 'selector': 'app-navigation-bar'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'ResetPasswordModalComponent', 'selector': 'app-reset-password-modal'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SearchInCategoryComponent', 'selector': 'app-search-in-category'},{'name': 'TagSelectionComponent', 'selector': 'app-tag-selection'},{'name': 'UserEditListComponent', 'selector': 'app-user-edit-list'},{'name': 'UserMuseumListComponent', 'selector': 'app-user-museum-list'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'ViewComponent', 'selector': 'app-view'},{'name': 'ViewEditComponent', 'selector': 'app-view-edit'},{'name': 'WikiEntryEditorComponent', 'selector': 'app-wiki-entry-editor'},{'name': 'WikiEntryViewComponent', 'selector': 'app-wiki-entry-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoadingComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/user/login/login.component.ts\n\n\n    \n        Description\n    \n    \n        displays a user login page\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.component.css\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                            \n                                projectConfig\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                login\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                openModalWithPromise\n                            \n                            \n                                    Public\n                                register\n                            \n                            \n                                resetPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, previousRoute: PreviousRouteService, userInfoService: UserInfoService, modalService: NgbModal, projectConfigService: ProjectConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/app/user/login/login.component.ts:37\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                routes to another page if already logged in\n\n                                                        \n                                                \n                                                \n                                                        previousRoute\n                                                  \n                                                        \n                                                                        PreviousRouteService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                helps determine whether the user was blocked from accessing another page\n\n                                                        \n                                                \n                                                \n                                                        userInfoService\n                                                  \n                                                        \n                                                                        UserInfoService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                login related Http calls\n\n                                                        \n                                                \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                    NgbModal\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                open modal telling user the result of login attempt\n\n                                                        \n                                                \n                                                \n                                                        projectConfigService\n                                                  \n                                                        \n                                                                        ProjectConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                used to determine whether the program should be logging\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login()\n                \n            \n\n\n            \n                \n                    Defined in src/app/user/login/login.component.ts:78\n                \n            \n\n\n            \n                \n                    try to login the user in based on the provided username and password\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/user/login/login.component.ts:59\n                \n            \n\n\n            \n                \n                    check if user is already logged in, if so, redirect to other pages\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            openModalWithPromise\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    openModalWithPromise(promise: Promise)\n                \n            \n\n\n            \n                \n                    Defined in src/app/user/login/login.component.ts:136\n                \n            \n\n\n            \n                \n                    opens a modal, and then adjust the modal based on the response from the promise\nnote: some sections are hard-coded for reset password, so this method must\nbe readjusted to be used elsewhere\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    promise\n                                    \n                                                Promise\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        a promise whose response will affect the modal\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            register\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    register()\n                \n            \n\n\n            \n                \n                    Defined in src/app/user/login/login.component.ts:125\n                \n            \n\n\n            \n                \n                    go to the registration page\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetPassword\n                        \n                        \n                    \n                \n            \n            \n                \nresetPassword()\n                \n            \n\n\n            \n                \n                    Defined in src/app/user/login/login.component.ts:161\n                \n            \n\n\n            \n                \n                    open a modal for password reset and prompt the user to enter relevant information\nthen open another modal to display the result of the password reset attempt\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user/login/login.component.ts:32\n                            \n                        \n\n                \n                    \n                        the password that the user typed, default to empty string\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            projectConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ProjectConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user/login/login.component.ts:37\n                            \n                        \n\n                \n                    \n                        project configuration about logging\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user/login/login.component.ts:28\n                            \n                        \n\n                \n                    \n                        the username that the user typed, default to empty string\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {UserInfoService} from '../../services/user/user-info.service';\nimport {BasicUserInfo} from '../../models/basic-user-info';\nimport {ServerResponse} from '../../services/server-response';\nimport {Router} from '@angular/router';\nimport {PreviousRouteService} from '../../services/previous-route.service';\nimport {NgbModal} from '@ng-bootstrap/ng-bootstrap';\nimport {ModalMessageComponent} from '../../static/modal-message/modal-message.component';\nimport {ResetPasswordModalComponent} from '../../static/reset-password-modal/reset-password-modal.component';\nimport {HttpErrorResponse} from '@angular/common/http';\nimport {ProjectConfigService} from '../../services/config/project-config.service';\nimport {ProjectConfig} from '../../config/ProjectConfig';\nimport {Wrapper} from '../../models/Wrapper';\n\n/**\n * displays a user login page\n */\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  /**\n   * the username that the user typed, default to empty string\n   */\n  username: string;\n  /**\n   * the password that the user typed, default to empty string\n   */\n  password: string;\n\n  /**\n   * project configuration about logging\n   */\n  projectConfig: ProjectConfig;\n\n  /**\n   * constructor\n   *\n   * @param router routes to another page if already logged in\n   * @param previousRoute helps determine whether the user was blocked from accessing another page\n   * @param userInfoService login related Http calls\n   * @param modalService open modal telling user the result of login attempt\n   * @param projectConfigService used to determine whether the program should be logging\n   */\n  constructor(private router: Router,\n              private previousRoute: PreviousRouteService,\n              private userInfoService: UserInfoService,\n              private modalService: NgbModal,\n              private projectConfigService: ProjectConfigService) {\n    this.projectConfig = projectConfigService.getProjectConfig();\n  }\n\n  /**\n   * check if user is already logged in, if so, redirect to other pages\n   */\n  ngOnInit(): void {\n    // if user is logged in, should not prompt user to login again\n    if (this.userInfoService.isLoggedIn) {\n      // redirect user to the previous link user is blocked from because the user is not logged in\n      if (this.previousRoute.previousRoute) {\n        this.previousRoute.toPreviousRoute();\n      } else {\n        // if user was not blocked from any logged in user exclusive page, go to profile\n        this.router.navigateByUrl('/user-profile');\n      }\n    }\n\n    this.username = '';\n    this.password = '';\n  }\n\n  /**\n   * try to login the user in based on the provided username and password\n   */\n  public login(): void {\n    // FIXME: add form validation\n\n    // time to wait before redirecting the user after a successful login\n    const REDIRECT_WAIT_TIME = 1000;\n\n    // construct user information and create a modal to give user feedback\n    const userInfo = new BasicUserInfo(this.username, this.password);\n    const modal = this.modalService.open(ModalMessageComponent);\n    const modalComponent = modal.componentInstance;\n    modalComponent.title = 'Trying to Login';\n    modalComponent.modal = modal;\n    modalComponent.waitingForServerResponse();\n\n    // try to login\n    this.userInfoService.login(userInfo).then(\n      (response: ServerResponse) => {\n        // update modal's message based on response, which is either success or failure\n        modalComponent.fromServerResponse(response);\n        if (response.success) {\n          // if login success, wait for a while and redirect\n          if (this.previousRoute.previousRoute != null) {\n            modalComponent.message += '\\nRedirecting to previous page...';\n            setTimeout(() => {\n              modal.close();\n              this.previousRoute.toPreviousRoute();\n            }, REDIRECT_WAIT_TIME);\n          } else {\n            modalComponent.message += '\\nRedirecting to home page...';\n            setTimeout(() => {\n              modal.close();\n              this.router.navigateByUrl('/home');\n            }, REDIRECT_WAIT_TIME);\n          }\n        }\n      },\n      (error) => {\n        // adjust modal if there's an error and log that error\n        modalComponent.fromNetworkError(error);\n        console.log(error);\n      }\n    );\n  }\n\n  /**\n   * go to the registration page\n   */\n  public register(): void {\n    this.router.navigateByUrl('/register');\n  }\n\n  /**\n   * opens a modal, and then adjust the modal based on the response from the promise\n   * note: some sections are hard-coded for reset password, so this method must\n   * be readjusted to be used elsewhere\n   *\n   * @param promise a promise whose response will affect the modal\n   */\n  public openModalWithPromise(promise: Promise) {\n    if (!promise) {\n      return;\n    }\n    // open modal for reset password\n    const modal = this.modalService.open(ModalMessageComponent);\n    const modalMessageComponent: ModalMessageComponent = modal.componentInstance;\n    modalMessageComponent.modal = modal;\n    modalMessageComponent.title = 'Reset Password';\n    modalMessageComponent.waitingForServerResponse();\n    // adjust modal based on server response\n    promise.then(\n      (response: ServerResponse) => {\n        modalMessageComponent.fromServerResponse(response);\n      },\n      (err: HttpErrorResponse) => {\n        modalMessageComponent.fromNetworkError(err);\n      }\n    );\n  }\n\n  /**\n   * open a modal for password reset and prompt the user to enter relevant information\n   * then open another modal to display the result of the password reset attempt\n   */\n  resetPassword(): void {\n    const resetPasswordModal = this.modalService.open(ResetPasswordModalComponent);\n    resetPasswordModal.componentInstance.modal = resetPasswordModal;\n    resetPasswordModal.result.then(\n      // the reset password modal will return a promise, which is an async response from the server\n      // about the result of this password reset attempt\n      (resetPromiseWrapper: Wrapper>) => {\n        // open a modal and, based on the server response, display the result of password reset\n        this.openModalWithPromise(resetPromiseWrapper.value);\n      }, (dismiss: any) => {\n        if (this.projectConfig.isLogging()) {\n          console.log('Modal dismissed, reason: ');\n          console.log(dismiss);\n        }\n      }\n    );\n  }\n}\n\n    \n\n    \n        \n  Please Login\n  \n    \n      Username:\n    \n    \n\n    \n      Password:\n    \n    \n\n    \n      \n        Login\n      \n      \n        Register\n      \n      \n        Reset Password\n      \n    \n  \n\n\n\n    \n\n    \n                \n                    ./login.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Please Login            Username:                  Password:                          Login                    Register                    Reset Password            '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollectionListComponent', 'selector': 'app-collection-list'},{'name': 'ConfirmationModalComponent', 'selector': 'app-confirmation-modal'},{'name': 'CreateComponent', 'selector': 'app-create'},{'name': 'EditComponent', 'selector': 'app-edit'},{'name': 'EditOrCreateComponent', 'selector': 'app-edit-or-create'},{'name': 'EntryListComponent', 'selector': 'app-entry-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownDisplayComponent', 'selector': 'app-markdown-display'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'ModalMessageComponent', 'selector': 'app-modal-message'},{'name': 'MuseumListComponent', 'selector': 'app-museum-list'},{'name': 'NavigationBarComponent', 'selector': 'app-navigation-bar'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'ResetPasswordModalComponent', 'selector': 'app-reset-password-modal'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SearchInCategoryComponent', 'selector': 'app-search-in-category'},{'name': 'TagSelectionComponent', 'selector': 'app-tag-selection'},{'name': 'UserEditListComponent', 'selector': 'app-user-edit-list'},{'name': 'UserMuseumListComponent', 'selector': 'app-user-museum-list'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'ViewComponent', 'selector': 'app-view'},{'name': 'ViewEditComponent', 'selector': 'app-view-edit'},{'name': 'WikiEntryEditorComponent', 'selector': 'app-wiki-entry-editor'},{'name': 'WikiEntryViewComponent', 'selector': 'app-wiki-entry-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/LoginGuardService.html":{"url":"guards/LoginGuardService.html","title":"guard - LoginGuardService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    LoginGuardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/services/user/login-guard.service.ts\n            \n\n                \n                Description\n                \n                \n                    Prevents the user from accessing a page if user is not logged in\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(userInfoService: UserInfoService, previousRouteService: PreviousRouteService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/user/login-guard.service.ts:12\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userInfoService\n                                                  \n                                                        \n                                                                        UserInfoService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Checks whether user is logged in\n\n                                                        \n                                                \n                                                \n                                                        previousRouteService\n                                                  \n                                                        \n                                                                        PreviousRouteService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Stores the blocked destination to this service to be used later\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user/login-guard.service.ts:32\n                \n            \n\n\n            \n                \n                    Whether a certain route can be activated.\nIf so, return true and continue navigation.\nIf not, return a urlTree which leads to the login page.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The url\n\n                                    \n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The state of the router\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     UrlTree | boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import {Injectable} from '@angular/core';\nimport {ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot, UrlSegment, UrlSegmentGroup, UrlTree} from '@angular/router';\nimport {UserInfoService} from './user-info.service';\nimport {PreviousRouteService} from '../previous-route.service';\n\n/**\n * Prevents the user from accessing a page if user is not logged in\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginGuardService implements CanActivate {\n\n  /**\n   * Constructor\n   *\n   * @param userInfoService Checks whether user is logged in\n   * @param previousRouteService Stores the blocked destination to this service to be used later\n   */\n  constructor(private userInfoService: UserInfoService,\n              private previousRouteService: PreviousRouteService) {\n  }\n\n  /**\n   * Whether a certain route can be activated.\n   * If so, return true and continue navigation.\n   * If not, return a urlTree which leads to the login page.\n   *\n   * @param route The url\n   * @param state The state of the router\n   */\n  public canActivate(route: ActivatedRouteSnapshot,\n                     state: RouterStateSnapshot): UrlTree | boolean {\n    if (this.userInfoService.isLoggedIn) {\n      return true;\n    }\n    const urlTree: UrlTree = new UrlTree();\n    urlTree.root = new UrlSegmentGroup([new UrlSegment('login', {})], {});\n    urlTree.queryParams = {};\n    this.previousRouteService.previousRoute = route;\n    return urlTree;\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoginService.html":{"url":"injectables/LoginService.html","title":"injectable - LoginService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LoginService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/user/login.service.ts\n        \n\n            \n                Description\n            \n            \n                Http service for logging in, logging out, and user-profile related actions.\nShould not be used directly for login. Use UserInfoService instead.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getCompleteUserInfo\n                            \n                            \n                                    Public\n                                login\n                            \n                            \n                                    Public\n                                register\n                            \n                            \n                                    Public\n                                resetPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, serverConfig: ServerConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/user/login.service.ts:22\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Http client\n\n                                                        \n                                                \n                                                \n                                                        serverConfig\n                                                  \n                                                        \n                                                                        ServerConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Server configuration for endpoint url\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getCompleteUserInfo\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCompleteUserInfo(userCredentials: BasicUserInfo)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user/login.service.ts:61\n                \n            \n\n\n            \n                \n                    Retrieve the complete profile of a user\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    userCredentials\n                                    \n                                                BasicUserInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Login credentials for the user\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(userCredentials: BasicUserInfo)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user/login.service.ts:49\n                \n            \n\n\n            \n                \n                    Attempt to login\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    userCredentials\n                                    \n                                                BasicUserInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Credentials for an attempted user login\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            register\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    register(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user/login.service.ts:40\n                \n            \n\n\n            \n                \n                    Register a user\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Information of a user to be registered\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            resetPassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resetPassword(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user/login.service.ts:73\n                \n            \n\n\n            \n                \n                    Reset the password of a user\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The username of the account\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            url\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/user/login.service.ts:22\n                            \n                        \n\n                \n                    \n                        Endpoint url\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {BasicUserInfo} from '../../models/basic-user-info';\nimport {ServerConfigService} from '../config/server-config.service';\nimport {ServerResponse} from '../server-response';\nimport {User} from '../../models/user';\nimport {ProtoUser} from '../object-prototypes/proto-user';\nimport {Observable} from 'rxjs';\n\n/**\n * Http service for logging in, logging out, and user-profile related actions.\n * Should not be used directly for login. Use UserInfoService instead.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n  /**\n   * Endpoint url\n   */\n  private readonly url: string;\n\n  /**\n   * Constructor\n   *\n   * @param http Http client\n   * @param serverConfig Server configuration for endpoint url\n   */\n  constructor(private http: HttpClient,\n              private serverConfig: ServerConfigService) {\n    this.url = serverConfig.getServerConfig().getUrl();\n  }\n\n  /**\n   * Register a user\n   *\n   * @param user Information of a user to be registered\n   */\n  public register(user: User): Promise {\n    return this.http.post(this.url + 'register', user).toPromise();\n  }\n\n  /**\n   * Attempt to login\n   *\n   * @param userCredentials Credentials for an attempted user login\n   */\n  public login(userCredentials: BasicUserInfo): Promise {\n    return this.http\n      .post(this.url + 'login',\n        {username: userCredentials.username, password: userCredentials.password})\n      .toPromise();\n  }\n\n  /**\n   * Retrieve the complete profile of a user\n   *\n   * @param userCredentials Login credentials for the user\n   */\n  public getCompleteUserInfo(userCredentials: BasicUserInfo): Observable {\n    return this.http.post(this.url + 'user-profile', {\n      username: userCredentials.username,\n      password: userCredentials.password\n    });\n  }\n\n  /**\n   * Reset the password of a user\n   *\n   * @param username The username of the account\n   */\n  public resetPassword(username: string): Promise {\n    return this.http.post(this.url + 'reset-password', {username}).toPromise();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MarkdownDisplayComponent.html":{"url":"components/MarkdownDisplayComponent.html","title":"component - MarkdownDisplayComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MarkdownDisplayComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/edit/markdown-display/markdown-display.component.ts\n\n\n    \n        Description\n    \n    \n        Interpret a string as Markdown and then display the rendered text as Html\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-markdown-display\n            \n\n            \n                styleUrls\n                ./markdown-display.component.css\n            \n\n\n\n            \n                templateUrl\n                ./markdown-display.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                markdownText\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        markdownText\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/edit/markdown-display/markdown-display.component.ts:16\n                            \n                        \n                \n                    \n                        A string containing Markdown text\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/edit/markdown-display/markdown-display.component.ts:21\n                \n            \n\n\n            \n                \n                    Changes tracked through input binding, so no initialization necessary\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, Input, OnInit} from '@angular/core';\n\n/**\n * Interpret a string as Markdown and then display the rendered text as Html\n */\n@Component({\n  selector: 'app-markdown-display',\n  templateUrl: './markdown-display.component.html',\n  styleUrls: ['./markdown-display.component.css']\n})\nexport class MarkdownDisplayComponent implements OnInit {\n\n  /**\n   * A string containing Markdown text\n   */\n  @Input() markdownText: string;\n\n  /**\n   * Changes tracked through input binding, so no initialization necessary\n   */\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./markdown-display.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollectionListComponent', 'selector': 'app-collection-list'},{'name': 'ConfirmationModalComponent', 'selector': 'app-confirmation-modal'},{'name': 'CreateComponent', 'selector': 'app-create'},{'name': 'EditComponent', 'selector': 'app-edit'},{'name': 'EditOrCreateComponent', 'selector': 'app-edit-or-create'},{'name': 'EntryListComponent', 'selector': 'app-entry-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownDisplayComponent', 'selector': 'app-markdown-display'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'ModalMessageComponent', 'selector': 'app-modal-message'},{'name': 'MuseumListComponent', 'selector': 'app-museum-list'},{'name': 'NavigationBarComponent', 'selector': 'app-navigation-bar'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'ResetPasswordModalComponent', 'selector': 'app-reset-password-modal'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SearchInCategoryComponent', 'selector': 'app-search-in-category'},{'name': 'TagSelectionComponent', 'selector': 'app-tag-selection'},{'name': 'UserEditListComponent', 'selector': 'app-user-edit-list'},{'name': 'UserMuseumListComponent', 'selector': 'app-user-museum-list'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'ViewComponent', 'selector': 'app-view'},{'name': 'ViewEditComponent', 'selector': 'app-view-edit'},{'name': 'WikiEntryEditorComponent', 'selector': 'app-wiki-entry-editor'},{'name': 'WikiEntryViewComponent', 'selector': 'app-wiki-entry-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MarkdownDisplayComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MarkdownEditorComponent.html":{"url":"components/MarkdownEditorComponent.html","title":"component - MarkdownEditorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MarkdownEditorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/edit/markdown-editor/markdown-editor.component.ts\n\n\n    \n        Description\n    \n    \n        An editor for Markdown that supports rendering\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-markdown-editor\n            \n\n            \n                styleUrls\n                ./markdown-editor.component.css\n            \n\n\n\n            \n                templateUrl\n                ./markdown-editor.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                previewText\n                            \n                            \n                                realTimeRendering\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                renderMarkdown\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                descriptionFormControl\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/edit/markdown-editor/markdown-editor.component.ts:27\n                            \n                        \n\n                \n                    \n                            Set preview text to empty string\n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        descriptionFormControl\n                    \n                \n                \n                    \n                        Type :         FormControl\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/edit/markdown-editor/markdown-editor.component.ts:17\n                            \n                        \n                \n                    \n                        A form control for the input text.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            renderMarkdown\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    renderMarkdown()\n                \n            \n\n\n            \n                \n                    Defined in src/app/edit/markdown-editor/markdown-editor.component.ts:39\n                \n            \n\n\n            \n                \n                    Render the current text in Markdown\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            previewText\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit/markdown-editor/markdown-editor.component.ts:22\n                            \n                        \n\n                \n                    \n                        Markdown text used for preview.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            realTimeRendering\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit/markdown-editor/markdown-editor.component.ts:27\n                            \n                        \n\n                \n                    \n                        Whether the user typed Markdown text will be rendered realtime.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {FormControl} from '@angular/forms';\n\n/**\n * An editor for Markdown that supports rendering\n */\n@Component({\n  selector: 'app-markdown-editor',\n  templateUrl: './markdown-editor.component.html',\n  styleUrls: ['./markdown-editor.component.css'],\n})\nexport class MarkdownEditorComponent {\n\n  /**\n   * A form control for the input text.\n   */\n  @Input() descriptionFormControl: FormControl;\n\n  /**\n   * Markdown text used for preview.\n   */\n  previewText: string;\n\n  /**\n   * Whether the user typed Markdown text will be rendered realtime.\n   */\n  realTimeRendering: boolean;\n\n  /**\n   * Set preview text to empty string\n   */\n  constructor() {\n    this.previewText = '';\n  }\n\n  /**\n   * Render the current text in Markdown\n   */\n  public renderMarkdown(): void {\n    this.previewText = this.descriptionFormControl.value;\n  }\n}\n\n    \n\n    \n        \n  Description (optional): \n  \n  \n  \n    \n      Preview\n    \n\n    \n    \n      Enable real time rendering\n    \n  \n  \n\n  \n    \n  \n\n\n    \n\n    \n                \n                    ./markdown-editor.component.css\n                \n                .disabled {\n  cursor: not-allowed;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Description (optional):                 Preview                  Enable real time rendering                '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollectionListComponent', 'selector': 'app-collection-list'},{'name': 'ConfirmationModalComponent', 'selector': 'app-confirmation-modal'},{'name': 'CreateComponent', 'selector': 'app-create'},{'name': 'EditComponent', 'selector': 'app-edit'},{'name': 'EditOrCreateComponent', 'selector': 'app-edit-or-create'},{'name': 'EntryListComponent', 'selector': 'app-entry-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownDisplayComponent', 'selector': 'app-markdown-display'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'ModalMessageComponent', 'selector': 'app-modal-message'},{'name': 'MuseumListComponent', 'selector': 'app-museum-list'},{'name': 'NavigationBarComponent', 'selector': 'app-navigation-bar'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'ResetPasswordModalComponent', 'selector': 'app-reset-password-modal'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SearchInCategoryComponent', 'selector': 'app-search-in-category'},{'name': 'TagSelectionComponent', 'selector': 'app-tag-selection'},{'name': 'UserEditListComponent', 'selector': 'app-user-edit-list'},{'name': 'UserMuseumListComponent', 'selector': 'app-user-museum-list'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'ViewComponent', 'selector': 'app-view'},{'name': 'ViewEditComponent', 'selector': 'app-view-edit'},{'name': 'WikiEntryEditorComponent', 'selector': 'app-wiki-entry-editor'},{'name': 'WikiEntryViewComponent', 'selector': 'app-wiki-entry-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MarkdownEditorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/MarkedPipe.html":{"url":"pipes/MarkedPipe.html","title":"pipe - MarkedPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  MarkedPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/helper/marked.pipe.ts\n        \n\n            \n                Description\n            \n            \n                Transforms a markdown text into corresponding html code\n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        marked\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: any, ...args: unknown[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/helper/marked.pipe.ts:18\n                \n            \n\n\n            \n                \n                    Transform a markdown text into corresponding html code\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The Markdown text to be transformed\n\n                                    \n                                \n                                \n                                    args\n                                    \n                                            unknown[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        All args are ignored\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Pipe, PipeTransform} from '@angular/core';\nimport * as marked from 'marked';\n\n/**\n * Transforms a markdown text into corresponding html code\n */\n@Pipe({\n  name: 'marked'\n})\nexport class MarkedPipe implements PipeTransform {\n\n  /**\n   * Transform a markdown text into corresponding html code\n   *\n   * @param value The Markdown text to be transformed\n   * @param args All args are ignored\n   */\n  transform(value: any, ...args: unknown[]): any {\n    if (value && value.length > 0) {\n      return marked(value);\n    }\n    return value;\n  }\n\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Mocker.html":{"url":"classes/Mocker.html","title":"class - Mocker","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Mocker\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/mocker.ts\n        \n\n            \n                Description\n            \n            \n                Create a random objects for testing\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                categories\n                            \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                statuses\n                            \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                types\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mockProtoArtifact\n                            \n                            \n                                    Static\n                                mockProtoEdit\n                            \n                            \n                                    Static\n                                mockWikiEntry\n                            \n                            \n                                    Private\n                                    Static\n                                randomElement\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                                Readonly\n                            categories\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['museum', 'collection', 'artifact']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/mocker.ts:15\n                            \n                        \n\n                \n                    \n                        All possible categories\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                                Readonly\n                            statuses\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['Approved', 'Denied', 'Under review']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/mocker.ts:23\n                            \n                        \n\n                \n                    \n                        All possible edit statuses\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                                Readonly\n                            types\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['create', 'delete', 'edit']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/mocker.ts:19\n                            \n                        \n\n                \n                    \n                        All possible types of edits\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            mockProtoArtifact\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    mockProtoArtifact()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/mocker.ts:60\n                \n            \n\n\n            \n                \n                    Create a mock proto artifact object\n\n\n                    \n                        Returns :         ProtoArtifact\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            mockProtoEdit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    mockProtoEdit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/mocker.ts:37\n                \n            \n\n\n            \n                \n                    Create a mock proto edit object\n\n\n                    \n                        Returns :         ProtoEdit\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            mockWikiEntry\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    mockWikiEntry()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/mocker.ts:49\n                \n            \n\n\n            \n                \n                    Create a mock wiki entry object\n\n\n                    \n                        Returns :         WikiEntry\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            randomElement\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    randomElement(array: Array)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/mocker.ts:30\n                \n            \n\n\n            \n                \n                    Get a random element in an array\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    array\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Array from which one thing is picked\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {ProtoEdit} from './object-prototypes/proto-edit';\nimport {ProtoArtifact} from './object-prototypes/proto-artifact';\nimport {WikiEntry} from '../models/wiki-entry';\nimport {WikiEntryBuilder} from '../models/builders/wiki-entry-builder';\nimport {MuseumBuilder} from '../models/builders/museum-builder';\nimport {Artifact} from '../models/artifact';\n\n/**\n * Create a random objects for testing\n */\nexport class Mocker {\n  /**\n   * All possible categories\n   */\n  private static readonly categories = ['museum', 'collection', 'artifact'];\n  /**\n   * All possible types of edits\n   */\n  private static readonly types = ['create', 'delete', 'edit'];\n  /**\n   * All possible edit statuses\n   */\n  private static readonly statuses = ['Approved', 'Denied', 'Under review'];\n\n  /**\n   * Get a random element in an array\n   *\n   * @param array Array from which one thing is picked\n   */\n  private static randomElement(array: Array) {\n    return array[Math.floor(Math.random() * array.length)];\n  }\n\n  /**\n   * Create a mock proto edit object\n   */\n  static mockProtoEdit(): ProtoEdit {\n    const edit: ProtoEdit = new ProtoEdit();\n    edit.id = Math.floor(Math.random() * 1000);\n    edit.category = this.randomElement(this.categories);\n    edit.type = this.randomElement(this.types);\n    edit.approvalStatus = this.randomElement(this.statuses);\n    return edit;\n  }\n\n  /**\n   * Create a mock wiki entry object\n   */\n  static mockWikiEntry(): WikiEntry {\n    return new WikiEntryBuilder(WikiEntry)\n      .name('Test Name')\n      .introduction('Test Introduction')\n      .description('# Test Description\\nThis is a **test** Markdown description.')\n      .build();\n  }\n\n  /**\n   * Create a mock proto artifact object\n   */\n  static mockProtoArtifact(): ProtoArtifact {\n    const artifact = new ProtoArtifact();\n    artifact.artifact = this.mockWikiEntry() as Artifact;\n    artifact.artifact.collectionList = [{name: 'collection1', id: 1}, {name: 'collection2', id: 2}];\n    return artifact;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ModalMessageComponent.html":{"url":"components/ModalMessageComponent.html","title":"component - ModalMessageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ModalMessageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/static/modal-message/modal-message.component.ts\n\n\n    \n        Description\n    \n    \n        a modal that displays a message\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-modal-message\n            \n\n            \n                styleUrls\n                ./modal-message.component.css\n            \n\n\n\n            \n                templateUrl\n                ./modal-message.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                faCheckCircle\n                            \n                            \n                                faTimesCircle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fromNetworkError\n                            \n                            \n                                    Public\n                                fromServerResponse\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                waitingForServerResponse\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                loading\n                            \n                            \n                                message\n                            \n                            \n                                modal\n                            \n                            \n                                success\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        loading\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/static/modal-message/modal-message.component.ts:25\n                            \n                        \n                \n                    \n                        whether the app is waiting for a response from a backend server\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        message\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/static/modal-message/modal-message.component.ts:33\n                            \n                        \n                \n                    \n                        the message to display for the user\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        modal\n                    \n                \n                \n                    \n                        Type :     NgbActiveModal\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/static/modal-message/modal-message.component.ts:38\n                            \n                        \n                \n                    \n                        the modal object that contains this component\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        success\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/static/modal-message/modal-message.component.ts:29\n                            \n                        \n                \n                    \n                        whether the user request is successful\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/static/modal-message/modal-message.component.ts:21\n                            \n                        \n                \n                    \n                        title of modal\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            fromNetworkError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fromNetworkError(err: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/app/static/modal-message/modal-message.component.ts:80\n                \n            \n\n\n            \n                \n                    let modal reflect the error the app encounters\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    err\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the error returned by a Promise/Observable\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            fromServerResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fromServerResponse(res: ServerResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/app/static/modal-message/modal-message.component.ts:69\n                \n            \n\n\n            \n                \n                    let modal reflect the result from the server\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                                ServerResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        response from the server\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/static/modal-message/modal-message.component.ts:53\n                \n            \n\n\n            \n                \n                    everything is passed through direct public field manipulation\nso no need to initialize anything\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            waitingForServerResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    waitingForServerResponse()\n                \n            \n\n\n            \n                \n                    Defined in src/app/static/modal-message/modal-message.component.ts:59\n                \n            \n\n\n            \n                \n                    adjust the modal to reflect that the app is waiting for a response from the server\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            faCheckCircle\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : faCheckCircle\n                        \n                    \n                        \n                            \n                                    Defined in src/app/static/modal-message/modal-message.component.ts:43\n                            \n                        \n\n                \n                    \n                        a circle containing a checkmark, representing success\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            faTimesCircle\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : faTimesCircle\n                        \n                    \n                        \n                            \n                                    Defined in src/app/static/modal-message/modal-message.component.ts:47\n                            \n                        \n\n                \n                    \n                        a circle containing a multiplication sign, representing failure\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {Component, Input, OnInit} from '@angular/core';\nimport {NgbActiveModal} from '@ng-bootstrap/ng-bootstrap';\nimport {ServerResponse} from '../../services/server-response';\nimport {ServerCannotConnect} from '../../config/ServerCannotConnect';\nimport {HttpErrorResponse} from '@angular/common/http';\nimport {faCheckCircle, faTimesCircle} from '@fortawesome/free-solid-svg-icons';\n\n/**\n * a modal that displays a message\n */\n@Component({\n  selector: 'app-modal-message',\n  templateUrl: './modal-message.component.html',\n  styleUrls: ['./modal-message.component.css']\n})\nexport class ModalMessageComponent implements OnInit {\n\n  /**\n   * title of modal\n   */\n  @Input() title: string;\n  /**\n   * whether the app is waiting for a response from a backend server\n   */\n  @Input() loading: boolean;\n  /**\n   * whether the user request is successful\n   */\n  @Input() success: boolean;\n  /**\n   * the message to display for the user\n   */\n  @Input() message: string;\n\n  /**\n   * the modal object that contains this component\n   */\n  @Input() modal: NgbActiveModal;\n\n  /**\n   * a circle containing a checkmark, representing success\n   */\n  faCheckCircle = faCheckCircle;\n  /**\n   * a circle containing a multiplication sign, representing failure\n   */\n  faTimesCircle = faTimesCircle;\n\n  /**\n   * everything is passed through direct public field manipulation\n   * so no need to initialize anything\n   */\n  ngOnInit(): void {\n  }\n\n  /**\n   * adjust the modal to reflect that the app is waiting for a response from the server\n   */\n  public waitingForServerResponse(): void {\n    this.loading = true;\n    this.message = 'Sending request to server, please wait...';\n  }\n\n  /**\n   * let modal reflect the result from the server\n   *\n   * @param res response from the server\n   */\n  public fromServerResponse(res: ServerResponse): void {\n    this.loading = false;\n    this.success = res.success;\n    this.message = res.message;\n  }\n\n  /**\n   * let modal reflect the error the app encounters\n   *\n   * @param err the error returned by a Promise/Observable\n   */\n  public fromNetworkError(err: HttpErrorResponse): void {\n    this.loading = false;\n    this.success = false;\n\n    if (err.status === 0) {\n      this.message = ServerCannotConnect.MESSAGE;\n    } else {\n      if (err.error && err.error.message) {\n        this.message = err.error.message;\n      } else {\n        this.message = err.message;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n  {{title}}\n  \n    &times;\n  \n\n\n  \n    \n      \n      Success!\n    \n    \n      \n      Failed!\n    \n  \n  {{message}}\n\n\n  Close\n\n\n    \n\n    \n                \n                    ./modal-message.component.css\n                \n                .modal-header {\n  padding-bottom: 0;\n}\n\n.close {\n  outline: none;\n  box-shadow: none;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{title}}      ×                    Success!                    Failed!        {{message}}  Close'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollectionListComponent', 'selector': 'app-collection-list'},{'name': 'ConfirmationModalComponent', 'selector': 'app-confirmation-modal'},{'name': 'CreateComponent', 'selector': 'app-create'},{'name': 'EditComponent', 'selector': 'app-edit'},{'name': 'EditOrCreateComponent', 'selector': 'app-edit-or-create'},{'name': 'EntryListComponent', 'selector': 'app-entry-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownDisplayComponent', 'selector': 'app-markdown-display'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'ModalMessageComponent', 'selector': 'app-modal-message'},{'name': 'MuseumListComponent', 'selector': 'app-museum-list'},{'name': 'NavigationBarComponent', 'selector': 'app-navigation-bar'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'ResetPasswordModalComponent', 'selector': 'app-reset-password-modal'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SearchInCategoryComponent', 'selector': 'app-search-in-category'},{'name': 'TagSelectionComponent', 'selector': 'app-tag-selection'},{'name': 'UserEditListComponent', 'selector': 'app-user-edit-list'},{'name': 'UserMuseumListComponent', 'selector': 'app-user-museum-list'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'ViewComponent', 'selector': 'app-view'},{'name': 'ViewEditComponent', 'selector': 'app-view-edit'},{'name': 'WikiEntryEditorComponent', 'selector': 'app-wiki-entry-editor'},{'name': 'WikiEntryViewComponent', 'selector': 'app-wiki-entry-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ModalMessageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Museum.html":{"url":"classes/Museum.html","title":"class - Museum","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Museum\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/museum.ts\n        \n\n            \n                Description\n            \n            \n                A museum containing collections.\n\n            \n\n            \n                Extends\n            \n            \n                        WikiEntry\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                collectionList\n                            \n                            \n                                description\n                            \n                            \n                                image\n                            \n                            \n                                introduction\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                of\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name?: string, introduction?: string, image?: string, description?: string, id?: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/museum.ts:11\n                            \n                        \n\n                \n                    \n                            Creates a museum object with basic information and no collections\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                                Name of museum\n\n                                                        \n                                                \n                                                \n                                                        introduction\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                                Introduction\n\n                                                        \n                                                \n                                                \n                                                        image\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                                Url of image\n\n                                                        \n                                                \n                                                \n                                                        description\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                                Description of museum in Markdown\n\n                                                        \n                                                \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                                Id of museum, potentially empty\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            collectionList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         WikiEntry[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/museum.ts:11\n                            \n                        \n\n                \n                    \n                        An array of collections in this museum\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         WikiEntry\n\n                                \n                            \n                        \n                            \n                                    Defined in         WikiEntry:18\n\n                            \n                        \n\n                \n                    \n                        Detailed description for the entry.\nMust be in Markdown\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            image\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         WikiEntry\n\n                                \n                            \n                        \n                            \n                                    Defined in         WikiEntry:22\n\n                            \n                        \n\n                \n                    \n                        A url to the image that is displayed.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            introduction\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         WikiEntry\n\n                                \n                            \n                        \n                            \n                                    Defined in         WikiEntry:13\n\n                            \n                        \n\n                \n                    \n                        The introductory text for the entry.\nMust be in plain text.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BasicEntry\n\n                                \n                            \n                        \n                            \n                                    Defined in         BasicEntry:12\n\n                            \n                        \n\n                \n                    \n                        Id of entry\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BasicEntry\n\n                                \n                            \n                        \n                            \n                                    Defined in         BasicEntry:8\n\n                            \n                        \n\n                \n                    \n                        Name of entry\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            of\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    of(wikiEntry: WikiEntry)\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/museum.ts:32\n                \n            \n\n\n            \n                \n                    Static factory that generates a museum based on an existing entry\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    wikiEntry\n                                    \n                                                WikiEntry\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        A museum entry of which this method makes a copy\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Museum\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {WikiEntry} from './wiki-entry';\n\n/**\n * A museum containing collections.\n */\nexport class Museum extends WikiEntry {\n\n  /**\n   * An array of collections in this museum\n   */\n  collectionList: WikiEntry[];\n\n  /**\n   * Creates a museum object with basic information and no collections\n   *\n   * @param name Name of museum\n   * @param introduction Introduction\n   * @param image Url of image\n   * @param description Description of museum in Markdown\n   * @param id Id of museum, potentially empty\n   */\n  constructor(name?: string, introduction?: string, image?: string, description?: string, id?: number) {\n    super(name, introduction, image, description, id);\n    this.collectionList = [];\n  }\n\n  /**\n   * Static factory that generates a museum based on an existing entry\n   *\n   * @param wikiEntry A museum entry of which this method makes a copy\n   */\n  public static of(wikiEntry: WikiEntry) {\n    if (!wikiEntry) {\n      return undefined;\n    }\n    return new Museum(wikiEntry.name, wikiEntry.introduction, wikiEntry.image, wikiEntry.description, wikiEntry.id);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MuseumBuilder.html":{"url":"classes/MuseumBuilder.html","title":"class - MuseumBuilder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MuseumBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/builders/museum-builder.ts\n        \n\n            \n                Description\n            \n            \n                Builder for a museum\n\n            \n\n            \n                Extends\n            \n            \n                        WikiEntryBuilder\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                entry\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                build\n                            \n                            \n                                    Public\n                                collections\n                            \n                            \n                                    Public\n                                build\n                            \n                            \n                                    Public\n                                description\n                            \n                            \n                                    Public\n                                image\n                            \n                            \n                                    Public\n                                introduction\n                            \n                            \n                                    Public\n                                self\n                            \n                            \n                                    Public\n                                wikiEntry\n                            \n                            \n                                    Public\n                                build\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                self\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/models/builders/museum-builder.ts:8\n                            \n                        \n\n                \n                    \n                            Creates a new museum\n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            entry\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     E\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BasicEntryBuilder\n\n                                \n                            \n                        \n                            \n                                    Defined in         BasicEntryBuilder:13\n\n                            \n                        \n\n                \n                    \n                        The entry that will be created.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            build\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    build()\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/builders/museum-builder.ts:30\n                \n            \n\n\n            \n                \n                    Returns the built museum\n\n\n                    \n                        Returns :         Museum\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            collections\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    collections(collections: WikiEntry[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/builders/museum-builder.ts:22\n                \n            \n\n\n            \n                \n                    Builder method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    collections\n                                    \n                                                WikiEntry[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        list of collections in this museum\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         MuseumBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            build\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    build()\n                \n            \n\n\n            \n                \n                    Inherited from         WikiEntryBuilder\n\n                \n            \n            \n                \n                        Defined in         WikiEntryBuilder:66\n\n                \n            \n\n\n            \n                \n                    Build a custom object that extends Wiki Entry\n\n\n                    \n                        Returns :     E\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            description\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    description(description: string)\n                \n            \n\n\n            \n                \n                    Inherited from         WikiEntryBuilder\n\n                \n            \n            \n                \n                        Defined in         WikiEntryBuilder:44\n\n                \n            \n\n\n            \n                \n                    Builder method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    description\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Description in Markdown of entry\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            image\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    image(image: string)\n                \n            \n\n\n            \n                \n                    Inherited from         WikiEntryBuilder\n\n                \n            \n            \n                \n                        Defined in         WikiEntryBuilder:34\n\n                \n            \n\n\n            \n                \n                    Builder method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    image\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Url of image\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            introduction\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    introduction(introduction: string)\n                \n            \n\n\n            \n                \n                    Inherited from         WikiEntryBuilder\n\n                \n            \n            \n                \n                        Defined in         WikiEntryBuilder:24\n\n                \n            \n\n\n            \n                \n                    Builder method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    introduction\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Introduction of wiki entry\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            self\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    self()\n                \n            \n\n\n            \n                \n                    Inherited from         WikiEntryBuilder\n\n                \n            \n            \n                \n                        Defined in         WikiEntryBuilder:73\n\n                \n            \n\n\n            \n                \n                    Returns a Builder that extends WikiEntryBuilder\n\n\n                    \n                        Returns :     T\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            wikiEntry\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    wikiEntry(entry: WikiEntry)\n                \n            \n\n\n            \n                \n                    Inherited from         WikiEntryBuilder\n\n                \n            \n            \n                \n                        Defined in         WikiEntryBuilder:54\n\n                \n            \n\n\n            \n                \n                    Builder method from another Wiki Entry\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    entry\n                                    \n                                                WikiEntry\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        A wiki entry from which the builder will copy the info\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            build\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    build()\n                \n            \n\n\n            \n                \n                    Inherited from         BasicEntryBuilder\n\n                \n            \n            \n                \n                        Defined in         BasicEntryBuilder:51\n\n                \n            \n\n\n            \n                \n                    Build the entry\n\n\n                    \n                        Returns :     E\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            id\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    id(id: number | string)\n                \n            \n\n\n            \n                \n                    Inherited from         BasicEntryBuilder\n\n                \n            \n            \n                \n                        Defined in         BasicEntryBuilder:43\n\n                \n            \n\n\n            \n                \n                    Builder method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                            number | string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Set id of entry\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            name\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    name(name: string)\n                \n            \n\n\n            \n                \n                    Inherited from         BasicEntryBuilder\n\n                \n            \n            \n                \n                        Defined in         BasicEntryBuilder:33\n\n                \n            \n\n\n            \n                \n                    Builder method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Set name of entry\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            self\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    self()\n                \n            \n\n\n            \n                \n                    Inherited from         BasicEntryBuilder\n\n                \n            \n            \n                \n                        Defined in         BasicEntryBuilder:58\n\n                \n            \n\n\n            \n                \n                    Return this builder as a T, which is another builder that extends BasicEntryBuilder\n\n\n                    \n                        Returns :     T\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {WikiEntryBuilder} from './wiki-entry-builder';\nimport {Museum} from '../museum';\nimport {WikiEntry} from '../wiki-entry';\n\n/**\n * Builder for a museum\n */\nexport class MuseumBuilder extends WikiEntryBuilder {\n\n  /**\n   * Creates a new museum\n   */\n  constructor() {\n    super(Museum);\n  }\n\n  /**\n   * Builder method\n   *\n   * @param collections list of collections in this museum\n   */\n  public collections(collections: WikiEntry[]): MuseumBuilder {\n    this.entry.collectionList = collections;\n    return this;\n  }\n\n  /**\n   * Returns the built museum\n   */\n  public build(): Museum {\n    return this.entry;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MuseumListComponent.html":{"url":"components/MuseumListComponent.html","title":"component - MuseumListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MuseumListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/view/museum-list/museum-list.component.ts\n\n\n    \n        Description\n    \n    \n        Display a list of all museums\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-museum-list\n            \n\n            \n                styleUrls\n                ./museum-list.component.css\n            \n\n\n\n            \n                templateUrl\n                ./museum-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                loading\n                            \n                            \n                                museums\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                goToMuseum\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, museumService: MuseumService)\n                    \n                \n                        \n                            \n                                Defined in src/app/view/museum-list/museum-list.component.ts:27\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Routes to museum view\n\n                                                        \n                                                \n                                                \n                                                        museumService\n                                                  \n                                                        \n                                                                        MuseumService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Helps retrieve museum list from backend\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            goToMuseum\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    goToMuseum(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/view/museum-list/museum-list.component.ts:59\n                \n            \n\n\n            \n                \n                    Go to the view of a certain museum\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The id of the destination museum\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/view/museum-list/museum-list.component.ts:42\n                \n            \n\n\n            \n                \n                    On initialization, get the list of all museums from museum service\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/view/museum-list/museum-list.component.ts:27\n                            \n                        \n\n                \n                    \n                        Whether the app encountered a network error while trying to connect to backend\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/view/museum-list/museum-list.component.ts:23\n                            \n                        \n\n                \n                    \n                        Whether the app is waiting for backend response\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            museums\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Museum[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/view/museum-list/museum-list.component.ts:19\n                            \n                        \n\n                \n                    \n                        Museum list\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {Museum} from '../../models/museum';\nimport {Router} from '@angular/router';\nimport {MuseumService} from '../../services/wiki-entry/museum.service';\n\n/**\n * Display a list of all museums\n */\n@Component({\n  selector: 'app-museum-list',\n  templateUrl: './museum-list.component.html',\n  styleUrls: ['./museum-list.component.css']\n})\nexport class MuseumListComponent implements OnInit {\n\n  /**\n   * Museum list\n   */\n  museums: Museum[] = [];\n  /**\n   * Whether the app is waiting for backend response\n   */\n  loading = true;\n  /**\n   * Whether the app encountered a network error while trying to connect to backend\n   */\n  error = false;\n\n  /**\n   * Constructor\n   *\n   * @param router Routes to museum view\n   * @param museumService Helps retrieve museum list from backend\n   */\n  constructor(private router: Router,\n              private museumService: MuseumService) {\n  }\n\n  /**\n   * On initialization, get the list of all museums from museum service\n   */\n  ngOnInit(): void {\n    this.museumService.getMuseumList().subscribe(\n      (museums: Museum[]) => {\n        this.museums = this.museums.concat(museums);\n        this.loading = false;\n      },\n      error => {\n        this.error = true;\n        console.log(error);\n      });\n  }\n\n  /**\n   * Go to the view of a certain museum\n   *\n   * @param id The id of the destination museum\n   */\n  public goToMuseum(id: string) {\n    this.router.navigateByUrl('/view/museum/' + id).then();\n  }\n\n}\n\n    \n\n    \n        \n  \n\n\n\n\n\n    \n\n    \n                \n                    ./museum-list.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollectionListComponent', 'selector': 'app-collection-list'},{'name': 'ConfirmationModalComponent', 'selector': 'app-confirmation-modal'},{'name': 'CreateComponent', 'selector': 'app-create'},{'name': 'EditComponent', 'selector': 'app-edit'},{'name': 'EditOrCreateComponent', 'selector': 'app-edit-or-create'},{'name': 'EntryListComponent', 'selector': 'app-entry-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownDisplayComponent', 'selector': 'app-markdown-display'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'ModalMessageComponent', 'selector': 'app-modal-message'},{'name': 'MuseumListComponent', 'selector': 'app-museum-list'},{'name': 'NavigationBarComponent', 'selector': 'app-navigation-bar'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'ResetPasswordModalComponent', 'selector': 'app-reset-password-modal'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SearchInCategoryComponent', 'selector': 'app-search-in-category'},{'name': 'TagSelectionComponent', 'selector': 'app-tag-selection'},{'name': 'UserEditListComponent', 'selector': 'app-user-edit-list'},{'name': 'UserMuseumListComponent', 'selector': 'app-user-museum-list'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'ViewComponent', 'selector': 'app-view'},{'name': 'ViewEditComponent', 'selector': 'app-view-edit'},{'name': 'WikiEntryEditorComponent', 'selector': 'app-wiki-entry-editor'},{'name': 'WikiEntryViewComponent', 'selector': 'app-wiki-entry-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MuseumListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MuseumService.html":{"url":"injectables/MuseumService.html","title":"injectable - MuseumService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MuseumService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/wiki-entry/museum.service.ts\n        \n\n            \n                Description\n            \n            \n                Provides interfaces for CRUD museum information\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addMuseum\n                            \n                            \n                                    Public\n                                deleteMuseum\n                            \n                            \n                                    Public\n                                getMuseum\n                            \n                            \n                                    Public\n                                getMuseumList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(serverConfigService: ServerConfigService, http: HttpClient, userInfo: UserInfoService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/wiki-entry/museum.service.ts:24\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        serverConfigService\n                                                  \n                                                        \n                                                                        ServerConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Server config\n\n                                                        \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Makes http request\n\n                                                        \n                                                \n                                                \n                                                        userInfo\n                                                  \n                                                        \n                                                                        UserInfoService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Information of logged in user\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            addMuseum\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addMuseum(museum: WikiEntry, mode: Mode)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wiki-entry/museum.service.ts:61\n                \n            \n\n\n            \n                \n                    Add/edit a museum\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    museum\n                                    \n                                                WikiEntry\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Museum to be added\n\n                                    \n                                \n                                \n                                    mode\n                                    \n                                                Mode\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        Mode.CREATE\n                                    \n\n                                    \n                                        Whether museum should be created or edited\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            deleteMuseum\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteMuseum(museumId: string | number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wiki-entry/museum.service.ts:70\n                \n            \n\n\n            \n                \n                    Delete a museum\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    museumId\n                                    \n                                            string | number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Id of museum to be deleted\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getMuseum\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMuseum(id: string | number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wiki-entry/museum.service.ts:51\n                \n            \n\n\n            \n                \n                    Get a particular museum\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                            string | number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Id of museum\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getMuseumList\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMuseumList()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wiki-entry/museum.service.ts:42\n                \n            \n\n\n            \n                \n                    Get the list of all museums\n\n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            url\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/wiki-entry/museum.service.ts:24\n                            \n                        \n\n                \n                    \n                        Endpoint url\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {ServerConfigService} from '../config/server-config.service';\nimport {Museum} from '../../models/museum';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {BasicUserInfo} from '../../models/basic-user-info';\nimport {WikiEntry} from '../../models/wiki-entry';\nimport {ServerResponse} from '../server-response';\nimport {Observable} from 'rxjs';\nimport {ProtoMuseum} from '../object-prototypes/proto-museum';\nimport {UserInfoService} from '../user/user-info.service';\nimport {Mode} from '../../edit/mode';\n\n/**\n * Provides interfaces for CRUD museum information\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class MuseumService {\n\n  /**\n   * Endpoint url\n   */\n  private readonly url: string;\n\n  /**\n   * Constructor\n   *\n   * @param serverConfigService Server config\n   * @param http Makes http request\n   * @param userInfo Information of logged in user\n   */\n  constructor(private serverConfigService: ServerConfigService,\n              private http: HttpClient,\n              private userInfo: UserInfoService) {\n    this.url = serverConfigService.getServerConfig().getUrl();\n  }\n\n  /**\n   * Get the list of all museums\n   */\n  public getMuseumList(): Observable {\n    return this.http.get(this.url + 'museum-list');\n  }\n\n  /**\n   * Get a particular museum\n   *\n   * @param id Id of museum\n   */\n  public getMuseum(id: string | number): Observable {\n    return this.http.get(this.url + 'museum/' + id);\n  }\n\n  /**\n   * Add/edit a museum\n   *\n   * @param museum Museum to be added\n   * @param mode Whether museum should be created or edited\n   */\n  public addMuseum(museum: WikiEntry, mode: Mode = Mode.CREATE): Promise {\n    return this.http.post(this.url + 'add-museum', {museum, user: this.userInfo.basicUserInfo}).toPromise();\n  }\n\n  /**\n   * Delete a museum\n   *\n   * @param museumId Id of museum to be deleted\n   */\n  public deleteMuseum(museumId: string | number): Promise {\n    const user = this.userInfo.basicUserInfo;\n    return this.http\n      .post(this.url + 'delete-museum/' + museumId, {\n        username: user.username,\n        password: user.password\n      })\n      .toPromise();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavigationBarComponent.html":{"url":"components/NavigationBarComponent.html","title":"component - NavigationBarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NavigationBarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/static/navigation-bar/navigation-bar.component.ts\n\n\n    \n        Description\n    \n    \n        the top navigation bar of the program\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-navigation-bar\n            \n\n            \n                styleUrls\n                ./navigation-bar.component.css\n            \n\n\n\n            \n                templateUrl\n                ./navigation-bar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                navigationBarItemLinks\n                            \n                            \n                                navigationBarItemNames\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                adjustNavbarBasedOnLoginStatus\n                            \n                            \n                                    Public\n                                navigate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, userInfoService: UserInfoService)\n                    \n                \n                        \n                            \n                                Defined in src/app/static/navigation-bar/navigation-bar.component.ts:22\n                            \n                        \n\n                \n                    \n                            setup the navigation bar based on the login status\nand start tracking the login status so that the navbar is always changed\nwhenever there's a change to login status\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                routes to the destination page when a button is clicked\n\n                                                        \n                                                \n                                                \n                                                        userInfoService\n                                                  \n                                                        \n                                                                        UserInfoService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                provides user login info\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            adjustNavbarBasedOnLoginStatus\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    adjustNavbarBasedOnLoginStatus(loggedIn: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/static/navigation-bar/navigation-bar.component.ts:46\n                \n            \n\n\n            \n                \n                    change the navigation bar based on the login status of the user\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    loggedIn\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        whether the user is logged in\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            navigate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    navigate(link: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/static/navigation-bar/navigation-bar.component.ts:61\n                \n            \n\n\n            \n                \n                    navigate to a certain url\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    link\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the target url of routing\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            navigationBarItemLinks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['', 'home']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/static/navigation-bar/navigation-bar.component.ts:18\n                            \n                        \n\n                \n                    \n                        the urls of navigation bar items\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            navigationBarItemNames\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['', 'Home']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/static/navigation-bar/navigation-bar.component.ts:22\n                            \n                        \n\n                \n                    \n                        the displayed name of navigation bar items\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {Component} from '@angular/core';\nimport {NavigationEnd, Router, Event} from '@angular/router';\nimport {UserInfoService} from '../../services/user/user-info.service';\n\n/**\n * the top navigation bar of the program\n */\n@Component({\n  selector: 'app-navigation-bar',\n  templateUrl: './navigation-bar.component.html',\n  styleUrls: ['./navigation-bar.component.css']\n})\nexport class NavigationBarComponent {\n\n  /**\n   * the urls of navigation bar items\n   */\n  navigationBarItemLinks = ['', 'home'];\n  /**\n   * the displayed name of navigation bar items\n   */\n  navigationBarItemNames = ['', 'Home'];\n\n  /**\n   * setup the navigation bar based on the login status\n   * and start tracking the login status so that the navbar is always changed\n   * whenever there's a change to login status\n   *\n   * @param router routes to the destination page when a button is clicked\n   * @param userInfoService provides user login info\n   */\n  constructor(private router: Router,\n              private userInfoService: UserInfoService) {\n    this.adjustNavbarBasedOnLoginStatus(userInfoService.isLoggedIn);\n    this.userInfoService.trackLoginStatus().subscribe((loggedIn: boolean) => {\n        this.adjustNavbarBasedOnLoginStatus(loggedIn);\n      }\n    );\n  }\n\n  /**\n   * change the navigation bar based on the login status of the user\n   *\n   * @param loggedIn whether the user is logged in\n   */\n  private adjustNavbarBasedOnLoginStatus(loggedIn: boolean): void {\n    if (loggedIn) {\n      this.navigationBarItemNames[0] = 'User Profile';\n      this.navigationBarItemLinks[0] = 'user-profile';\n    } else {\n      this.navigationBarItemLinks[0] = 'login';\n      this.navigationBarItemNames[0] = 'Login';\n    }\n  }\n\n  /**\n   * navigate to a certain url\n   *\n   * @param link the target url of routing\n   */\n  public navigate(link: string): void {\n    this.router.navigateByUrl(link);\n  }\n\n}\n\n    \n\n    \n        \n\n  \n    Museum Wiki\n    \n    \n      {{itemName}}\n    \n  \n\n\n    \n\n    \n                \n                    ./navigation-bar.component.css\n                \n                .fill-remaining-space {\n  flex: 1 1 auto;\n}\n\nbutton:focus {\n  outline: none;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Museum Wiki              {{itemName}}      '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollectionListComponent', 'selector': 'app-collection-list'},{'name': 'ConfirmationModalComponent', 'selector': 'app-confirmation-modal'},{'name': 'CreateComponent', 'selector': 'app-create'},{'name': 'EditComponent', 'selector': 'app-edit'},{'name': 'EditOrCreateComponent', 'selector': 'app-edit-or-create'},{'name': 'EntryListComponent', 'selector': 'app-entry-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownDisplayComponent', 'selector': 'app-markdown-display'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'ModalMessageComponent', 'selector': 'app-modal-message'},{'name': 'MuseumListComponent', 'selector': 'app-museum-list'},{'name': 'NavigationBarComponent', 'selector': 'app-navigation-bar'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'ResetPasswordModalComponent', 'selector': 'app-reset-password-modal'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SearchInCategoryComponent', 'selector': 'app-search-in-category'},{'name': 'TagSelectionComponent', 'selector': 'app-tag-selection'},{'name': 'UserEditListComponent', 'selector': 'app-user-edit-list'},{'name': 'UserMuseumListComponent', 'selector': 'app-user-museum-list'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'ViewComponent', 'selector': 'app-view'},{'name': 'ViewEditComponent', 'selector': 'app-view-edit'},{'name': 'WikiEntryEditorComponent', 'selector': 'app-wiki-entry-editor'},{'name': 'WikiEntryViewComponent', 'selector': 'app-wiki-entry-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavigationBarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PageNotFoundComponent.html":{"url":"components/PageNotFoundComponent.html","title":"component - PageNotFoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PageNotFoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/static/page-not-found/page-not-found.component.ts\n\n\n    \n        Description\n    \n    \n        display an error message if a page is not included in the router\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-page-not-found\n            \n\n            \n                styleUrls\n                ./page-not-found.component.css\n            \n\n\n\n            \n                templateUrl\n                ./page-not-found.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/static/page-not-found/page-not-found.component.ts:16\n                \n            \n\n\n            \n                \n                    static page, so no initialization necessary\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n/**\n * display an error message if a page is not included in the router\n */\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.css']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  /**\n   * static page, so no initialization necessary\n   */\n  ngOnInit(): void {\n  }\n}\n\n    \n\n    \n        \n  Page Not Found!\n\n\n  Home\n\n\n    \n\n    \n                \n                    ./page-not-found.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Page Not Found!  Home'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollectionListComponent', 'selector': 'app-collection-list'},{'name': 'ConfirmationModalComponent', 'selector': 'app-confirmation-modal'},{'name': 'CreateComponent', 'selector': 'app-create'},{'name': 'EditComponent', 'selector': 'app-edit'},{'name': 'EditOrCreateComponent', 'selector': 'app-edit-or-create'},{'name': 'EntryListComponent', 'selector': 'app-entry-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownDisplayComponent', 'selector': 'app-markdown-display'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'ModalMessageComponent', 'selector': 'app-modal-message'},{'name': 'MuseumListComponent', 'selector': 'app-museum-list'},{'name': 'NavigationBarComponent', 'selector': 'app-navigation-bar'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'ResetPasswordModalComponent', 'selector': 'app-reset-password-modal'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SearchInCategoryComponent', 'selector': 'app-search-in-category'},{'name': 'TagSelectionComponent', 'selector': 'app-tag-selection'},{'name': 'UserEditListComponent', 'selector': 'app-user-edit-list'},{'name': 'UserMuseumListComponent', 'selector': 'app-user-museum-list'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'ViewComponent', 'selector': 'app-view'},{'name': 'ViewEditComponent', 'selector': 'app-view-edit'},{'name': 'WikiEntryEditorComponent', 'selector': 'app-wiki-entry-editor'},{'name': 'WikiEntryViewComponent', 'selector': 'app-wiki-entry-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PageNotFoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PreviousRouteService.html":{"url":"injectables/PreviousRouteService.html","title":"injectable - PreviousRouteService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PreviousRouteService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/previous-route.service.ts\n        \n\n            \n                Description\n            \n            \n                Records the previous ActivatedRouteSnapshot that is accessed\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                route\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                toPreviousRoute\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    previousRoute\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/previous-route.service.ts:15\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Routes to the previous route\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toPreviousRoute\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toPreviousRoute()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/previous-route.service.ts:45\n                \n            \n\n\n            \n                \n                    Let the router route the user to the link the user previously tries to access\n\n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            route\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ActivatedRouteSnapshot\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/previous-route.service.ts:15\n                            \n                        \n\n                \n                    \n                        previous route\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        previousRoute\n                    \n                \n\n                \n                    \n                        getpreviousRoute()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/previous-route.service.ts:29\n                                \n                            \n                    \n                        \n                                Getter\n\n\n                                \n                                    Returns :         ActivatedRouteSnapshot\n\n                                \n                        \n                    \n\n                \n                    \n                        setpreviousRoute(previousRoute)\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/previous-route.service.ts:38\n                                \n                            \n                    \n                        \n                                Setter\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            previousRoute\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    Route that the user previously tried to access\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {ActivatedRouteSnapshot, Router} from '@angular/router';\n\n/**\n * Records the previous ActivatedRouteSnapshot that is accessed\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class PreviousRouteService {\n\n  /**\n   * previous route\n   */\n  private route: ActivatedRouteSnapshot;\n\n  /**\n   * Constructor\n   *\n   * @param router Routes to the previous route\n   */\n  constructor(private router: Router) {\n    this.route = undefined;\n  }\n\n  /**\n   * Getter\n   */\n  get previousRoute(): ActivatedRouteSnapshot {\n    return this.route;\n  }\n\n  /**\n   * Setter\n   *\n   * @param previousRoute Route that the user previously tried to access\n   */\n  set previousRoute(previousRoute: ActivatedRouteSnapshot) {\n    this.route = previousRoute;\n  }\n\n  /**\n   * Let the router route the user to the link the user previously tries to access\n   */\n  public toPreviousRoute(): Promise {\n    return this.router.navigateByUrl(this.route.url.join('/'));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProjectConfig.html":{"url":"classes/ProjectConfig.html","title":"class - ProjectConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProjectConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/config/ProjectConfig.ts\n        \n\n            \n                Description\n            \n            \n                Top-level configurations for the project.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                config\n                            \n                            \n                                    Private\n                                    Readonly\n                                log\n                            \n                            \n                                    Static\n                                    Readonly\n                                logInConsole\n                            \n                            \n                                    Private\n                                    Readonly\n                                mock\n                            \n                            \n                                    Private\n                                    Readonly\n                                testing\n                            \n                            \n                                    Static\n                                    Readonly\n                                testingMode\n                            \n                            \n                                    Static\n                                    Readonly\n                                useMockData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                getInstance\n                            \n                            \n                                    Public\n                                isLogging\n                            \n                            \n                                    Public\n                                isTesting\n                            \n                            \n                                    Public\n                                isUsingMockData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(testing, log, mock)\n                    \n                \n                        \n                            \n                                Defined in src/app/config/ProjectConfig.ts:41\n                            \n                        \n\n                \n                    \n                            Creates a project config object based on provided configurations\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        testing\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Whether the program is test\n\n                                                        \n                                                \n                                                \n                                                        log\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Whether the program should log its activities in the console\n\n                                                        \n                                                \n                                                \n                                                        mock\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Whether program should use mock data instead of actual data from backend\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                                Readonly\n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new ProjectConfig(\n    ProjectConfig.testingMode,\n    ProjectConfig.logInConsole,\n    ProjectConfig.useMockData)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/config/ProjectConfig.ts:25\n                            \n                        \n\n                \n                    \n                        An instance of project config based on the settings configured above.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            log\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/config/ProjectConfig.ts:37\n                            \n                        \n\n                \n                    \n                        Whether the program should log its activities in the console\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            logInConsole\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/config/ProjectConfig.ts:14\n                            \n                        \n\n                \n                    \n                        set to true if debugging so that program activities are logged in console\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            mock\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/config/ProjectConfig.ts:41\n                            \n                        \n\n                \n                    \n                        Whether program should use mock data instead of actual data from backend\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            testing\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/config/ProjectConfig.ts:33\n                            \n                        \n\n                \n                    \n                        Whether the program is in testing mode\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            testingMode\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/config/ProjectConfig.ts:9\n                            \n                        \n\n                \n                    \n                        true if project is not in deployment; always true because an actual server is never\nused for this project\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            useMockData\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/config/ProjectConfig.ts:20\n                            \n                        \n\n                \n                    \n                        set to true if no backend server is available; the program will use fake data\nnote that this only works for some pages\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            getInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getInstance()\n                \n            \n\n\n            \n                \n                    Defined in src/app/config/ProjectConfig.ts:59\n                \n            \n\n\n            \n                \n                    Static factory that returns the default project configuration\n\n\n                    \n                        Returns :         ProjectConfig\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isLogging\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isLogging()\n                \n            \n\n\n            \n                \n                    Defined in src/app/config/ProjectConfig.ts:73\n                \n            \n\n\n            \n                \n                    Whether the program should log its activities in the console\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isTesting\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isTesting()\n                \n            \n\n\n            \n                \n                    Defined in src/app/config/ProjectConfig.ts:66\n                \n            \n\n\n            \n                \n                    Whether the program is in testing mode\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isUsingMockData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isUsingMockData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/config/ProjectConfig.ts:80\n                \n            \n\n\n            \n                \n                    Whether program should use mock data instead of actual data from backend\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class ProjectConfig {\n  /**\n   * true if project is not in deployment; always true because an actual server is never\n   * used for this project\n   */\n  public static readonly testingMode = true;\n\n  /**\n   * set to true if debugging so that program activities are logged in console\n   */\n  public static readonly logInConsole = false;\n\n  /**\n   * set to true if no backend server is available; the program will use fake data\n   * note that this only works for some pages\n   */\n  public static readonly useMockData = false;\n\n  /**\n   * An instance of project config based on the settings configured above.\n   */\n  private static readonly config = new ProjectConfig(\n    ProjectConfig.testingMode,\n    ProjectConfig.logInConsole,\n    ProjectConfig.useMockData);\n\n  /**\n   * Whether the program is in testing mode\n   */\n  private readonly testing;\n  /**\n   * Whether the program should log its activities in the console\n   */\n  private readonly log;\n  /**\n   * Whether program should use mock data instead of actual data from backend\n   */\n  private readonly mock;\n\n  /**\n   * Creates a project config object based on provided configurations\n   *\n   * @param testing Whether the program is test\n   * @param log Whether the program should log its activities in the console\n   * @param mock Whether program should use mock data instead of actual data from backend\n   */\n  constructor(testing, log, mock) {\n    this.testing = testing;\n    this.log = log;\n    this.mock = mock;\n  }\n\n  /**\n   * Static factory that returns the default project configuration\n   */\n  public static getInstance(): ProjectConfig {\n    return this.config;\n  }\n\n  /**\n   * Whether the program is in testing mode\n   */\n  public isTesting(): boolean {\n    return this.testing;\n  }\n\n  /**\n   * Whether the program should log its activities in the console\n   */\n  public isLogging(): boolean {\n    return this.log;\n  }\n\n  /**\n   * Whether program should use mock data instead of actual data from backend\n   */\n  public isUsingMockData(): boolean {\n    return this.mock;\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProjectConfigService.html":{"url":"injectables/ProjectConfigService.html","title":"injectable - ProjectConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ProjectConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/config/project-config.service.ts\n        \n\n            \n                Description\n            \n            \n                Creates project config based on preselected values\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                projectConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getProjectConfig\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(projectConfig?: ProjectConfig)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/config/project-config.service.ts:15\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        projectConfig\n                                                  \n                                                        \n                                                                        ProjectConfig\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                                An existing project config to be used\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getProjectConfig\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getProjectConfig()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/config/project-config.service.ts:29\n                \n            \n\n\n            \n                \n                    Retrieve the current project configuration\n\n\n                    \n                        Returns :         ProjectConfig\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            projectConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ProjectConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/config/project-config.service.ts:15\n                            \n                        \n\n                \n                    \n                        The created project config\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable, Optional} from '@angular/core';\nimport {ProjectConfig} from '../../config/ProjectConfig';\n\n/**\n * Creates project config based on preselected values\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProjectConfigService {\n\n  /**\n   * The created project config\n   */\n  private readonly projectConfig: ProjectConfig;\n\n  /**\n   * Constructor\n   *\n   * @param projectConfig An existing project config to be used\n   */\n  constructor(@Optional() projectConfig?: ProjectConfig) {\n    this.projectConfig = projectConfig ? projectConfig : ProjectConfig.getInstance();\n  }\n\n  /**\n   * Retrieve the current project configuration\n   */\n  public getProjectConfig(): ProjectConfig {\n    return this.projectConfig;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProtoArtifact.html":{"url":"classes/ProtoArtifact.html","title":"class - ProtoArtifact","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProtoArtifact\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/object-prototypes/proto-artifact.ts\n        \n\n            \n                Description\n            \n            \n                Artifact object received from the server\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                artifact\n                            \n                            \n                                collectionList\n                            \n                            \n                                museum\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                toArtifact\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            artifact\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Artifact\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/object-prototypes/proto-artifact.ts:19\n                            \n                        \n\n                \n                    \n                        Basic info of the current artifact\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            collectionList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BasicEntry[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/object-prototypes/proto-artifact.ts:15\n                            \n                        \n\n                \n                    \n                        List of collections associated with this artifact\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            museum\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BasicEntry\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/object-prototypes/proto-artifact.ts:11\n                            \n                        \n\n                \n                    \n                        The museum to which this artifact belongs\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            toArtifact\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toArtifact(protoArtifact: ProtoArtifact)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/object-prototypes/proto-artifact.ts:26\n                \n            \n\n\n            \n                \n                    Converts a proto artifact into an Artifact object\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    protoArtifact\n                                    \n                                                ProtoArtifact\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The object to be converted\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Artifact\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {BasicEntry} from '../../models/basic-entry';\nimport {Artifact} from '../../models/artifact';\n\n/**\n * Artifact object received from the server\n */\nexport class ProtoArtifact {\n  /**\n   * The museum to which this artifact belongs\n   */\n  museum: BasicEntry;\n  /**\n   * List of collections associated with this artifact\n   */\n  collectionList: BasicEntry[];\n  /**\n   * Basic info of the current artifact\n   */\n  artifact: Artifact;\n\n  /**\n   * Converts a proto artifact into an Artifact object\n   *\n   * @param protoArtifact The object to be converted\n   */\n  public static toArtifact(protoArtifact: ProtoArtifact): Artifact {\n    if (!protoArtifact || !protoArtifact.artifact) {\n      return undefined;\n    }\n    protoArtifact.artifact.museum = protoArtifact.museum;\n    protoArtifact.artifact.collectionList = protoArtifact.collectionList;\n    return protoArtifact.artifact;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProtoCollection.html":{"url":"classes/ProtoCollection.html","title":"class - ProtoCollection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProtoCollection\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/object-prototypes/proto-collection.ts\n        \n\n            \n                Description\n            \n            \n                A collection received from the backend\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                artifactList\n                            \n                            \n                                collection\n                            \n                            \n                                museum\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                toCollection\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            artifactList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Artifact[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/object-prototypes/proto-collection.ts:21\n                            \n                        \n\n                \n                    \n                        The list of artifacts this collection contains\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            collection\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Collection\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/object-prototypes/proto-collection.ts:17\n                            \n                        \n\n                \n                    \n                        The collection object itself\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            museum\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         WikiEntry\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/object-prototypes/proto-collection.ts:13\n                            \n                        \n\n                \n                    \n                        Museum to which this collection belongs\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            toCollection\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toCollection(protoCollection: ProtoCollection)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/object-prototypes/proto-collection.ts:28\n                \n            \n\n\n            \n                \n                    Converts a protoCollection to a Collection object\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    protoCollection\n                                    \n                                                ProtoCollection\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The protoCollection to be converted\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Collection\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {WikiEntry} from '../../models/wiki-entry';\nimport {Collection} from '../../models/collection';\nimport {Artifact} from '../../models/artifact';\nimport {CollectionBuilder} from '../../models/builders/collection-builder';\n\n/**\n * A collection received from the backend\n */\nexport class ProtoCollection {\n  /**\n   * Museum to which this collection belongs\n   */\n  museum: WikiEntry;\n  /**\n   * The collection object itself\n   */\n  collection: Collection;\n  /**\n   * The list of artifacts this collection contains\n   */\n  artifactList: Artifact[];\n\n  /**\n   * Converts a protoCollection to a Collection object\n   *\n   * @param protoCollection The protoCollection to be converted\n   */\n  static toCollection(protoCollection: ProtoCollection): Collection {\n    if (!protoCollection) {\n      return undefined;\n    }\n    return new CollectionBuilder()\n      .museum(protoCollection.museum)\n      .wikiEntry(protoCollection.collection)\n      .artifacts(protoCollection.artifactList)\n      .build();\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProtoEdit.html":{"url":"classes/ProtoEdit.html","title":"class - ProtoEdit","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProtoEdit\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/object-prototypes/proto-edit.ts\n        \n\n            \n                Description\n            \n            \n                Edit received from the backend\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                approvalStatus\n                            \n                            \n                                artifact\n                            \n                            \n                                category\n                            \n                            \n                                collection\n                            \n                            \n                                id\n                            \n                            \n                                museum\n                            \n                            \n                                reviewer\n                            \n                            \n                                reviewerUsername\n                            \n                            \n                                time\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                toEdit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            approvalStatus\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/object-prototypes/proto-edit.ts:43\n                            \n                        \n\n                \n                    \n                        Under review/Approved/Denied\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            artifact\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ProtoArtifact\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/object-prototypes/proto-edit.ts:31\n                            \n                        \n\n                \n                    \n                        The changed artifact if it exists\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            category\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/object-prototypes/proto-edit.ts:27\n                            \n                        \n\n                \n                    \n                        Category of the entry being edited\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            collection\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ProtoCollection\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/object-prototypes/proto-edit.ts:35\n                            \n                        \n\n                \n                    \n                        The changed collection if it exists\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/object-prototypes/proto-edit.ts:19\n                            \n                        \n\n                \n                    \n                        Id of edit\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            museum\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ProtoMuseum\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/object-prototypes/proto-edit.ts:39\n                            \n                        \n\n                \n                    \n                        The changed museum if it exists\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reviewer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BasicUserInfo\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/object-prototypes/proto-edit.ts:51\n                            \n                        \n\n                \n                    \n                        The user responsible for reviewing this edit\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reviewerUsername\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/object-prototypes/proto-edit.ts:55\n                            \n                        \n\n                \n                    \n                        The username of the reviewer\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            time\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/object-prototypes/proto-edit.ts:47\n                            \n                        \n\n                \n                    \n                        ISO time string for the date this edit request is made\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/object-prototypes/proto-edit.ts:23\n                            \n                        \n\n                \n                    \n                        Type of edit (addition/deletion/edit)\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            toEdit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toEdit(protoEdit: ProtoEdit)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/object-prototypes/proto-edit.ts:62\n                \n            \n\n\n            \n                \n                    Convert a ProtoEdit to an Edit\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    protoEdit\n                                    \n                                                ProtoEdit\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ProtoEdit to be converted\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Edit\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {Artifact} from '../../models/artifact';\nimport {Collection} from '../../models/collection';\nimport {ProtoArtifact} from './proto-artifact';\nimport {Edit} from '../../models/edit';\nimport {EditBuilder} from '../../models/builders/edit-builder';\nimport {ProtoCollection} from './proto-collection';\nimport {CollectionBuilder} from '../../models/builders/collection-builder';\nimport {ProtoMuseum} from './proto-museum';\nimport {Museum} from '../../models/museum';\nimport {BasicUserInfo} from '../../models/basic-user-info';\n\n/**\n * Edit received from the backend\n */\nexport class ProtoEdit {\n  /**\n   * Id of edit\n   */\n  id: number;\n  /**\n   * Type of edit (addition/deletion/edit)\n   */\n  type: string;\n  /**\n   * Category of the entry being edited\n   */\n  category: string;\n  /**\n   * The changed artifact if it exists\n   */\n  artifact: ProtoArtifact;\n  /**\n   * The changed collection if it exists\n   */\n  collection: ProtoCollection;\n  /**\n   * The changed museum if it exists\n   */\n  museum: ProtoMuseum;\n  /**\n   * Under review/Approved/Denied\n   */\n  approvalStatus: string;\n  /**\n   * ISO time string for the date this edit request is made\n   */\n  time: string;\n  /**\n   * The user responsible for reviewing this edit\n   */\n  reviewer: BasicUserInfo;\n  /**\n   * The username of the reviewer\n   */\n  reviewerUsername: string;\n\n  /**\n   * Convert a ProtoEdit to an Edit\n   *\n   * @param protoEdit The ProtoEdit to be converted\n   */\n  static toEdit(protoEdit: ProtoEdit): Edit {\n    return new EditBuilder()\n      .id(protoEdit.id)\n      .museum(Museum.of(protoEdit.museum?.museum))\n      .collection(ProtoCollection.toCollection(protoEdit.collection))\n      .artifact(ProtoArtifact.toArtifact(protoEdit.artifact))\n      .category(protoEdit.category)\n      .type(protoEdit.type)\n      .date(protoEdit.time)\n      .approvalStatus(protoEdit.approvalStatus)\n      .reviewerUsername(protoEdit.reviewer ? protoEdit.reviewer.username : protoEdit.reviewerUsername)\n      .build();\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProtoMuseum.html":{"url":"classes/ProtoMuseum.html","title":"class - ProtoMuseum","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProtoMuseum\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/object-prototypes/proto-museum.ts\n        \n\n            \n                Description\n            \n            \n                A museum passed from the backend\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                collectionList\n                            \n                            \n                                museum\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            collectionList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         WikiEntry[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/object-prototypes/proto-museum.ts:15\n                            \n                        \n\n                \n                    \n                        A list of collections belonging to this museum\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            museum\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Museum\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/object-prototypes/proto-museum.ts:11\n                            \n                        \n\n                \n                    \n                        The museum object itself\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Museum} from '../../models/museum';\nimport {WikiEntry} from '../../models/wiki-entry';\n\n/**\n * A museum passed from the backend\n */\nexport class ProtoMuseum {\n  /**\n   * The museum object itself\n   */\n  museum: Museum;\n  /**\n   * A list of collections belonging to this museum\n   */\n  collectionList: WikiEntry[];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProtoUser.html":{"url":"classes/ProtoUser.html","title":"class - ProtoUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProtoUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/object-prototypes/proto-user.ts\n        \n\n            \n                Description\n            \n            \n                A user object sent by the backend\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                actionsList\n                            \n                            \n                                editsList\n                            \n                            \n                                headCuratorList\n                            \n                            \n                                museumList\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                toUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            actionsList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ProtoEdit[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/object-prototypes/proto-user.ts:24\n                            \n                        \n\n                \n                    \n                        List of edits waiting for review of this user\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editsList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ProtoEdit[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/object-prototypes/proto-user.ts:28\n                            \n                        \n\n                \n                    \n                        List of edits submitted by this user\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            headCuratorList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         WikiEntry[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/object-prototypes/proto-user.ts:20\n                            \n                        \n\n                \n                    \n                        List of all museums reserved for head curator\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            museumList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         WikiEntry[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/object-prototypes/proto-user.ts:16\n                            \n                        \n\n                \n                    \n                        List of museum the user owns\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/object-prototypes/proto-user.ts:12\n                            \n                        \n\n                \n                    \n                        The user object containing only username and email\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            toUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toUser(protoUser: ProtoUser)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/object-prototypes/proto-user.ts:35\n                \n            \n\n\n            \n                \n                    Convert a protoUser to User\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    protoUser\n                                    \n                                                ProtoUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ProtoUser to be converted\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         User\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {User} from '../../models/user';\nimport {WikiEntry} from '../../models/wiki-entry';\nimport {ProtoEdit} from './proto-edit';\n\n/**\n * A user object sent by the backend\n */\nexport class ProtoUser {\n  /**\n   * The user object containing only username and email\n   */\n  user: User;\n  /**\n   * List of museum the user owns\n   */\n  museumList: WikiEntry[];\n  /**\n   * List of all museums reserved for head curator\n   */\n  headCuratorList: WikiEntry[];\n  /**\n   * List of edits waiting for review of this user\n   */\n  actionsList: ProtoEdit[];\n  /**\n   * List of edits submitted by this user\n   */\n  editsList: ProtoEdit[];\n\n  /**\n   * Convert a protoUser to User\n   *\n   * @param protoUser The ProtoUser to be converted\n   */\n  static toUser(protoUser: ProtoUser): User {\n    protoUser.user.museumList = protoUser.museumList;\n    protoUser.user.headCuratorList = protoUser.headCuratorList;\n    protoUser.user.actionsList = protoUser.actionsList?.map(protoEdit => ProtoEdit.toEdit(protoEdit));\n    protoUser.user.editsList = protoUser.editsList?.map(protoEdit => ProtoEdit.toEdit(protoEdit));\n    return protoUser.user;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PrototypeBuilder.html":{"url":"classes/PrototypeBuilder.html","title":"class - PrototypeBuilder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PrototypeBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/builders/prototype-builder.ts\n        \n\n            \n                Description\n            \n            \n                Build museum/collection/artifact from prototype\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                buildFromPrototype\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            buildFromPrototype\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    buildFromPrototype(prototype: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/builders/prototype-builder.ts:21\n                \n            \n\n\n            \n                \n                    Build museum/collection/artifact from prototype\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    prototype\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The prototype from which the object is built\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Museum | Collection | Artifact\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {ProtoMuseum} from '../../services/object-prototypes/proto-museum';\nimport {ProtoCollection} from '../../services/object-prototypes/proto-collection';\nimport {ProtoArtifact} from '../../services/object-prototypes/proto-artifact';\nimport {MuseumBuilder} from './museum-builder';\nimport {WikiEntry} from '../wiki-entry';\nimport {Collection} from '../collection';\nimport {Museum} from '../museum';\nimport {Artifact} from '../artifact';\nimport {CollectionBuilder} from './collection-builder';\nimport {ArtifactBuilder} from './artifact-builder';\n\n/**\n * Build museum/collection/artifact from prototype\n */\nexport class PrototypeBuilder {\n  /**\n   * Build museum/collection/artifact from prototype\n   *\n   * @param prototype The prototype from which the object is built\n   */\n  static buildFromPrototype(prototype:\n                              {\n                                museum?: ProtoMuseum,\n                                collection?: ProtoCollection,\n                                artifact?: ProtoArtifact\n                              }): Museum | Collection | Artifact {\n    if (prototype.museum) {\n      return new MuseumBuilder().wikiEntry(prototype.museum.museum).collections(prototype.museum.collectionList).build();\n    }\n    if (prototype.collection) {\n      const res = prototype.collection;\n      return new CollectionBuilder()\n        .wikiEntry(res.collection)\n        .artifacts(res.artifactList)\n        .museum(res.museum)\n        .build();\n    }\n    if (prototype.artifact) {\n      const res = prototype.artifact;\n      return new ArtifactBuilder()\n        .wikiEntry(res.artifact)\n        .museum(res.museum)\n        .collectionList(res.collectionList)\n        .build();\n    }\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegistrationComponent.html":{"url":"components/RegistrationComponent.html","title":"component - RegistrationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RegistrationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/user/registration/registration.component.ts\n\n\n    \n        Description\n    \n    \n        facilitates user registration\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-registration\n            \n\n            \n                styleUrls\n                ./registration.component.css\n            \n\n\n\n            \n                templateUrl\n                ./registration.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                _MAX_PASSWORD_LENGTH\n                            \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                _MAX_USERNAME_LENGTH\n                            \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                _MIN_PASSWORD_LENGTH\n                            \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                _MIN_USERNAME_LENGTH\n                            \n                            \n                                registrationForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                register\n                            \n                            \n                                    Private\n                                    Static\n                                retypePasswordValidator\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    MIN_USERNAME_LENGTH\n                                \n                                \n                                    MAX_USERNAME_LENGTH\n                                \n                                \n                                    MIN_PASSWORD_LENGTH\n                                \n                                \n                                    MAX_PASSWORD_LENGTH\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, loginService: LoginService, userInfoService: UserInfoService, modalService: NgbModal)\n                    \n                \n                        \n                            \n                                Defined in src/app/user/registration/registration.component.ts:59\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                route to other pages\n\n                                                        \n                                                \n                                                \n                                                        loginService\n                                                  \n                                                        \n                                                                        LoginService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                handle registration\n\n                                                        \n                                                \n                                                \n                                                        userInfoService\n                                                  \n                                                        \n                                                                        UserInfoService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                determine user login information\n\n                                                        \n                                                \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                    NgbModal\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                open modal for user feedback\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/user/registration/registration.component.ts:90\n                \n            \n\n\n            \n                \n                    determine whether user is already registered\nif so, go straight to user profile\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            register\n                        \n                        \n                    \n                \n            \n            \n                \nregister()\n                \n            \n\n\n            \n                \n                    Defined in src/app/user/registration/registration.component.ts:99\n                \n            \n\n\n            \n                \n                    create a new account\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            retypePasswordValidator\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    retypePasswordValidator(form: FormGroup)\n                \n            \n\n\n            \n                \n                    Defined in src/app/user/registration/registration.component.ts:80\n                \n            \n\n\n            \n                \n                    validate whether the user has the correct retyped password\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    form\n                                    \n                                                FormGroup\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the registration form containing password and retyped password\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ValidationErrors | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                                Readonly\n                            _MAX_PASSWORD_LENGTH\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 20\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user/registration/registration.component.ts:37\n                            \n                        \n\n                \n                    \n                        maximum password length\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                                Readonly\n                            _MAX_USERNAME_LENGTH\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 20\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user/registration/registration.component.ts:28\n                            \n                        \n\n                \n                    \n                        maximum username length\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                                Readonly\n                            _MIN_PASSWORD_LENGTH\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 6\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user/registration/registration.component.ts:33\n                            \n                        \n\n                \n                    \n                        minimum password length\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                                Readonly\n                            _MIN_USERNAME_LENGTH\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 2\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user/registration/registration.component.ts:24\n                            \n                        \n\n                \n                    \n                        minimum username length\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registrationForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new FormGroup({\n      username: new FormControl(\n        '',\n        [\n          Validators.required,\n          Validators.minLength(RegistrationComponent._MIN_USERNAME_LENGTH),\n          Validators.maxLength(RegistrationComponent._MAX_USERNAME_LENGTH)]),\n      password: new FormControl('',\n        [\n          Validators.minLength(RegistrationComponent._MIN_PASSWORD_LENGTH),\n          Validators.maxLength(RegistrationComponent._MAX_PASSWORD_LENGTH)]),\n      retypePassword: new FormControl('', RegistrationComponent.retypePasswordValidator),\n      email: new FormControl('', [Validators.email])\n    },\n    {\n      // validate that retyped password matches the password\n      validators: [RegistrationComponent.retypePasswordValidator]\n    })\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user/registration/registration.component.ts:42\n                            \n                        \n\n                \n                    \n                        form group for user registration\n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        MIN_USERNAME_LENGTH\n                    \n                \n\n                \n                    \n                        getMIN_USERNAME_LENGTH()\n                    \n                \n                            \n                                \n                                    Defined in src/app/user/registration/registration.component.ts:140\n                                \n                            \n                    \n                        \n                                getter\n\n\n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        MAX_USERNAME_LENGTH\n                    \n                \n\n                \n                    \n                        getMAX_USERNAME_LENGTH()\n                    \n                \n                            \n                                \n                                    Defined in src/app/user/registration/registration.component.ts:147\n                                \n                            \n                    \n                        \n                                getter\n\n\n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        MIN_PASSWORD_LENGTH\n                    \n                \n\n                \n                    \n                        getMIN_PASSWORD_LENGTH()\n                    \n                \n                            \n                                \n                                    Defined in src/app/user/registration/registration.component.ts:154\n                                \n                            \n                    \n                        \n                                getter\n\n\n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        MAX_PASSWORD_LENGTH\n                    \n                \n\n                \n                    \n                        getMAX_PASSWORD_LENGTH()\n                    \n                \n                            \n                                \n                                    Defined in src/app/user/registration/registration.component.ts:161\n                                \n                            \n                    \n                        \n                                getter\n\n\n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {LoginService} from '../../services/user/login.service';\nimport {User} from '../../models/user';\nimport {UserInfoService} from '../../services/user/user-info.service';\nimport {ServerResponse} from '../../services/server-response';\nimport {Router} from '@angular/router';\nimport {NgbModal} from '@ng-bootstrap/ng-bootstrap';\nimport {ModalMessageComponent} from '../../static/modal-message/modal-message.component';\nimport {FormGroup, FormControl, Validators, AbstractControl, ValidatorFn, ValidationErrors} from '@angular/forms';\n\n/**\n * facilitates user registration\n */\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.css']\n})\nexport class RegistrationComponent implements OnInit {\n\n  /**\n   * minimum username length\n   */\n  private static readonly _MIN_USERNAME_LENGTH = 2;\n  /**\n   * maximum username length\n   */\n  private static readonly _MAX_USERNAME_LENGTH = 20;\n\n  /**\n   * minimum password length\n   */\n  private static readonly _MIN_PASSWORD_LENGTH = 6;\n  /**\n   * maximum password length\n   */\n  private static readonly _MAX_PASSWORD_LENGTH = 20;\n\n  /**\n   * form group for user registration\n   */\n  registrationForm = new FormGroup({\n      username: new FormControl(\n        '',\n        [\n          Validators.required,\n          Validators.minLength(RegistrationComponent._MIN_USERNAME_LENGTH),\n          Validators.maxLength(RegistrationComponent._MAX_USERNAME_LENGTH)]),\n      password: new FormControl('',\n        [\n          Validators.minLength(RegistrationComponent._MIN_PASSWORD_LENGTH),\n          Validators.maxLength(RegistrationComponent._MAX_PASSWORD_LENGTH)]),\n      retypePassword: new FormControl('', RegistrationComponent.retypePasswordValidator),\n      email: new FormControl('', [Validators.email])\n    },\n    {\n      // validate that retyped password matches the password\n      validators: [RegistrationComponent.retypePasswordValidator]\n    });\n\n  /**\n   * constructor\n   *\n   * @param router route to other pages\n   * @param loginService handle registration\n   * @param userInfoService determine user login information\n   * @param modalService open modal for user feedback\n   */\n  constructor(private router: Router,\n              private loginService: LoginService,\n              private userInfoService: UserInfoService,\n              private modalService: NgbModal) {\n  }\n\n  /**\n   * validate whether the user has the correct retyped password\n   *\n   * @param form the registration form containing password and retyped password\n   */\n  private static retypePasswordValidator(form: FormGroup): ValidationErrors | null {\n    const password = form.value.password;\n    const retypePassword = form.value.retypePassword;\n    return password === retypePassword ? null : {passwordNotMatch: true};\n  }\n\n  /**\n   * determine whether user is already registered\n   * if so, go straight to user profile\n   */\n  ngOnInit(): void {\n    if (this.userInfoService.isLoggedIn) {\n      this.router.navigateByUrl('user-profile');\n    }\n  }\n\n  /**\n   * create a new account\n   */\n  register(): void {\n    const form = this.registrationForm;\n    // create new user object\n    const newUser: User = new User(\n      form.get('username').value,\n      form.get('email').value,\n      form.get('password').value\n    );\n\n    // open modal and let it display the message for waiting for server response\n    const modal = this.modalService.open(ModalMessageComponent);\n    const modalComponent = modal.componentInstance;\n    modalComponent.title = 'Registration';\n    modalComponent.modal = modal;\n    modalComponent.waitingForServerResponse();\n\n    this\n      .loginService\n      .register(newUser)\n      .then(\n        (res: ServerResponse) => {\n          modalComponent.fromServerResponse(res);\n          if (res.success) {\n            // let user login after successful registration\n            modalComponent.message += '\\nRedirecting to login page in 1 second.';\n            setTimeout(() => {\n              modal.close();\n              this.router.navigateByUrl('/login');\n            }, 1000);\n          }\n        },\n        (error) => {\n          modalComponent.fromNetworkError(error);\n          console.log(error);\n        }\n      );\n  }\n\n  /**\n   * getter\n   */\n  get MIN_USERNAME_LENGTH(): number {\n    return RegistrationComponent._MIN_USERNAME_LENGTH;\n  }\n\n  /**\n   * getter\n   */\n  get MAX_USERNAME_LENGTH(): number {\n    return RegistrationComponent._MAX_USERNAME_LENGTH;\n  }\n\n  /**\n   * getter\n   */\n  get MIN_PASSWORD_LENGTH(): number {\n    return RegistrationComponent._MIN_PASSWORD_LENGTH;\n  }\n\n  /**\n   * getter\n   */\n  get MAX_PASSWORD_LENGTH(): number {\n    return RegistrationComponent._MAX_PASSWORD_LENGTH;\n  }\n}\n\n    \n\n    \n        Please Register\n\n\n  Username: \n  \n  \n    Username must contain at least {{this.MIN_USERNAME_LENGTH}} characters\n    and at most {{this.MAX_USERNAME_LENGTH}} characters.\n  \n\n  \n    Password:\n  \n  \n  \n    Password must contain at least {{this.MIN_PASSWORD_LENGTH}} characters\n    and at most {{this.MAX_PASSWORD_LENGTH}} characters.\n  \n\n  \n    Retype Password:\n  \n  \n  \n    Retyped password does not match password.\n  \n\n  \n    Email:\n  \n  \n  \n    Invalid email address.\n  \n\n  \n    \n      Register\n    \n  \n\n\n\n    \n\n    \n                \n                    ./registration.component.css\n                \n                .ng-invalid {\n  border-color: red;\n}\n\n.ng-valid {\n  border-color: green;\n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Please Register  Username:         Username must contain at least {{this.MIN_USERNAME_LENGTH}} characters    and at most {{this.MAX_USERNAME_LENGTH}} characters.        Password:          Password must contain at least {{this.MIN_PASSWORD_LENGTH}} characters    and at most {{this.MAX_PASSWORD_LENGTH}} characters.        Retype Password:          Retyped password does not match password.        Email:          Invalid email address.              Register      '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollectionListComponent', 'selector': 'app-collection-list'},{'name': 'ConfirmationModalComponent', 'selector': 'app-confirmation-modal'},{'name': 'CreateComponent', 'selector': 'app-create'},{'name': 'EditComponent', 'selector': 'app-edit'},{'name': 'EditOrCreateComponent', 'selector': 'app-edit-or-create'},{'name': 'EntryListComponent', 'selector': 'app-entry-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownDisplayComponent', 'selector': 'app-markdown-display'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'ModalMessageComponent', 'selector': 'app-modal-message'},{'name': 'MuseumListComponent', 'selector': 'app-museum-list'},{'name': 'NavigationBarComponent', 'selector': 'app-navigation-bar'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'ResetPasswordModalComponent', 'selector': 'app-reset-password-modal'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SearchInCategoryComponent', 'selector': 'app-search-in-category'},{'name': 'TagSelectionComponent', 'selector': 'app-tag-selection'},{'name': 'UserEditListComponent', 'selector': 'app-user-edit-list'},{'name': 'UserMuseumListComponent', 'selector': 'app-user-museum-list'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'ViewComponent', 'selector': 'app-view'},{'name': 'ViewEditComponent', 'selector': 'app-view-edit'},{'name': 'WikiEntryEditorComponent', 'selector': 'app-wiki-entry-editor'},{'name': 'WikiEntryViewComponent', 'selector': 'app-wiki-entry-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegistrationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResetPasswordModalComponent.html":{"url":"components/ResetPasswordModalComponent.html","title":"component - ResetPasswordModalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ResetPasswordModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/static/reset-password-modal/reset-password-modal.component.ts\n\n\n    \n        Description\n    \n    \n        a modal prompting for the user to enter his/her username\nfor password reset\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-reset-password-modal\n            \n\n            \n                styleUrls\n                ./reset-password-modal.component.css\n            \n\n\n\n            \n                templateUrl\n                ./reset-password-modal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                modal\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                submit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(loginService: LoginService)\n                    \n                \n                        \n                            \n                                Defined in src/app/static/reset-password-modal/reset-password-modal.component.ts:25\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        loginService\n                                                  \n                                                        \n                                                                        LoginService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                provides api for password reset\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            close\n                        \n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/static/reset-password-modal/reset-password-modal.component.ts:51\n                \n            \n\n\n            \n                \n                    triggered if user clicks the close button\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/static/reset-password-modal/reset-password-modal.component.ts:38\n                \n            \n\n\n            \n                \n                    method does not need any initialization\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            submit\n                        \n                        \n                    \n                \n            \n            \n                \nsubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/static/reset-password-modal/reset-password-modal.component.ts:44\n                \n            \n\n\n            \n                \n                    submit the typed username\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modal\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     NgbActiveModal\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/static/reset-password-modal/reset-password-modal.component.ts:21\n                            \n                        \n\n                \n                    \n                        modal object that displays this component\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/static/reset-password-modal/reset-password-modal.component.ts:25\n                            \n                        \n\n                \n                    \n                        the username typed by the user\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {NgbActiveModal} from '@ng-bootstrap/ng-bootstrap';\nimport {HttpClient} from '@angular/common/http';\nimport {LoginService} from '../../services/user/login.service';\nimport {ServerResponse} from '../../services/server-response';\nimport {Wrapper} from '../../models/Wrapper';\n\n/**\n * a modal prompting for the user to enter his/her username\n * for password reset\n */\n@Component({\n  selector: 'app-reset-password-modal',\n  templateUrl: './reset-password-modal.component.html',\n  styleUrls: ['./reset-password-modal.component.css']\n})\nexport class ResetPasswordModalComponent implements OnInit {\n  /**\n   * modal object that displays this component\n   */\n  modal: NgbActiveModal;\n  /**\n   * the username typed by the user\n   */\n  username: string;\n\n  /**\n   * constructor\n   *\n   * @param loginService provides api for password reset\n   */\n  constructor(private loginService: LoginService) {\n  }\n\n  /**\n   * method does not need any initialization\n   */\n  ngOnInit(): void {\n  }\n\n  /**\n   * submit the typed username\n   */\n  submit() {\n    this.modal.close(new Wrapper>(this.loginService.resetPassword(this.username)));\n  }\n\n  /**\n   * triggered if user clicks the close button\n   */\n  close() {\n    this.modal.dismiss('User clicked close button');\n  }\n}\n\n    \n\n    \n        \n  Reset Password\n\n\n  Your username: \n  \n\n\n  Submit\n  Close\n\n\n    \n\n    \n                \n                    ./reset-password-modal.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Reset Password  Your username:     Submit  Close'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollectionListComponent', 'selector': 'app-collection-list'},{'name': 'ConfirmationModalComponent', 'selector': 'app-confirmation-modal'},{'name': 'CreateComponent', 'selector': 'app-create'},{'name': 'EditComponent', 'selector': 'app-edit'},{'name': 'EditOrCreateComponent', 'selector': 'app-edit-or-create'},{'name': 'EntryListComponent', 'selector': 'app-entry-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownDisplayComponent', 'selector': 'app-markdown-display'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'ModalMessageComponent', 'selector': 'app-modal-message'},{'name': 'MuseumListComponent', 'selector': 'app-museum-list'},{'name': 'NavigationBarComponent', 'selector': 'app-navigation-bar'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'ResetPasswordModalComponent', 'selector': 'app-reset-password-modal'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SearchInCategoryComponent', 'selector': 'app-search-in-category'},{'name': 'TagSelectionComponent', 'selector': 'app-tag-selection'},{'name': 'UserEditListComponent', 'selector': 'app-user-edit-list'},{'name': 'UserMuseumListComponent', 'selector': 'app-user-museum-list'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'ViewComponent', 'selector': 'app-view'},{'name': 'ViewEditComponent', 'selector': 'app-view-edit'},{'name': 'WikiEntryEditorComponent', 'selector': 'app-wiki-entry-editor'},{'name': 'WikiEntryViewComponent', 'selector': 'app-wiki-entry-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ResetPasswordModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SearchComponent.html":{"url":"components/SearchComponent.html","title":"component - SearchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SearchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/static/search/search/search.component.ts\n\n\n    \n        Description\n    \n    \n        allows searching for something in the entire database, currently unused\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-search\n            \n\n            \n                styleUrls\n                ./search.component.css\n            \n\n\n\n            \n                templateUrl\n                ./search.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                DEFAULT_SEARCH_CATEGORY\n                            \n                            \n                                SEARCH_OPTIONS\n                            \n                            \n                                searchCategory\n                            \n                            \n                                searchText\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                search\n                            \n                            \n                                setToInput\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                previousCategory\n                            \n                            \n                                previousText\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/static/search/search/search.component.ts:39\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                routes to the search results page\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        previousCategory\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/static/search/search/search.component.ts:35\n                            \n                        \n                \n                    \n                        if there's a previously selected category, default to this one instead\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        previousText\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/static/search/search/search.component.ts:39\n                            \n                        \n                \n                    \n                        if the user previously searched for a text, default to this instead\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/static/search/search/search.component.ts:52\n                \n            \n\n\n            \n                \n                    initialize search fields\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            search\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    search()\n                \n            \n\n\n            \n                \n                    Defined in src/app/static/search/search/search.component.ts:68\n                \n            \n\n\n            \n                \n                    navigate to search results url to perform a search\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setToInput\n                        \n                        \n                    \n                \n            \n            \n                \nsetToInput()\n                \n            \n\n\n            \n                \n                    Defined in src/app/static/search/search/search.component.ts:60\n                \n            \n\n\n            \n                \n                    if there's a previous search, populate input boxes with previous search\notherwise, initialize everything to the default value\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            DEFAULT_SEARCH_CATEGORY\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.SEARCH_OPTIONS[0]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/static/search/search/search.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SEARCH_OPTIONS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['all', 'museum', 'collection', 'artifact']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/static/search/search/search.component.ts:28\n                            \n                        \n\n                \n                    \n                        the options the user have for a search\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            searchCategory\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/static/search/search/search.component.ts:18\n                            \n                        \n\n                \n                    \n                        the category in which the search is conducted\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            searchText\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/static/search/search/search.component.ts:23\n                            \n                        \n\n                \n                    \n                        the user inputted search text\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {Component, Input, OnChanges, OnInit, SimpleChanges} from '@angular/core';\nimport {FormControl} from '@angular/forms';\nimport {Router} from '@angular/router';\n\n/**\n * allows searching for something in the entire database, currently unused\n */\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.css']\n})\nexport class SearchComponent implements OnInit {\n\n  /**\n   * the category in which the search is conducted\n   */\n  searchCategory: string;\n\n  /**\n   * the user inputted search text\n   */\n  searchText: string;\n\n  /**\n   * the options the user have for a search\n   */\n  SEARCH_OPTIONS = ['all', 'museum', 'collection', 'artifact'];\n\n  private DEFAULT_SEARCH_CATEGORY = this.SEARCH_OPTIONS[0];\n\n  /**\n   * if there's a previously selected category, default to this one instead\n   */\n  @Input() previousCategory: string;\n  /**\n   * if the user previously searched for a text, default to this instead\n   */\n  @Input() previousText: string;\n\n  /**\n   * constructor\n   *\n   * @param router routes to the search results page\n   */\n  constructor(private router: Router) {\n  }\n\n  /**\n   * initialize search fields\n   */\n  ngOnInit(): void {\n    this.setToInput();\n  }\n\n  /**\n   * if there's a previous search, populate input boxes with previous search\n   * otherwise, initialize everything to the default value\n   */\n  setToInput(): void {\n    this.searchCategory = this.previousCategory ? this.previousCategory : this.DEFAULT_SEARCH_CATEGORY;\n    this.searchText = this.previousText ? this.previousText : '';\n  }\n\n  /**\n   * navigate to search results url to perform a search\n   */\n  public search(): void {\n    this.router.navigateByUrl('search/' + this.searchCategory + '/' + this.searchText).then();\n  }\n\n\n}\n\n    \n\n    \n        \n  Search within Museum Wiki\n\n\n  \n    \n      Search for: \n      \n        {{searchOption}}\n      \n    \n    \n      Keywords: \n      \n      Search\n    \n  \n\n\n    \n\n    \n                \n                    ./search.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Search within Museum Wiki            Search for:               {{searchOption}}                    Keywords:             Search      '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollectionListComponent', 'selector': 'app-collection-list'},{'name': 'ConfirmationModalComponent', 'selector': 'app-confirmation-modal'},{'name': 'CreateComponent', 'selector': 'app-create'},{'name': 'EditComponent', 'selector': 'app-edit'},{'name': 'EditOrCreateComponent', 'selector': 'app-edit-or-create'},{'name': 'EntryListComponent', 'selector': 'app-entry-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownDisplayComponent', 'selector': 'app-markdown-display'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'ModalMessageComponent', 'selector': 'app-modal-message'},{'name': 'MuseumListComponent', 'selector': 'app-museum-list'},{'name': 'NavigationBarComponent', 'selector': 'app-navigation-bar'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'ResetPasswordModalComponent', 'selector': 'app-reset-password-modal'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SearchInCategoryComponent', 'selector': 'app-search-in-category'},{'name': 'TagSelectionComponent', 'selector': 'app-tag-selection'},{'name': 'UserEditListComponent', 'selector': 'app-user-edit-list'},{'name': 'UserMuseumListComponent', 'selector': 'app-user-museum-list'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'ViewComponent', 'selector': 'app-view'},{'name': 'ViewEditComponent', 'selector': 'app-view-edit'},{'name': 'WikiEntryEditorComponent', 'selector': 'app-wiki-entry-editor'},{'name': 'WikiEntryViewComponent', 'selector': 'app-wiki-entry-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SearchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SearchInCategoryComponent.html":{"url":"components/SearchInCategoryComponent.html","title":"component - SearchInCategoryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SearchInCategoryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/static/search/search-in-category/search-in-category.component.ts\n\n\n    \n        Description\n    \n    \n        Search for something in a certain category.\nCurrently unused.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-search-in-category\n            \n\n            \n                styleUrls\n                ./search-in-category.component.css\n            \n\n\n\n            \n                templateUrl\n                ./search-in-category.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                searchCategory\n                            \n                            \n                                searchResults\n                            \n                            \n                                searchText\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/static/search/search-in-category/search-in-category.component.ts:29\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The current url\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/static/search/search-in-category/search-in-category.component.ts:42\n                \n            \n\n\n            \n                \n                    Analyze the url to get search category and text\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            searchCategory\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/static/search/search-in-category/search-in-category.component.ts:20\n                            \n                        \n\n                \n                    \n                        Category in which the search occurs\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            searchResults\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         WikiEntry[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/static/search/search-in-category/search-in-category.component.ts:29\n                            \n                        \n\n                \n                    \n                        The results of the search\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            searchText\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/static/search/search-in-category/search-in-category.component.ts:24\n                            \n                        \n\n                \n                    \n                        The text the user inputted\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute, ParamMap} from '@angular/router';\nimport {switchMap} from 'rxjs/operators';\nimport {WikiEntry} from '../../../models/wiki-entry';\n\n/**\n * Search for something in a certain category.\n * Currently unused.\n */\n@Component({\n  selector: 'app-search-in-category',\n  templateUrl: './search-in-category.component.html',\n  styleUrls: ['./search-in-category.component.css']\n})\nexport class SearchInCategoryComponent implements OnInit {\n\n  /**\n   * Category in which the search occurs\n   */\n  searchCategory;\n  /**\n   * The text the user inputted\n   */\n  searchText;\n\n  /**\n   * The results of the search\n   */\n  searchResults: WikiEntry[];\n\n  /**\n   * Constructor\n   *\n   * @param route The current url\n   */\n  constructor(private route: ActivatedRoute) {\n  }\n\n  /**\n   * Analyze the url to get search category and text\n   */\n  ngOnInit(): void {\n    this.route.paramMap.subscribe((paramMap: ParamMap) => {\n      this.searchCategory = paramMap.get('searchCategory');\n      this.searchText = paramMap.get('searchText');\n    });\n  }\n\n}\n\n    \n\n    \n        \n\n\n  You have searched for \"{{searchText}}\" in {{searchCategory}}. Here are the results: \n\n\n\n  \n    {{result.name}}\n  \n\n\n\n    \n\n    \n                \n                    ./search-in-category.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  You have searched for \"{{searchText}}\" in {{searchCategory}}. Here are the results:       {{result.name}}  '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollectionListComponent', 'selector': 'app-collection-list'},{'name': 'ConfirmationModalComponent', 'selector': 'app-confirmation-modal'},{'name': 'CreateComponent', 'selector': 'app-create'},{'name': 'EditComponent', 'selector': 'app-edit'},{'name': 'EditOrCreateComponent', 'selector': 'app-edit-or-create'},{'name': 'EntryListComponent', 'selector': 'app-entry-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownDisplayComponent', 'selector': 'app-markdown-display'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'ModalMessageComponent', 'selector': 'app-modal-message'},{'name': 'MuseumListComponent', 'selector': 'app-museum-list'},{'name': 'NavigationBarComponent', 'selector': 'app-navigation-bar'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'ResetPasswordModalComponent', 'selector': 'app-reset-password-modal'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SearchInCategoryComponent', 'selector': 'app-search-in-category'},{'name': 'TagSelectionComponent', 'selector': 'app-tag-selection'},{'name': 'UserEditListComponent', 'selector': 'app-user-edit-list'},{'name': 'UserMuseumListComponent', 'selector': 'app-user-museum-list'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'ViewComponent', 'selector': 'app-view'},{'name': 'ViewEditComponent', 'selector': 'app-view-edit'},{'name': 'WikiEntryEditorComponent', 'selector': 'app-wiki-entry-editor'},{'name': 'WikiEntryViewComponent', 'selector': 'app-wiki-entry-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SearchInCategoryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ServerCannotConnect.html":{"url":"classes/ServerCannotConnect.html","title":"class - ServerCannotConnect","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ServerCannotConnect\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/config/ServerCannotConnect.ts\n        \n\n            \n                Description\n            \n            \n                The message for the user when the server is unable to be reached\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                MESSAGE\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            MESSAGE\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : 'A network error occurred. Either you are not connected to the Internet, or the server is down. ' +\n    'Please check browser console for details.'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/config/ServerCannotConnect.ts:8\n                            \n                        \n\n                \n                    \n                        The message to display\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ServerCannotConnect {\n  /**\n   * The message to display\n   */\n  public static readonly MESSAGE =\n    'A network error occurred. Either you are not connected to the Internet, or the server is down. ' +\n    'Please check browser console for details.';\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ServerConfig.html":{"url":"classes/ServerConfig.html","title":"class - ServerConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ServerConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/config/ServerConfig.ts\n        \n\n            \n                Description\n            \n            \n                Configuration for the url of the backend server\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                activeUrl\n                            \n                            \n                                    Static\n                                    Readonly\n                                deploymentServerUrl\n                            \n                            \n                                    Static\n                                    Readonly\n                                localCppTestingServerUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(projectConfig: ProjectConfig)\n                    \n                \n                        \n                            \n                                Defined in src/app/config/ServerConfig.ts:20\n                            \n                        \n\n                \n                    \n                            Determines server information based on project configuration\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        projectConfig\n                                                  \n                                                        \n                                                                        ProjectConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Project configuration, which includes which url the\nserver should use\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            activeUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/config/ServerConfig.ts:20\n                            \n                        \n\n                \n                    \n                        The backend url that is currently in use\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            deploymentServerUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/config/ServerConfig.ts:10\n                            \n                        \n\n                \n                    \n                        Url for actual web server; is never used because project is not deployed\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            localCppTestingServerUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://localhost:5300/request/'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/config/ServerConfig.ts:15\n                            \n                        \n\n                \n                    \n                        Url for getting data when testing locally against the cpp backend\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getUrl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUrl()\n                \n            \n\n\n            \n                \n                    Defined in src/app/config/ServerConfig.ts:40\n                \n            \n\n\n            \n                \n                    Retrieve the currently used url according to the current config\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {ProjectConfig} from './ProjectConfig';\n\n/**\n * Configuration for the url of the backend server\n */\nexport class ServerConfig {\n  /**\n   * Url for actual web server; is never used because project is not deployed\n   */\n  public static readonly deploymentServerUrl = '';\n\n  /**\n   * Url for getting data when testing locally against the cpp backend\n   */\n  public static readonly localCppTestingServerUrl = 'http://localhost:5300/request/';\n\n  /**\n   * The backend url that is currently in use\n   */\n  private readonly activeUrl: string;\n\n  /**\n   * Determines server information based on project configuration\n   *\n   * @param projectConfig Project configuration, which includes which url the\n   * server should use\n   */\n  constructor(private projectConfig: ProjectConfig) {\n    // choose the appropriate url based on project configuration\n    if (projectConfig.isTesting()) {\n      this.activeUrl = ServerConfig.localCppTestingServerUrl;\n    } else {\n      this.activeUrl = ServerConfig.deploymentServerUrl;\n    }\n  }\n\n  /**\n   * Retrieve the currently used url according to the current config\n   */\n  public getUrl(): string {\n    return this.activeUrl;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ServerConfigService.html":{"url":"injectables/ServerConfigService.html","title":"injectable - ServerConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ServerConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/config/server-config.service.ts\n        \n\n            \n                Description\n            \n            \n                Stores and provides configuration for the server\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                serverConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getServerConfig\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(projectConfigService: ProjectConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/config/server-config.service.ts:17\n                            \n                        \n\n                \n                    \n                            Constructor that creates server config based on project config\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        projectConfigService\n                                                  \n                                                        \n                                                                        ProjectConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provides project configuration\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getServerConfig\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getServerConfig()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/config/server-config.service.ts:31\n                \n            \n\n\n            \n                \n                    Returns current server configuration\n\n\n                    \n                        Returns :         ServerConfig\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            serverConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ServerConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/config/server-config.service.ts:17\n                            \n                        \n\n                \n                    \n                        Server configuration\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {ProjectConfigService} from './project-config.service';\nimport {ServerConfig} from '../../config/ServerConfig';\nimport {ProjectConfig} from '../../config/ProjectConfig';\n\n/**\n * Stores and provides configuration for the server\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ServerConfigService {\n\n  /**\n   * Server configuration\n   */\n  private readonly serverConfig: ServerConfig;\n\n  /**\n   * Constructor that creates server config based on project config\n   *\n   * @param projectConfigService Provides project configuration\n   */\n  constructor(private projectConfigService: ProjectConfigService) {\n    this.serverConfig = new ServerConfig(projectConfigService.getProjectConfig());\n  }\n\n  /**\n   * Returns current server configuration\n   */\n  public getServerConfig(): ServerConfig {\n    return this.serverConfig;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ServerResponse.html":{"url":"classes/ServerResponse.html","title":"class - ServerResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ServerResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/server-response.ts\n        \n\n            \n                Description\n            \n            \n                The response from a server\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                message\n                            \n                            \n                                success\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(success, message)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/server-response.ts:13\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        success\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Initialize success variable\n\n                                                        \n                                                \n                                                \n                                                        message\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Initialize message variable\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/server-response.ts:13\n                            \n                        \n\n                \n                    \n                        The message the server is sending to the user.\nShould be details of success/failure\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            success\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/server-response.ts:8\n                            \n                        \n\n                \n                    \n                        Whether a request is successful\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ServerResponse {\n  /**\n   * Whether a request is successful\n   */\n  success: boolean;\n  /**\n   * The message the server is sending to the user.\n   * Should be details of success/failure\n   */\n  message: string;\n\n  /**\n   * Constructor\n   *\n   * @param success Initialize success variable\n   * @param message Initialize message variable\n   */\n  constructor(success, message) {\n    this.success = success;\n    this.message = message;\n  }\n}\n\n/*\nExample JSON message:\n{\n  \"success\": false,\n  \"message\": \"wrong username and password combination\"\n*/\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Tag.html":{"url":"classes/Tag.html","title":"class - Tag","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Tag\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/edit/tag-selection/tag.ts\n        \n\n            \n                Description\n            \n            \n                A tag (collection) for an artifact\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                of\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(entry: BasicEntry, selected: boolean)\n                    \n                \n                        \n                            \n                                Defined in src/app/edit/tag-selection/tag.ts:20\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        entry\n                                                  \n                                                        \n                                                                        BasicEntry\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The entry from which this tag is created.\n\n                                                        \n                                                \n                                                \n                                                        selected\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Whether this tag is selected. Default to false.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit/tag-selection/tag.ts:11\n                            \n                        \n\n                \n                    \n                        Id of current tag.\nSame as id of collection.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit/tag-selection/tag.ts:16\n                            \n                        \n\n                \n                    \n                        Name of current tag.\nSame as name of collection.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit/tag-selection/tag.ts:20\n                            \n                        \n\n                \n                    \n                        Whether the current tag is selected.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            of\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    of(entry: BasicEntry)\n                \n            \n\n\n            \n                \n                    Defined in src/app/edit/tag-selection/tag.ts:39\n                \n            \n\n\n            \n                \n                    Static factory that creates a tag from an entry\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    entry\n                                    \n                                                BasicEntry\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The entry upon which the newly created tag is based\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Tag\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {BasicEntry} from '../../models/basic-entry';\n\n/**\n * A tag (collection) for an artifact\n */\nexport class Tag {\n  /**\n   * Id of current tag.\n   * Same as id of collection.\n   */\n  id: number;\n  /**\n   * Name of current tag.\n   * Same as name of collection.\n   */\n  name: string;\n  /**\n   * Whether the current tag is selected.\n   */\n  selected: boolean;\n\n  /**\n   * Constructor\n   *\n   * @param entry The entry from which this tag is created.\n   * @param selected Whether this tag is selected. Default to false.\n   */\n  constructor(entry: BasicEntry, selected: boolean = false) {\n    this.id = entry.id;\n    this.name = entry.name;\n    this.selected = selected;\n  }\n\n  /**\n   * Static factory that creates a tag from an entry\n   *\n   * @param entry The entry upon which the newly created tag is based\n   */\n  static of(entry: BasicEntry): Tag {\n    return new Tag(entry);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TagSelectionComponent.html":{"url":"components/TagSelectionComponent.html","title":"component - TagSelectionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TagSelectionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/edit/tag-selection/tag-selection.component.ts\n\n\n    \n        Description\n    \n    \n        Allows the user to select/deselect tags from a list of tags\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tag-selection\n            \n\n            \n                styleUrls\n                ./tag-selection.component.css\n            \n\n\n\n            \n                templateUrl\n                ./tag-selection.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                error\n                            \n                            \n                                idToTag\n                            \n                            \n                                loading\n                            \n                            \n                                tags\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getAllSelectedTags\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                selectTag\n                            \n                            \n                                    Private\n                                updateIdToTag\n                            \n                            \n                                    Private\n                                updateSelectedTags\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                allowEdit\n                            \n                            \n                                existingCollections\n                            \n                            \n                                museumId\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(museumService: MuseumService, projectConfigService: ProjectConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/app/edit/tag-selection/tag-selection.component.ts:55\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        museumService\n                                                  \n                                                        \n                                                                        MuseumService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                For getting collection list in a museum\n\n                                                        \n                                                \n                                                \n                                                        projectConfigService\n                                                  \n                                                        \n                                                                        ProjectConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Contains whether program activities should be logged\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        allowEdit\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/edit/tag-selection/tag-selection.component.ts:31\n                            \n                        \n                \n                    \n                        Whether the user is allowed to change selected tags\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        existingCollections\n                    \n                \n                \n                    \n                        Type :         BasicEntry[] | undefined\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/edit/tag-selection/tag-selection.component.ts:27\n                            \n                        \n                \n                    \n                        Collections already selected\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        museumId\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/edit/tag-selection/tag-selection.component.ts:23\n                            \n                        \n                \n                    \n                        The id of the museum from which the program retrieves collection list\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getAllSelectedTags\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllSelectedTags()\n                \n            \n\n\n            \n                \n                    Defined in src/app/edit/tag-selection/tag-selection.component.ts:141\n                \n            \n\n\n            \n                \n                    Returns all the tags that are selected by the user\n\n\n                    \n                        Returns :         BasicEntry[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in src/app/edit/tag-selection/tag-selection.component.ts:106\n                \n            \n\n\n            \n                \n                    Get all available tags and then update the tags that are selected\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Changes made to museum id and to existing collections\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/edit/tag-selection/tag-selection.component.ts:75\n                \n            \n\n\n            \n                \n                    Always trigger ngOnChanges when program starts\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            selectTag\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    selectTag(tag: Tag)\n                \n            \n\n\n            \n                \n                    Defined in src/app/edit/tag-selection/tag-selection.component.ts:134\n                \n            \n\n\n            \n                \n                    Triggered when the user clicks on a tag\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    tag\n                                    \n                                                Tag\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The tag that is selected\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            updateIdToTag\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateIdToTag()\n                \n            \n\n\n            \n                \n                    Defined in src/app/edit/tag-selection/tag-selection.component.ts:85\n                \n            \n\n\n            \n                \n                    Update the dictionary that maps id to tag\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            updateSelectedTags\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateSelectedTags()\n                \n            \n\n\n            \n                \n                    Defined in src/app/edit/tag-selection/tag-selection.component.ts:93\n                \n            \n\n\n            \n                \n                    Update the selected tags\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ProjectConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit/tag-selection/tag-selection.component.ts:46\n                            \n                        \n\n                \n                    \n                        Project configuration recording whether the program should be logged\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit/tag-selection/tag-selection.component.ts:55\n                            \n                        \n\n                \n                    \n                        Whether a network error occurred\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            idToTag\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/edit/tag-selection/tag-selection.component.ts:41\n                            \n                        \n\n                \n                    \n                        A dictionary that maps an id to the tag\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit/tag-selection/tag-selection.component.ts:51\n                            \n                        \n\n                \n                    \n                        Whether the frontend is waiting for backend to return list of all collections of a museum\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tags\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Tag[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit/tag-selection/tag-selection.component.ts:36\n                            \n                        \n\n                \n                    \n                        A list of tags to be displayed in the template\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {Component, Input, OnChanges, OnInit, SimpleChange, SimpleChanges} from '@angular/core';\nimport {BasicEntry} from '../../models/basic-entry';\nimport {MuseumService} from '../../services/wiki-entry/museum.service';\nimport {ProtoMuseum} from '../../services/object-prototypes/proto-museum';\nimport {HttpErrorResponse} from '@angular/common/http';\nimport {Tag} from './tag';\nimport {ProjectConfigService} from '../../services/config/project-config.service';\nimport {ProjectConfig} from '../../config/ProjectConfig';\n\n/**\n * Allows the user to select/deselect tags from a list of tags\n */\n@Component({\n  selector: 'app-tag-selection',\n  templateUrl: './tag-selection.component.html',\n  styleUrls: ['./tag-selection.component.css']\n})\nexport class TagSelectionComponent implements OnInit, OnChanges {\n\n  /**\n   * The id of the museum from which the program retrieves collection list\n   */\n  @Input() museumId!: number;\n  /**\n   * Collections already selected\n   */\n  @Input() existingCollections!: BasicEntry[] | undefined;\n  /**\n   * Whether the user is allowed to change selected tags\n   */\n  @Input() allowEdit: boolean;\n\n  /**\n   * A list of tags to be displayed in the template\n   */\n  tags: Tag[];\n\n  /**\n   * A dictionary that maps an id to the tag\n   */\n  idToTag;\n\n  /**\n   * Project configuration recording whether the program should be logged\n   */\n  config: ProjectConfig;\n\n  /**\n   * Whether the frontend is waiting for backend to return list of all collections of a museum\n   */\n  loading: boolean;\n  /**\n   * Whether a network error occurred\n   */\n  error: boolean;\n\n  /**\n   * Constructor\n   *\n   * @param museumService For getting collection list in a museum\n   * @param projectConfigService Contains whether program activities should be logged\n   */\n  constructor(private museumService: MuseumService,\n              private projectConfigService: ProjectConfigService) {\n    this.config = projectConfigService.getProjectConfig();\n    this.loading = true;\n    this.error = false;\n    this.tags = [];\n    this.idToTag = {};\n  }\n\n  /**\n   * Always trigger ngOnChanges when program starts\n   */\n  ngOnInit(): void {\n    this.ngOnChanges({\n      museumId: new SimpleChange(undefined, this.museumId, true),\n      existingCollections: new SimpleChange(undefined, this.existingCollections, true)\n    });\n  }\n\n  /**\n   * Update the dictionary that maps id to tag\n   */\n  private updateIdToTag(): void {\n    this.idToTag = {};\n    this.tags.forEach(tag => this.idToTag[tag.id] = tag);\n  }\n\n  /**\n   * Update the selected tags\n   */\n  private updateSelectedTags(): void {\n    this.existingCollections?.forEach((collection: BasicEntry) => {\n      if (this.idToTag[collection.id]) {\n        this.idToTag[collection.id].selected = true;\n      }\n    });\n  }\n\n  /**\n   * Get all available tags and then update the tags that are selected\n   *\n   * @param changes Changes made to museum id and to existing collections\n   */\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.museumId && this.museumId) {\n      this.museumService.getMuseum(this.museumId).subscribe(\n        (res: ProtoMuseum) => {\n          this.tags = res.collectionList.map(Tag.of);\n          this.updateIdToTag();\n          this.updateSelectedTags();\n          if (this.config.isLogging()) {\n            console.log(this.tags);\n          }\n          this.loading = false;\n        },\n        (error: HttpErrorResponse) => {\n          this.loading = false;\n          this.error = true;\n          console.log(error);\n        });\n    }\n    if (changes.existingCollections && this.existingCollections) {\n      this.updateSelectedTags();\n    }\n  }\n\n  /**\n   * Triggered when the user clicks on a tag\n   *\n   * @param tag The tag that is selected\n   */\n  public selectTag(tag: Tag): void {\n    tag.selected = !tag.selected;\n  }\n\n  /**\n   * Returns all the tags that are selected by the user\n   */\n  public getAllSelectedTags(): BasicEntry[] {\n    return this.tags\n      .filter((tag) => tag.selected)\n      .map((tag) => (tag as BasicEntry));\n  }\n}\n\n    \n\n    \n        \n\n\n\n  \n    \n      {{tag.name}}\n    \n  \n  \n\n\n    \n\n    \n                \n                    ./tag-selection.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{tag.name}}        '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollectionListComponent', 'selector': 'app-collection-list'},{'name': 'ConfirmationModalComponent', 'selector': 'app-confirmation-modal'},{'name': 'CreateComponent', 'selector': 'app-create'},{'name': 'EditComponent', 'selector': 'app-edit'},{'name': 'EditOrCreateComponent', 'selector': 'app-edit-or-create'},{'name': 'EntryListComponent', 'selector': 'app-entry-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownDisplayComponent', 'selector': 'app-markdown-display'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'ModalMessageComponent', 'selector': 'app-modal-message'},{'name': 'MuseumListComponent', 'selector': 'app-museum-list'},{'name': 'NavigationBarComponent', 'selector': 'app-navigation-bar'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'ResetPasswordModalComponent', 'selector': 'app-reset-password-modal'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SearchInCategoryComponent', 'selector': 'app-search-in-category'},{'name': 'TagSelectionComponent', 'selector': 'app-tag-selection'},{'name': 'UserEditListComponent', 'selector': 'app-user-edit-list'},{'name': 'UserMuseumListComponent', 'selector': 'app-user-museum-list'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'ViewComponent', 'selector': 'app-view'},{'name': 'ViewEditComponent', 'selector': 'app-view-edit'},{'name': 'WikiEntryEditorComponent', 'selector': 'app-wiki-entry-editor'},{'name': 'WikiEntryViewComponent', 'selector': 'app-wiki-entry-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TagSelectionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/TextLimitPipe.html":{"url":"pipes/TextLimitPipe.html","title":"pipe - TextLimitPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  TextLimitPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/helper/text-limit.pipe.ts\n        \n\n            \n                Description\n            \n            \n                Limit the length of a text\n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        textLimit\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(text: string, args: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/helper/text-limit.pipe.ts:18\n                \n            \n\n\n            \n                \n                    Limit the length of a text\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The text whose length will be limited\n\n                                    \n                                \n                                \n                                    args\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        First argument is length limit of text.\nSecond argument is the replacement for text exceeding the maximum length. Default to \"...\".\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Pipe, PipeTransform} from '@angular/core';\n\n/**\n * Limit the length of a text\n */\n@Pipe({\n  name: 'textLimit'\n})\nexport class TextLimitPipe implements PipeTransform {\n\n  /**\n   * Limit the length of a text\n   *\n   * @param text The text whose length will be limited\n   * @param args First argument is length limit of text.\n   * Second argument is the replacement for text exceeding the maximum length. Default to \"...\".\n   */\n  transform(text: string, args: string[]): string {\n    if (!text) {\n      return '';\n    }\n    const lengthLimit = parseInt(args[0], 10);\n    const trailingText = args.length > 1 ? args[1] : '...';\n    return text.length > lengthLimit ?\n      text.substring(0, lengthLimit) + trailingText :\n      text;\n  }\n\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/user.ts\n        \n\n            \n                Description\n            \n            \n                Detailed information of a user\n\n            \n\n            \n                Extends\n            \n            \n                        BasicUserInfo\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                actionsList\n                            \n                            \n                                editsList\n                            \n                            \n                                email\n                            \n                            \n                                headCuratorList\n                            \n                            \n                                museumList\n                            \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(username?: string, email?: string, password?: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/user.ts:29\n                            \n                        \n\n                \n                    \n                            Create a user object\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        username\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                                Username\n\n                                                        \n                                                \n                                                \n                                                        email\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                                Email address\n\n                                                        \n                                                \n                                                \n                                                        password\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                                Password can either be a raw password or a hash.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            actionsList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Edit[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/user.ts:21\n                            \n                        \n\n                \n                    \n                        List of edits waiting to be reviewed by this user\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editsList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Edit[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/user.ts:25\n                            \n                        \n\n                \n                    \n                        List of edits submitted by this user\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/user.ts:13\n                            \n                        \n\n                \n                    \n                        Email of user\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            headCuratorList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         WikiEntry[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/user.ts:29\n                            \n                        \n\n                \n                    \n                        List of all museums in Museum Wiki. Reserved for head curator.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            museumList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         WikiEntry[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/user.ts:17\n                            \n                        \n\n                \n                    \n                        List of museums owned by the user\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BasicUserInfo\n\n                                \n                            \n                        \n                            \n                                    Defined in         BasicUserInfo:14\n\n                            \n                        \n\n                \n                    \n                        Password is stored automatically in SHA512 hash.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BasicUserInfo\n\n                                \n                            \n                        \n                            \n                                    Defined in         BasicUserInfo:10\n\n                            \n                        \n\n                \n                    \n                        Username must be unique.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {BasicUserInfo} from './basic-user-info';\nimport {BasicEntry} from './basic-entry';\nimport {Edit} from './edit';\nimport {WikiEntry} from './wiki-entry';\n\n/**\n * Detailed information of a user\n */\nexport class User extends BasicUserInfo {\n  /**\n   * Email of user\n   */\n  email: string;\n  /**\n   * List of museums owned by the user\n   */\n  museumList: WikiEntry[];\n  /**\n   * List of edits waiting to be reviewed by this user\n   */\n  actionsList: Edit[];\n  /**\n   * List of edits submitted by this user\n   */\n  editsList: Edit[];\n  /**\n   * List of all museums in Museum Wiki. Reserved for head curator.\n   */\n  headCuratorList: WikiEntry[];\n\n  /**\n   * Create a user object\n   *\n   * @param username Username\n   * @param email Email address\n   * @param password Password can either be a raw password or a hash.\n   */\n  constructor(username?: string, email?: string, password?: string) {\n    super(username, password);\n    this.email = email;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserEditListComponent.html":{"url":"components/UserEditListComponent.html","title":"component - UserEditListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UserEditListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/user/user-profile/user-edit-list/user-edit-list.component.ts\n\n\n    \n        Description\n    \n    \n        a list of edits related to a user\nthis list can either be a list of edits waiting for the user to review,\nor simply a list of edits submitted by the user\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-edit-list\n            \n\n            \n                styleUrls\n                ./user-edit-list.component.css\n            \n\n\n\n            \n                templateUrl\n                ./user-edit-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                capitalizeFirstLetter\n                            \n                            \n                                    Readonly\n                                columnNameToFieldName\n                            \n                            \n                                columnSortStatus\n                            \n                            \n                                    Readonly\n                                columnsToDisplay\n                            \n                            \n                                    Readonly\n                                columnsToSort\n                            \n                            \n                                sortDown\n                            \n                            \n                                sortUntouched\n                            \n                            \n                                sortUP\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                approve\n                            \n                            \n                                deny\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                resetColumnSortStatus\n                            \n                            \n                                reviewEdit\n                            \n                            \n                                sort\n                            \n                            \n                                view\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                action\n                            \n                            \n                                editList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                reloadProfile\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(editService: EditService, modalService: NgbModal, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/user/user-profile/user-edit-list/user-edit-list.component.ts:76\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        editService\n                                                  \n                                                        \n                                                                        EditService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for sending edit reviews\n\n                                                        \n                                                \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                    NgbModal\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Opens modals for confirmation\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Routes to view edit\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        action\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/user/user-profile/user-edit-list/user-edit-list.component.ts:29\n                            \n                        \n                \n                    \n                        whether the user can take action upon edits in this list\ntrue if user is the curator of the museum these edits will affect, false otherwise\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        editList\n                    \n                \n                \n                    \n                        Type :         Edit[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/user/user-profile/user-edit-list/user-edit-list.component.ts:34\n                            \n                        \n                \n                    \n                        list of edits to be displayed in the list\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        reloadProfile\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/user/user-profile/user-edit-list/user-edit-list.component.ts:40\n                            \n                        \n                \n                    \n                        emits an event asking the user-profile page to reload user profile because\nsomething happened that changed the profile\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            approve\n                        \n                        \n                    \n                \n            \n            \n                \napprove(entry: Edit)\n                \n            \n\n\n            \n                \n                    Defined in src/app/user/user-profile/user-edit-list/user-edit-list.component.ts:146\n                \n            \n\n\n            \n                \n                    approve an edit\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    entry\n                                    \n                                                Edit\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the edit to be approved\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deny\n                        \n                        \n                    \n                \n            \n            \n                \ndeny(entry: Edit)\n                \n            \n\n\n            \n                \n                    Defined in src/app/user/user-profile/user-edit-list/user-edit-list.component.ts:138\n                \n            \n\n\n            \n                \n                    deny an edit\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    entry\n                                    \n                                                Edit\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the edit to be denied\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/user/user-profile/user-edit-list/user-edit-list.component.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            resetColumnSortStatus\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resetColumnSortStatus()\n                \n            \n\n\n            \n                \n                    Defined in src/app/user/user-profile/user-edit-list/user-edit-list.component.ts:93\n                \n            \n\n\n            \n                \n                    reset the sorting status of all columns to untouched\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            reviewEdit\n                        \n                        \n                    \n                \n            \n            \n                \nreviewEdit(entry: Edit, action: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/user/user-profile/user-edit-list/user-edit-list.component.ts:157\n                \n            \n\n\n            \n                \n                    publish the review of an edit\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    entry\n                                    \n                                                Edit\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the edit that is reviewed\n\n                                    \n                                \n                                \n                                    action\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the review action to take\ntrue for approve, false for deny\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sort\n                        \n                        \n                    \n                \n            \n            \n                \nsort(column: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/user/user-profile/user-edit-list/user-edit-list.component.ts:113\n                \n            \n\n\n            \n                \n                    sort a certain column\nif that column is untouched or sorting down, sort up, otherwise, sort down\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    column\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the name of the colume whose sort status will be changed\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            view\n                        \n                        \n                    \n                \n            \n            \n                \nview(entry: Edit)\n                \n            \n\n\n            \n                \n                    Defined in src/app/user/user-profile/user-edit-list/user-edit-list.component.ts:181\n                \n            \n\n\n            \n                \n                    Routes to the view of an edit\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    entry\n                                    \n                                                Edit\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The edit to be seen\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            capitalizeFirstLetter\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : capitalizeFirstLetter\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user/user-profile/user-edit-list/user-edit-list.component.ts:58\n                            \n                        \n\n                \n                    \n                        a function that capitalizes the first letter of a string\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            columnNameToFieldName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {Type: 'type', Category: 'category', Status: 'approvalStatus', Date: 'date'}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user/user-profile/user-edit-list/user-edit-list.component.ts:53\n                            \n                        \n\n                \n                    \n                        the corresponding field name of a column name\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            columnSortStatus\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user/user-profile/user-edit-list/user-edit-list.component.ts:63\n                            \n                        \n\n                \n                    \n                        store the sort status of all columns (untouched, sort ascending, sort descending)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            columnsToDisplay\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['Type', 'Category', 'Status', 'Date', 'Actions']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user/user-profile/user-edit-list/user-edit-list.component.ts:45\n                            \n                        \n\n                \n                    \n                        columns that are displayed in the table\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            columnsToSort\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['Type', 'Category', 'Status', 'Date']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user/user-profile/user-edit-list/user-edit-list.component.ts:49\n                            \n                        \n\n                \n                    \n                        columns in the table that can be sorted\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sortDown\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : faSortDown\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user/user-profile/user-edit-list/user-edit-list.component.ts:76\n                            \n                        \n\n                \n                    \n                        font awesome sort icon with only one arrow pointing down\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sortUntouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : faSort\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user/user-profile/user-edit-list/user-edit-list.component.ts:68\n                            \n                        \n\n                \n                    \n                        font awesome sort icon\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sortUP\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : faSortUp\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user/user-profile/user-edit-list/user-edit-list.component.ts:72\n                            \n                        \n\n                \n                    \n                        font awesome sort icon with only one arrow pointing up\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {Edit} from '../../../models/edit';\nimport {faSort, faSortDown, faSortUp} from '@fortawesome/free-solid-svg-icons';\nimport {EditService} from '../../../services/edit.service';\nimport {ServerResponse} from '../../../services/server-response';\nimport {HttpErrorResponse} from '@angular/common/http';\nimport {NgbModal} from '@ng-bootstrap/ng-bootstrap';\nimport {ModalMessageComponent} from '../../../static/modal-message/modal-message.component';\nimport {Router} from '@angular/router';\nimport {capitalizeFirstLetter} from '../../../helper/capitalize-first-letter';\n\n/**\n * a list of edits related to a user\n *\n * this list can either be a list of edits waiting for the user to review,\n * or simply a list of edits submitted by the user\n */\n@Component({\n  selector: 'app-user-edit-list',\n  templateUrl: './user-edit-list.component.html',\n  styleUrls: ['./user-edit-list.component.css']\n})\nexport class UserEditListComponent implements OnInit {\n\n  /**\n   * whether the user can take action upon edits in this list\n   * true if user is the curator of the museum these edits will affect, false otherwise\n   */\n  @Input() action: boolean;\n\n  /**\n   * list of edits to be displayed in the list\n   */\n  @Input() editList: Edit[];\n\n  /**\n   * emits an event asking the user-profile page to reload user profile because\n   * something happened that changed the profile\n   */\n  @Output() reloadProfile: EventEmitter = new EventEmitter();\n\n  /**\n   * columns that are displayed in the table\n   */\n  readonly columnsToDisplay = ['Type', 'Category', 'Status', 'Date', 'Actions'];\n  /**\n   * columns in the table that can be sorted\n   */\n  readonly columnsToSort = ['Type', 'Category', 'Status', 'Date'];\n  /**\n   * the corresponding field name of a column name\n   */\n  readonly columnNameToFieldName = {Type: 'type', Category: 'category', Status: 'approvalStatus', Date: 'date'};\n\n  /**\n   * a function that capitalizes the first letter of a string\n   */\n  readonly capitalizeFirstLetter = capitalizeFirstLetter;\n\n  /**\n   * store the sort status of all columns (untouched, sort ascending, sort descending)\n   */\n  columnSortStatus = {};\n\n  /**\n   * font awesome sort icon\n   */\n  sortUntouched = faSort;\n  /**\n   * font awesome sort icon with only one arrow pointing up\n   */\n  sortUP = faSortUp;\n  /**\n   * font awesome sort icon with only one arrow pointing down\n   */\n  sortDown = faSortDown;\n\n  /**\n   * Constructor\n   *\n   * @param editService Service for sending edit reviews\n   * @param modalService Opens modals for confirmation\n   * @param router Routes to view edit\n   */\n  constructor(private editService: EditService,\n              private modalService: NgbModal,\n              private router: Router) {\n  }\n\n  /**\n   * reset the sorting status of all columns to untouched\n   */\n  private resetColumnSortStatus() {\n    this.columnSortStatus = {};\n    for (const column of this.columnsToSort) {\n      this.columnSortStatus[column] = this.sortUntouched;\n    }\n  }\n\n  ngOnInit(): void {\n    this.resetColumnSortStatus();\n    // by default, sort by descending order in status so that\n    // the edits that are \"Under review\" come first\n    this.sort('Date');\n    this.sort('Date');\n  }\n\n  /**\n   * sort a certain column\n   * if that column is untouched or sorting down, sort up, otherwise, sort down\n   * @param column the name of the colume whose sort status will be changed\n   */\n  sort(column: string): void {\n    // check if this column can be sorted\n    if (!this.columnSortStatus[column]) {\n      return;\n    }\n    // the next sort status of the current column\n    const nextStatus = this.columnSortStatus[column] === this.sortUP ? this.sortDown : this.sortUP;\n    this.resetColumnSortStatus();\n    this.columnSortStatus[column] = nextStatus;\n\n    // name of the field that will be compared\n    const fieldName = this.columnNameToFieldName[column];\n\n    // sort list of edits\n    this.editList.sort(\n      (entry1, entry2) =>\n        // compare the two entries, if trying to sort down, the comparison result will be inverted\n        // the !== operator is equivalent to a ^ binary operator\n        (nextStatus === this.sortDown !== entry1[fieldName] > entry2[fieldName]) ? 1 : -1);\n  }\n\n  /**\n   * deny an edit\n   * @param entry the edit to be denied\n   */\n  deny(entry: Edit): void {\n    this.reviewEdit(entry, false);\n  }\n\n  /**\n   * approve an edit\n   * @param entry the edit to be approved\n   */\n  approve(entry: Edit): void {\n    this.reviewEdit(entry, true);\n  }\n\n  /**\n   * publish the review of an edit\n   *\n   * @param entry the edit that is reviewed\n   * @param action the review action to take\n   * true for approve, false for deny\n   */\n  reviewEdit(entry: Edit, action: boolean): void {\n    // open a new modal to display the result of review\n    const modal = this.modalService.open(ModalMessageComponent);\n    const modalComponent: ModalMessageComponent = modal.componentInstance;\n    modalComponent.title = 'Review Edit';\n    modalComponent.modal = modal;\n    modalComponent.waitingForServerResponse();\n    this.editService.reviewEdit(entry, action).then(\n      (res: ServerResponse) => {\n        modalComponent.fromServerResponse(res);\n        // let user-profile page retrieve data again\n        this.reloadProfile.emit();\n      },\n      (err: HttpErrorResponse) => {\n        modalComponent.fromNetworkError(err);\n      }\n    );\n  }\n\n  /**\n   * Routes to the view of an edit\n   *\n   * @param entry The edit to be seen\n   */\n  view(entry: Edit): void {\n    this.router.navigateByUrl('/view-edit/' + entry.id);\n  }\n}\n\n    \n\n    \n        \n  {{action ? \"Edits Waiting for Your Review\" : \"Your Submitted Edits\"}}\n\n\n 0, display the table, otherwise, display a message-->\n 0; else noEditBlock\">\n  \n    \n    \n      \n      \n        {{column}}\n        \n        \n      \n    \n    \n    \n    \n      {{entry.type}}\n      {{capitalizeFirstLetter(entry.category)}}\n      \n      {{action ? 'Under review' : entry.approvalStatus}}\n      \n        {{entry.date | date:'short'}}\n      \n      \n        {{entry.date | date: 'medium'}}\n      \n      \n        \n        \n          View\n        \n        \n        \n          \n            Approve\n          \n          \n            Deny\n          \n        \n      \n    \n    \n  \n\n\n  It appears that you don't have any edits in this section.\n\n\n    \n\n    \n                \n                    ./user-edit-list.component.css\n                \n                .cursor-pointer {\n  cursor: pointer;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{action ? \"Edits Waiting for Your Review\" : \"Your Submitted Edits\"}} 0, display the table, otherwise, display a message--> 0; else noEditBlock\">                              {{column}}                                            {{entry.type}}      {{capitalizeFirstLetter(entry.category)}}            {{action ? \\'Under review\\' : entry.approvalStatus}}              {{entry.date | date:\\'short\\'}}                    {{entry.date | date: \\'medium\\'}}                                      View                                              Approve                                Deny                                    It appears that you don\\'t have any edits in this section.'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollectionListComponent', 'selector': 'app-collection-list'},{'name': 'ConfirmationModalComponent', 'selector': 'app-confirmation-modal'},{'name': 'CreateComponent', 'selector': 'app-create'},{'name': 'EditComponent', 'selector': 'app-edit'},{'name': 'EditOrCreateComponent', 'selector': 'app-edit-or-create'},{'name': 'EntryListComponent', 'selector': 'app-entry-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownDisplayComponent', 'selector': 'app-markdown-display'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'ModalMessageComponent', 'selector': 'app-modal-message'},{'name': 'MuseumListComponent', 'selector': 'app-museum-list'},{'name': 'NavigationBarComponent', 'selector': 'app-navigation-bar'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'ResetPasswordModalComponent', 'selector': 'app-reset-password-modal'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SearchInCategoryComponent', 'selector': 'app-search-in-category'},{'name': 'TagSelectionComponent', 'selector': 'app-tag-selection'},{'name': 'UserEditListComponent', 'selector': 'app-user-edit-list'},{'name': 'UserMuseumListComponent', 'selector': 'app-user-museum-list'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'ViewComponent', 'selector': 'app-view'},{'name': 'ViewEditComponent', 'selector': 'app-view-edit'},{'name': 'WikiEntryEditorComponent', 'selector': 'app-wiki-entry-editor'},{'name': 'WikiEntryViewComponent', 'selector': 'app-wiki-entry-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserEditListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserInfoService.html":{"url":"injectables/UserInfoService.html","title":"injectable - UserInfoService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserInfoService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/user/user-info.service.ts\n        \n\n            \n                Description\n            \n            \n                Retrieves user information.\nUses login service.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                basicUserInfo\n                            \n                            \n                                isLoggedIn\n                            \n                            \n                                loginEvent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                clearCookies\n                            \n                            \n                                    Public\n                                getBasicUserInfo\n                            \n                            \n                                    Public\n                                getCompleteUserInfo\n                            \n                            \n                                    Public\n                                login\n                            \n                            \n                                    Public\n                                logout\n                            \n                            \n                                    Private\n                                mockProtoUser\n                            \n                            \n                                    Public\n                                trackLoginStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(loginService: LoginService, cookieService: CookieService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/user/user-info.service.ts:35\n                            \n                        \n\n                \n                    \n                            Constructor that automatically tries to login user in from cookies\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        loginService\n                                                  \n                                                        \n                                                                        LoginService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Sends request to the server\n\n                                                        \n                                                \n                                                \n                                                        cookieService\n                                                  \n                                                        \n                                                                    CookieService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Stores username and password hash as cookies\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            clearCookies\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clearCookies()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user/user-info.service.ts:66\n                \n            \n\n\n            \n                \n                    Remove all cookies related to username and password\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getBasicUserInfo\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getBasicUserInfo()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user/user-info.service.ts:75\n                \n            \n\n\n            \n                \n                    Get the username and password hash of logged in user.\nSecurity vulnerability in allowing access to password hash in a public method?\n\n\n                    \n                        Returns :         BasicUserInfo\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getCompleteUserInfo\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCompleteUserInfo()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user/user-info.service.ts:141\n                \n            \n\n\n            \n                \n                    Retrieve the complete user info of a user\n\n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(loginCredentials: BasicUserInfo)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user/user-info.service.ts:84\n                \n            \n\n\n            \n                \n                    Attempt to login. If successful, record username and password in cookies.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    loginCredentials\n                                    \n                                                BasicUserInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Username and password hash.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    logout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user/user-info.service.ts:109\n                \n            \n\n\n            \n                \n                    reset login status to not logged in and remove cookies storing user account information\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            mockProtoUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    mockProtoUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user/user-info.service.ts:119\n                \n            \n\n\n            \n                \n                    Create a fake server response in the format of protoUser.\n\n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            trackLoginStatus\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    trackLoginStatus()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user/user-info.service.ts:149\n                \n            \n\n\n            \n                \n                    Let another component/service track the login status of the user.\nThe returned observable emits an event whenever user login/logout.\n\n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            basicUserInfo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BasicUserInfo\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/user/user-info.service.ts:30\n                            \n                        \n\n                \n                    \n                        Information of the logged in user\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoggedIn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/user/user-info.service.ts:26\n                            \n                        \n\n                \n                    \n                        Whether the user is logged in\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginEvent\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/user/user-info.service.ts:35\n                            \n                        \n\n                \n                    \n                        Emits a new event whenever login status changed\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import {EventEmitter, Injectable, OnInit} from '@angular/core';\nimport {BasicUserInfo} from '../../models/basic-user-info';\nimport {LoginService} from './login.service';\nimport {CookieService} from 'ngx-cookie-service';\nimport {ServerResponse} from '../server-response';\nimport {User} from '../../models/user';\nimport {Observable, Subject} from 'rxjs';\nimport {HttpErrorResponse} from '@angular/common/http';\nimport {ProtoUser} from '../object-prototypes/proto-user';\nimport {MuseumBuilder} from '../../models/builders/museum-builder';\nimport {ProtoEdit} from '../object-prototypes/proto-edit';\nimport {Mocker} from '../mocker';\n\n/**\n * Retrieves user information.\n * Uses login service.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserInfoService {\n\n  /**\n   * Whether the user is logged in\n   */\n  isLoggedIn: boolean;\n  /**\n   * Information of the logged in user\n   */\n  basicUserInfo: BasicUserInfo;\n\n  /**\n   * Emits a new event whenever login status changed\n   */\n  loginEvent = new Subject();\n\n  /**\n   * Constructor that automatically tries to login user in from cookies\n   *\n   * @param loginService Sends request to the server\n   * @param cookieService Stores username and password hash as cookies\n   */\n  constructor(private loginService: LoginService,\n              private cookieService: CookieService) {\n    this.isLoggedIn = false;\n    this.basicUserInfo = null;\n\n    if (cookieService.check('username') && cookieService.check('password')) {\n      this\n        .login(new BasicUserInfo(cookieService.get('username'), cookieService.get('password')))\n        .then((res: ServerResponse) => {\n          if (!res.success) {\n            this.clearCookies();\n          }\n        }, (error: HttpErrorResponse) => {\n          if (error.status === 401) {\n            this.clearCookies();\n          }\n        });\n    }\n  }\n\n  /**\n   * Remove all cookies related to username and password\n   */\n  private clearCookies(): void {\n    this.cookieService.delete('username');\n    this.cookieService.delete('password');\n  }\n\n  /**\n   * Get the username and password hash of logged in user.\n   * Security vulnerability in allowing access to password hash in a public method?\n   */\n  public getBasicUserInfo(): BasicUserInfo {\n    return this.isLoggedIn ? this.basicUserInfo : undefined;\n  }\n\n  /**\n   * Attempt to login. If successful, record username and password in cookies.\n   *\n   * @param loginCredentials Username and password hash.\n   */\n  public login(loginCredentials: BasicUserInfo): Promise {\n    const loginPromise: Promise = this.loginService.login(loginCredentials);\n    loginPromise.then((res: ServerResponse) => {\n        if (res.success) {\n          this.isLoggedIn = true;\n          this.basicUserInfo = loginCredentials;\n          this.loginEvent.next(true);\n\n          this.cookieService.set('username', loginCredentials.username);\n          this.cookieService.set('password', loginCredentials.password);\n\n        } else {\n          this.isLoggedIn = false;\n          this.loginEvent.next(false);\n        }\n      },\n      (error) => {\n        console.log(error);\n      });\n    return loginPromise;\n  }\n\n  /**\n   * reset login status to not logged in and remove cookies storing user account information\n   */\n  public logout(): void {\n    this.isLoggedIn = false;\n    this.basicUserInfo = undefined;\n    this.clearCookies();\n    this.loginEvent.next(false);\n  }\n\n  /**\n   * Create a fake server response in the format of protoUser.\n   */\n  private mockProtoUser(): Observable {\n    return new Observable((observer) => {\n      const mockUser = new ProtoUser();\n      mockUser.user = new User('peter', 'lih@s.com');\n      mockUser.museumList = [\n        new MuseumBuilder().id(1).name('test').build(),\n        new MuseumBuilder().id(2).name('abc').build(),\n        new MuseumBuilder().id(3).name('zcx').build()];\n      const editSize = 10;\n      const mockEdits = new Array(editSize);\n      for (let i = 0; i  protoEdit.approvalStatus === 'Under review');\n      mockUser.editsList = mockEdits;\n      observer.next(mockUser);\n    });\n  }\n\n  /**\n   * Retrieve the complete user info of a user\n   */\n  public getCompleteUserInfo(): Observable {\n    return this.loginService.getCompleteUserInfo(this.basicUserInfo);\n  }\n\n  /**\n   * Let another component/service track the login status of the user.\n   * The returned observable emits an event whenever user login/logout.\n   */\n  public trackLoginStatus(): Observable {\n    return this.loginEvent.asObservable();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserMuseumListComponent.html":{"url":"components/UserMuseumListComponent.html","title":"component - UserMuseumListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UserMuseumListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/user/user-profile/user-museum-list/user-museum-list.component.ts\n\n\n    \n        Description\n    \n    \n        a list of user-owned in the user profile page\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-museum-list\n            \n\n            \n                styleUrls\n                ./user-museum-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./user-museum-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                columnNameToFieldName\n                            \n                            \n                                columnSortStatus\n                            \n                            \n                                    Readonly\n                                columnsToDisplay\n                            \n                            \n                                    Readonly\n                                columnsToSort\n                            \n                            \n                                sortDown\n                            \n                            \n                                sortUntouched\n                            \n                            \n                                sortUP\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                delete\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                resetColumnSortStatus\n                            \n                            \n                                sort\n                            \n                            \n                                view\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                headCuratorList\n                            \n                            \n                                list\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                reloadProfile\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, museumService: MuseumService, modalService: NgbModal)\n                    \n                \n                        \n                            \n                                Defined in src/app/user/user-profile/user-museum-list/user-museum-list.component.ts:67\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                routes to detailed museum info\n\n                                                        \n                                                \n                                                \n                                                        museumService\n                                                  \n                                                        \n                                                                        MuseumService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                facilitate museum deletion\n\n                                                        \n                                                \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                    NgbModal\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                open modal for confirmation & user feedback\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        headCuratorList\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/user/user-profile/user-museum-list/user-museum-list.component.ts:31\n                            \n                        \n                \n                    \n                        whether this list is a special museum list for the head curator\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        list\n                    \n                \n                \n                    \n                        Type :         WikiEntry[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/user/user-profile/user-museum-list/user-museum-list.component.ts:27\n                            \n                        \n                \n                    \n                        an array of museums to be shown\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        reloadProfile\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/user/user-profile/user-museum-list/user-museum-list.component.ts:36\n                            \n                        \n                \n                    \n                        emits an event whenever a change happened to the user profile page\nso that user profile can reload\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete(entry: WikiEntry)\n                \n            \n\n\n            \n                \n                    Defined in src/app/user/user-profile/user-museum-list/user-museum-list.component.ts:112\n                \n            \n\n\n            \n                \n                    delete a museum\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    entry\n                                    \n                                                WikiEntry\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the museum to be deleted\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/user/user-profile/user-museum-list/user-museum-list.component.ts:85\n                \n            \n\n\n            \n                \n                    do nothing on initialization since all data are passed through input binding\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            resetColumnSortStatus\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resetColumnSortStatus()\n                \n            \n\n\n            \n                \n                    Defined in src/app/user/user-profile/user-museum-list/user-museum-list.component.ts:91\n                \n            \n\n\n            \n                \n                    reset the sorting status of all columns to untouched\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sort\n                        \n                        \n                    \n                \n            \n            \n                \nsort(column: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/user/user-profile/user-museum-list/user-museum-list.component.ts:156\n                \n            \n\n\n            \n                \n                    sort a certain column\nif that column is untouched or sorting down, sort up, otherwise, sort down\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    column\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the name of the colume whose sort status will be changed\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            view\n                        \n                        \n                    \n                \n            \n            \n                \nview(entry: WikiEntry)\n                \n            \n\n\n            \n                \n                    Defined in src/app/user/user-profile/user-museum-list/user-museum-list.component.ts:103\n                \n            \n\n\n            \n                \n                    look at the details of a museum\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    entry\n                                    \n                                                WikiEntry\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the desired museum entry\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            columnNameToFieldName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {Name: 'name'}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user/user-profile/user-museum-list/user-museum-list.component.ts:49\n                            \n                        \n\n                \n                    \n                        the corresponding field name of a column name\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            columnSortStatus\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user/user-profile/user-museum-list/user-museum-list.component.ts:54\n                            \n                        \n\n                \n                    \n                        store the sort status of all columns (untouched, sort ascending, sort descending)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            columnsToDisplay\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['Name', 'Actions']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user/user-profile/user-museum-list/user-museum-list.component.ts:41\n                            \n                        \n\n                \n                    \n                        columns that are displayed in the table\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            columnsToSort\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['Name']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user/user-profile/user-museum-list/user-museum-list.component.ts:45\n                            \n                        \n\n                \n                    \n                        columns in the table that can be sorted\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sortDown\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : faSortDown\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user/user-profile/user-museum-list/user-museum-list.component.ts:67\n                            \n                        \n\n                \n                    \n                        font awesome sort icon with only one arrow pointing down\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sortUntouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : faSort\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user/user-profile/user-museum-list/user-museum-list.component.ts:59\n                            \n                        \n\n                \n                    \n                        font awesome sort icon\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sortUP\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : faSortUp\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user/user-profile/user-museum-list/user-museum-list.component.ts:63\n                            \n                        \n\n                \n                    \n                        font awesome sort icon with only one arrow pointing up\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {WikiEntry} from '../../../models/wiki-entry';\nimport {Router} from '@angular/router';\nimport {faSort} from '@fortawesome/free-solid-svg-icons';\nimport {faSortUp} from '@fortawesome/free-solid-svg-icons';\nimport {faSortDown} from '@fortawesome/free-solid-svg-icons';\nimport {MuseumService} from '../../../services/wiki-entry/museum.service';\nimport {ServerResponse} from '../../../services/server-response';\nimport {HttpErrorResponse} from '@angular/common/http';\nimport {NgbModal} from '@ng-bootstrap/ng-bootstrap';\nimport {ModalMessageComponent} from '../../../static/modal-message/modal-message.component';\nimport {ConfirmationModalComponent} from '../../../static/confirmation-modal/confirmation-modal.component';\n\n/**\n * a list of user-owned in the user profile page\n */\n@Component({\n  selector: 'app-user-museum-list',\n  templateUrl: './user-museum-list.component.html',\n  styleUrls: ['./user-museum-list.component.scss']\n})\nexport class UserMuseumListComponent implements OnInit {\n\n  /**\n   * an array of museums to be shown\n   */\n  @Input() list: WikiEntry[];\n  /**\n   * whether this list is a special museum list for the head curator\n   */\n  @Input() headCuratorList: boolean;\n  /**\n   * emits an event whenever a change happened to the user profile page\n   * so that user profile can reload\n   */\n  @Output() reloadProfile = new EventEmitter();\n\n  /**\n   * columns that are displayed in the table\n   */\n  readonly columnsToDisplay = ['Name', 'Actions'];\n  /**\n   * columns in the table that can be sorted\n   */\n  readonly columnsToSort = ['Name'];\n  /**\n   * the corresponding field name of a column name\n   */\n  readonly columnNameToFieldName = {Name: 'name'};\n\n  /**\n   * store the sort status of all columns (untouched, sort ascending, sort descending)\n   */\n  columnSortStatus = {};\n\n  /**\n   * font awesome sort icon\n   */\n  sortUntouched = faSort;\n  /**\n   * font awesome sort icon with only one arrow pointing up\n   */\n  sortUP = faSortUp;\n  /**\n   * font awesome sort icon with only one arrow pointing down\n   */\n  sortDown = faSortDown;\n\n  /**\n   * constructor\n   *\n   * @param router routes to detailed museum info\n   * @param museumService facilitate museum deletion\n   * @param modalService open modal for confirmation & user feedback\n   */\n  constructor(private router: Router,\n              private museumService: MuseumService,\n              private modalService: NgbModal) {\n    this.resetColumnSortStatus();\n  }\n\n  /**\n   * do nothing on initialization since all data are passed through input binding\n   */\n  ngOnInit(): void {\n  }\n\n  /**\n   * reset the sorting status of all columns to untouched\n   */\n  private resetColumnSortStatus() {\n    this.columnSortStatus = {};\n    for (const column of this.columnsToSort) {\n      this.columnSortStatus[column] = this.sortUntouched;\n    }\n  }\n\n  /**\n   * look at the details of a museum\n   *\n   * @param entry the desired museum entry\n   */\n  view(entry: WikiEntry): void {\n    this.router.navigateByUrl('/view/museum/' + entry.id);\n  }\n\n  /**\n   * delete a museum\n   *\n   * @param entry the museum to be deleted\n   */\n  delete(entry: WikiEntry): void {\n    // let the user confirm that the museum should be deleted\n    const confirmModal = this.modalService.open(ConfirmationModalComponent);\n    const confirmationModalComponent: ConfirmationModalComponent = confirmModal.componentInstance;\n    confirmationModalComponent.title = 'Delete Museum';\n    confirmationModalComponent.message = 'Are you sure?';\n    confirmationModalComponent.modal = confirmModal;\n    confirmModal.result.then(\n      /**\n       * act based on the user response in confirmation modal\n       *\n       * @param dismissReason true if user clicked yes, false otherwise\n       */\n      (dismissReason: boolean) => {\n        // if user chose no, don't do anything\n        if (!dismissReason) {\n          return;\n        }\n        // open a modal and display the result of deletion attempt\n        const modal = this.modalService.open(ModalMessageComponent);\n        const modalComponent: ModalMessageComponent = modal.componentInstance;\n        modalComponent.modal = modal;\n        modalComponent.title = 'Delete ' + entry.name;\n        modalComponent.waitingForServerResponse();\n        this.museumService.deleteMuseum(entry.id).then(\n          (res: ServerResponse) => {\n            modalComponent.fromServerResponse(res);\n            // reload the user profile after this change\n            this.reloadProfile.emit();\n          },\n          (err: HttpErrorResponse) => {\n            modalComponent.fromNetworkError(err);\n          }\n        );\n      }\n    );\n  }\n\n  /**\n   * sort a certain column\n   * if that column is untouched or sorting down, sort up, otherwise, sort down\n   *\n   * @param column the name of the colume whose sort status will be changed\n   */\n  sort(column: string): void {\n    // check if this column can be sorted\n    if (!this.columnSortStatus[column]) {\n      return;\n    }\n    // the next sort status of the current column\n    const nextStatus = this.columnSortStatus[column] === this.sortUP ? this.sortDown : this.sortUP;\n    this.resetColumnSortStatus();\n    this.columnSortStatus[column] = nextStatus;\n\n    // name of the field that will be compared\n    const fieldName = this.columnNameToFieldName[column];\n\n    this.list.sort(\n      (entry1, entry2) =>\n        // compare the two entries, if trying to sort down, the comparison result will be inverted\n        // the !== operator is equivalent to a ^ binary operator\n        (nextStatus === this.sortDown !== entry1[fieldName] > entry2[fieldName]) ? 1 : -1);\n  }\n\n}\n\n    \n\n    \n        {{headCuratorList ? 'All museums' : 'Your museums: '}}\n 0; else noMuseumBlock\">\n  \n    \n    \n      \n        {{column}}\n        \n      \n    \n    \n    \n    \n      {{entry.name}}\n      \n        \n          View\n        \n        \n          Delete\n        \n      \n    \n    \n  \n\n\n  It appears that you don't have any museums.\n  \n\n\n    \n\n    \n                \n                    ./user-museum-list.component.scss\n                \n                .cursor-pointer {\n  cursor: pointer;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{headCuratorList ? \\'All museums\\' : \\'Your museums: \\'}} 0; else noMuseumBlock\">                        {{column}}                                    {{entry.name}}                        View                          Delete                          It appears that you don\\'t have any museums.  '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollectionListComponent', 'selector': 'app-collection-list'},{'name': 'ConfirmationModalComponent', 'selector': 'app-confirmation-modal'},{'name': 'CreateComponent', 'selector': 'app-create'},{'name': 'EditComponent', 'selector': 'app-edit'},{'name': 'EditOrCreateComponent', 'selector': 'app-edit-or-create'},{'name': 'EntryListComponent', 'selector': 'app-entry-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownDisplayComponent', 'selector': 'app-markdown-display'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'ModalMessageComponent', 'selector': 'app-modal-message'},{'name': 'MuseumListComponent', 'selector': 'app-museum-list'},{'name': 'NavigationBarComponent', 'selector': 'app-navigation-bar'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'ResetPasswordModalComponent', 'selector': 'app-reset-password-modal'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SearchInCategoryComponent', 'selector': 'app-search-in-category'},{'name': 'TagSelectionComponent', 'selector': 'app-tag-selection'},{'name': 'UserEditListComponent', 'selector': 'app-user-edit-list'},{'name': 'UserMuseumListComponent', 'selector': 'app-user-museum-list'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'ViewComponent', 'selector': 'app-view'},{'name': 'ViewEditComponent', 'selector': 'app-view-edit'},{'name': 'WikiEntryEditorComponent', 'selector': 'app-wiki-entry-editor'},{'name': 'WikiEntryViewComponent', 'selector': 'app-wiki-entry-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserMuseumListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserProfileComponent.html":{"url":"components/UserProfileComponent.html","title":"component - UserProfileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UserProfileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/user/user-profile/user-profile.component.ts\n\n\n    \n        Description\n    \n    \n        displays user profile: username, email, museums owned, and edits\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-profile\n            \n\n            \n                styleUrls\n                ./user-profile.component.css\n            \n\n\n\n            \n                templateUrl\n                ./user-profile.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                loading\n                            \n                            \n                                projectConfig\n                            \n                            \n                                user\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getUserInfo\n                            \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, userInfoService: UserInfoService, projectConfigService: ProjectConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/app/user/user-profile/user-profile.component.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                routes user to login page if not logged in\n\n                                                        \n                                                \n                                                \n                                                        userInfoService\n                                                  \n                                                        \n                                                                        UserInfoService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                retrieves the complete user information\n\n                                                        \n                                                \n                                                \n                                                        projectConfigService\n                                                  \n                                                        \n                                                                        ProjectConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                retrieves logging configuration\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUserInfo\n                        \n                        \n                    \n                \n            \n            \n                \ngetUserInfo()\n                \n            \n\n\n            \n                \n                    Defined in src/app/user/user-profile/user-profile.component.ts:61\n                \n            \n\n\n            \n                \n                    request detailed user info from the server\ncalled either when user profile page is visited or when an action (delete museum, approve/deny edit) changes\nuser profile, making reloading necessary\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/user/user-profile/user-profile.component.ts:95\n                \n            \n\n\n            \n                \n                    log out of the account can go to login page\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/user/user-profile/user-profile.component.ts:84\n                \n            \n\n\n            \n                \n                    if not logged in, ask for login\nif logged in, retrieve user info\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user/user-profile/user-profile.component.ts:35\n                            \n                        \n\n                \n                    \n                        whether an error occurred while loading user info\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user/user-profile/user-profile.component.ts:31\n                            \n                        \n\n                \n                    \n                        whether the program is waiting for server response of user info\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            projectConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ProjectConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user/user-profile/user-profile.component.ts:40\n                            \n                        \n\n                \n                    \n                        stores logging configuration\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user/user-profile/user-profile.component.ts:26\n                            \n                        \n\n                \n                    \n                        complete user information\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user/user-profile/user-profile.component.ts:22\n                            \n                        \n\n                \n                    \n                        username of current user\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {UserInfoService} from '../../services/user/user-info.service';\nimport {User} from '../../models/user';\nimport {Router} from '@angular/router';\nimport {ProtoUser} from '../../services/object-prototypes/proto-user';\nimport {ProjectConfigService} from '../../services/config/project-config.service';\nimport {ProjectConfig} from '../../config/ProjectConfig';\n\n/**\n * displays user profile: username, email, museums owned, and edits\n */\n@Component({\n  selector: 'app-user-profile',\n  templateUrl: './user-profile.component.html',\n  styleUrls: ['./user-profile.component.css']\n})\nexport class UserProfileComponent implements OnInit {\n\n  /**\n   * username of current user\n   */\n  username: string;\n  /**\n   * complete user information\n   */\n  user: User;\n\n  /**\n   * whether the program is waiting for server response of user info\n   */\n  loading: boolean;\n  /**\n   * whether an error occurred while loading user info\n   */\n  error: boolean;\n\n  /**\n   * stores logging configuration\n   */\n  projectConfig: ProjectConfig;\n\n  /**\n   * @param router routes user to login page if not logged in\n   * @param userInfoService retrieves the complete user information\n   * @param projectConfigService retrieves logging configuration\n   */\n  constructor(private router: Router,\n              private userInfoService: UserInfoService,\n              private projectConfigService: ProjectConfigService) {\n    this.username = userInfoService.getBasicUserInfo().username;\n    this.loading = true;\n    this.error = false;\n    this.projectConfig = projectConfigService.getProjectConfig();\n  }\n\n  /**\n   * request detailed user info from the server\n   * called either when user profile page is visited or when an action (delete museum, approve/deny edit) changes\n   * user profile, making reloading necessary\n   */\n  getUserInfo(): void {\n    this.userInfoService\n      .getCompleteUserInfo()\n      .toPromise()\n      .then((res: ProtoUser) => {\n        if (this.projectConfig.isLogging()) {\n          console.log('User received from backend: ');\n          console.log(res);\n        }\n        // convert received JSON object to User object\n        this.user = ProtoUser.toUser(res);\n        this.loading = false;\n      }, (error) => {\n        this.error = true;\n        console.log(error);\n      });\n  }\n\n  /**\n   * if not logged in, ask for login\n   *\n   * if logged in, retrieve user info\n   */\n  ngOnInit(): void {\n    if (!this.userInfoService.isLoggedIn) {\n      this.router.navigateByUrl('/login');\n    }\n\n    this.getUserInfo();\n  }\n\n  /**\n   * log out of the account can go to login page\n   */\n  logout(): void {\n    this.userInfoService.logout();\n    this.router.navigateByUrl('/login');\n  }\n\n}\n\n    \n\n    \n        \n  \n    Profile of {{username}}\n  \n  \n    Logout\n  \n  \n  \n\n\n\n  \n    Your username is: {{user.username}}\n  \n  \n    Your email address is: {{user.email}}\n  \n\n  \n  \n\n  \n  \n\n  \n  \n\n  \n  \n\n\n\n\n    \n\n    \n                \n                    ./user-profile.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Profile of {{username}}        Logout            Your username is: {{user.username}}        Your email address is: {{user.email}}                  '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollectionListComponent', 'selector': 'app-collection-list'},{'name': 'ConfirmationModalComponent', 'selector': 'app-confirmation-modal'},{'name': 'CreateComponent', 'selector': 'app-create'},{'name': 'EditComponent', 'selector': 'app-edit'},{'name': 'EditOrCreateComponent', 'selector': 'app-edit-or-create'},{'name': 'EntryListComponent', 'selector': 'app-entry-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownDisplayComponent', 'selector': 'app-markdown-display'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'ModalMessageComponent', 'selector': 'app-modal-message'},{'name': 'MuseumListComponent', 'selector': 'app-museum-list'},{'name': 'NavigationBarComponent', 'selector': 'app-navigation-bar'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'ResetPasswordModalComponent', 'selector': 'app-reset-password-modal'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SearchInCategoryComponent', 'selector': 'app-search-in-category'},{'name': 'TagSelectionComponent', 'selector': 'app-tag-selection'},{'name': 'UserEditListComponent', 'selector': 'app-user-edit-list'},{'name': 'UserMuseumListComponent', 'selector': 'app-user-museum-list'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'ViewComponent', 'selector': 'app-view'},{'name': 'ViewEditComponent', 'selector': 'app-view-edit'},{'name': 'WikiEntryEditorComponent', 'selector': 'app-wiki-entry-editor'},{'name': 'WikiEntryViewComponent', 'selector': 'app-wiki-entry-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserProfileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ViewComponent.html":{"url":"components/ViewComponent.html","title":"component - ViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/view/view/view.component.ts\n\n\n    \n        Description\n    \n    \n        The view of a museum/collection/artifact.\nIncludes back buttons, entry info (name, image, intro, description), and a list of entries\nbelonging to this entry (e.g. collections belonging to the current museum)\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-view\n            \n\n            \n                styleUrls\n                ./view.component.css\n            \n\n\n\n            \n                templateUrl\n                ./view.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                artifact\n                            \n                            \n                                collection\n                            \n                            \n                                config\n                            \n                            \n                                content\n                            \n                            \n                                contentParents\n                            \n                            \n                                contentSubList\n                            \n                            \n                                error\n                            \n                            \n                                id\n                            \n                            \n                                loading\n                            \n                            \n                                    Private\n                                museum\n                            \n                            \n                                parentName\n                            \n                            \n                                    Private\n                                    Readonly\n                                parentNameReference\n                            \n                            \n                                subListName\n                            \n                            \n                                    Private\n                                    Readonly\n                                subListNameReference\n                            \n                            \n                                viewCategory\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goToParent\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                resetLoadingStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, router: Router, museumService: MuseumService, collectionService: CollectionService, artifactService: ArtifactService, projectConfigService: ProjectConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/app/view/view/view.component.ts:107\n                            \n                        \n\n                \n                    \n                            Starts retrieving information from the server based on analyzed url.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Current url\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Navigates based on user click\n\n                                                        \n                                                \n                                                \n                                                        museumService\n                                                  \n                                                        \n                                                                        MuseumService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Get museum\n\n                                                        \n                                                \n                                                \n                                                        collectionService\n                                                  \n                                                        \n                                                                        CollectionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Get collection\n\n                                                        \n                                                \n                                                \n                                                        artifactService\n                                                  \n                                                        \n                                                                        ArtifactService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Get artifact\n\n                                                        \n                                                \n                                                \n                                                        projectConfigService\n                                                  \n                                                        \n                                                                        ProjectConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Project config about logging\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            goToParent\n                        \n                        \n                    \n                \n            \n            \n                \ngoToParent(entry: BasicEntry)\n                \n            \n\n\n            \n                \n                    Defined in src/app/view/view/view.component.ts:200\n                \n            \n\n\n            \n                \n                    Navigate back to the parent.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    entry\n                                    \n                                                BasicEntry\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The target entry\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/view/view/view.component.ts:192\n                \n            \n\n\n            \n                \n                    Everything is in constructor. No need for anything currently.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            resetLoadingStatus\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resetLoadingStatus()\n                \n            \n\n\n            \n                \n                    Defined in src/app/view/view/view.component.ts:104\n                \n            \n\n\n            \n                \n                    Reset the status of the app to loading\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            artifact\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Artifact\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/view/view/view.component.ts:67\n                            \n                        \n\n                \n                    \n                        The artifact currently displayed.\nUndefined if category is not artifact\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            collection\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Collection\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/view/view/view.component.ts:62\n                            \n                        \n\n                \n                    \n                        The collection currently displayed.\nUndefined if category is not collection.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ProjectConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/view/view/view.component.ts:99\n                            \n                        \n\n                \n                    \n                        Project configuration which stores logging settings.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            content\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         WikiEntry\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/view/view/view.component.ts:52\n                            \n                        \n\n                \n                    \n                        The content to be displayed\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            contentParents\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BasicEntry[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/view/view/view.component.ts:73\n                            \n                        \n\n                \n                    \n                        Parents of the current content.\nFor example, store collections if current content is an artifact.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            contentSubList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         WikiEntry[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/view/view/view.component.ts:82\n                            \n                        \n\n                \n                    \n                        List of entries belonging to the current entry.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/view/view/view.component.ts:47\n                            \n                        \n\n                \n                    \n                        Whether an error occurred while trying to get server response\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/view/view/view.component.ts:38\n                            \n                        \n\n                \n                    \n                        Id of current item. Retrieved from url parameter\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/view/view/view.component.ts:43\n                            \n                        \n\n                \n                    \n                        Whether app is waiting for backend server response\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            museum\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Museum\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/view/view/view.component.ts:57\n                            \n                        \n\n                \n                    \n                        The museum being displayed\nUndefined if category is not museum\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parentName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/view/view/view.component.ts:77\n                            \n                        \n\n                \n                    \n                        Name of the parent.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            parentNameReference\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {collection: 'museum', artifact: 'collection'}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/view/view/view.component.ts:94\n                            \n                        \n\n                \n                    \n                        Name of the parent\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subListName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/view/view/view.component.ts:86\n                            \n                        \n\n                \n                    \n                        Category of entries belonging to the current entry.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            subListNameReference\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {museum: 'Collection', collection: 'Artifact'}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/view/view/view.component.ts:90\n                            \n                        \n\n                \n                    \n                        Name of the sublist\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            viewCategory\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/view/view/view.component.ts:34\n                            \n                        \n\n                \n                    \n                        The category of the current entry view\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute, ParamMap, Router} from '@angular/router';\nimport {WikiEntry} from '../../models/wiki-entry';\nimport {MuseumService} from '../../services/wiki-entry/museum.service';\nimport {ProtoMuseum} from '../../services/object-prototypes/proto-museum';\nimport {Museum} from '../../models/museum';\nimport {Collection} from '../../models/collection';\nimport {CollectionService} from '../../services/wiki-entry/collection.service';\nimport {ProtoCollection} from '../../services/object-prototypes/proto-collection';\nimport {BasicEntry} from '../../models/basic-entry';\nimport {Artifact} from '../../models/artifact';\nimport {HttpErrorResponse} from '@angular/common/http';\nimport {ProjectConfigService} from '../../services/config/project-config.service';\nimport {ProjectConfig} from '../../config/ProjectConfig';\nimport {ArtifactService} from '../../services/wiki-entry/artifact.service';\nimport {ProtoArtifact} from '../../services/object-prototypes/proto-artifact';\nimport {PrototypeBuilder} from '../../models/builders/prototype-builder';\n\n/**\n * The view of a museum/collection/artifact.\n * Includes back buttons, entry info (name, image, intro, description), and a list of entries\n * belonging to this entry (e.g. collections belonging to the current museum)\n */\n@Component({\n  selector: 'app-view',\n  templateUrl: './view.component.html',\n  styleUrls: ['./view.component.css']\n})\nexport class ViewComponent implements OnInit {\n\n  /**\n   * The category of the current entry view\n   */\n  viewCategory: string;\n  /**\n   * Id of current item. Retrieved from url parameter\n   */\n  id: string;\n\n  /**\n   * Whether app is waiting for backend server response\n   */\n  loading: boolean;\n  /**\n   * Whether an error occurred while trying to get server response\n   */\n  error: boolean;\n\n  /**\n   * The content to be displayed\n   */\n  content: WikiEntry;\n  /**\n   * The museum being displayed\n   * Undefined if category is not museum\n   */\n  private museum: Museum;\n  /**\n   * The collection currently displayed.\n   * Undefined if category is not collection.\n   */\n  collection: Collection;\n  /**\n   * The artifact currently displayed.\n   * Undefined if category is not artifact\n   */\n  artifact: Artifact;\n\n  /**\n   * Parents of the current content.\n   * For example, store collections if current content is an artifact.\n   */\n  contentParents: BasicEntry[];\n  /**\n   * Name of the parent.\n   */\n  parentName: string;\n\n  /**\n   * List of entries belonging to the current entry.\n   */\n  contentSubList: WikiEntry[];\n  /**\n   * Category of entries belonging to the current entry.\n   */\n  subListName: string;\n  /**\n   * Name of the sublist\n   */\n  private readonly subListNameReference = {museum: 'Collection', collection: 'Artifact'};\n  /**\n   * Name of the parent\n   */\n  private readonly parentNameReference = {collection: 'museum', artifact: 'collection'};\n\n  /**\n   * Project configuration which stores logging settings.\n   */\n  config: ProjectConfig;\n\n  /**\n   * Reset the status of the app to loading\n   */\n  private resetLoadingStatus(): void {\n    this.loading = true;\n    this.error = false;\n  }\n\n  /**\n   * Starts retrieving information from the server based on analyzed url.\n   *\n   * @param route Current url\n   * @param router Navigates based on user click\n   * @param museumService Get museum\n   * @param collectionService Get collection\n   * @param artifactService Get artifact\n   * @param projectConfigService Project config about logging\n   */\n  constructor(private route: ActivatedRoute,\n              private router: Router,\n              private museumService: MuseumService,\n              private collectionService: CollectionService,\n              private artifactService: ArtifactService,\n              private projectConfigService: ProjectConfigService) {\n    this.resetLoadingStatus();\n\n    this.config = this.projectConfigService.getProjectConfig();\n\n    this.route.paramMap.subscribe((paramMap: ParamMap) => {\n      this.viewCategory = paramMap.get('viewCategory');\n      this.id = paramMap.get('id');\n      this.resetLoadingStatus();\n      this.subListName = this.subListNameReference[this.viewCategory];\n      this.parentName = this.parentNameReference[this.viewCategory];\n\n      if (this.viewCategory === 'museum') {\n        this.museumService.getMuseum(this.id).subscribe(\n          (response: ProtoMuseum) => {\n            if (this.config?.isLogging()) {\n              console.log(response);\n            }\n            this.museum = Museum.of(response.museum);\n            this.content = this.museum;\n            this.contentSubList = response.collectionList;\n            this.loading = false;\n          },\n          (error: HttpErrorResponse) => {\n            this.error = true;\n            console.log(error);\n          });\n      } else if (this.viewCategory === 'collection') {\n        this.collectionService.getCollection(this.id).subscribe(\n          (res: ProtoCollection) => {\n            if (this.config?.isLogging()) {\n              console.log(res);\n            }\n            const collection = PrototypeBuilder.buildFromPrototype({collection: res}) as Collection;\n            this.content = collection;\n            this.collection = collection;\n            this.contentSubList = collection.artifacts;\n            this.contentParents = [collection.museum];\n            this.loading = false;\n          },\n          (error: HttpErrorResponse) => {\n            this.error = true;\n            console.log(error);\n          }\n        );\n      } else if (this.viewCategory === 'artifact') {\n        this.artifactService.getArtifact(this.id).subscribe((res: ProtoArtifact) => {\n            if (this.config?.isLogging()) {\n              console.log(res);\n            }\n            const artifact = PrototypeBuilder.buildFromPrototype({artifact: res}) as Artifact;\n            this.content = artifact;\n            this.artifact = artifact;\n            this.contentSubList = [];\n            this.contentParents = artifact.collectionList;\n            this.loading = false;\n          },\n          (error: HttpErrorResponse) => {\n            this.error = true;\n            console.log(error);\n          });\n      }\n    });\n  }\n\n  /**\n   * Everything is in constructor. No need for anything currently.\n   */\n  ngOnInit(): void {\n  }\n\n  /**\n   * Navigate back to the parent.\n   *\n   * @param entry The target entry\n   */\n  goToParent(entry: BasicEntry): void {\n    this.router.navigateByUrl('/view/' + this.parentName + '/' + entry.id);\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n  \n\n\n\n\n  \n    Back\n  \n  \n    \n      Back to {{contentParent.name}}\n    \n  \n\n  \n\n  \n  \n\n  \n\n  \n    \n    \n  \n\n\n\n    \n\n    \n                \n                    ./view.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        Back              Back to {{contentParent.name}}                          '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollectionListComponent', 'selector': 'app-collection-list'},{'name': 'ConfirmationModalComponent', 'selector': 'app-confirmation-modal'},{'name': 'CreateComponent', 'selector': 'app-create'},{'name': 'EditComponent', 'selector': 'app-edit'},{'name': 'EditOrCreateComponent', 'selector': 'app-edit-or-create'},{'name': 'EntryListComponent', 'selector': 'app-entry-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownDisplayComponent', 'selector': 'app-markdown-display'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'ModalMessageComponent', 'selector': 'app-modal-message'},{'name': 'MuseumListComponent', 'selector': 'app-museum-list'},{'name': 'NavigationBarComponent', 'selector': 'app-navigation-bar'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'ResetPasswordModalComponent', 'selector': 'app-reset-password-modal'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SearchInCategoryComponent', 'selector': 'app-search-in-category'},{'name': 'TagSelectionComponent', 'selector': 'app-tag-selection'},{'name': 'UserEditListComponent', 'selector': 'app-user-edit-list'},{'name': 'UserMuseumListComponent', 'selector': 'app-user-museum-list'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'ViewComponent', 'selector': 'app-view'},{'name': 'ViewEditComponent', 'selector': 'app-view-edit'},{'name': 'WikiEntryEditorComponent', 'selector': 'app-wiki-entry-editor'},{'name': 'WikiEntryViewComponent', 'selector': 'app-wiki-entry-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ViewEditComponent.html":{"url":"components/ViewEditComponent.html","title":"component - ViewEditComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ViewEditComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/view/view-edit/view-edit.component.ts\n\n\n    \n        Description\n    \n    \n        View for the details of an edit\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-view-edit\n            \n\n            \n                styleUrls\n                ./view-edit.component.css\n            \n\n\n\n            \n                templateUrl\n                ./view-edit.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                capitalizeFirstLetter\n                            \n                            \n                                category\n                            \n                            \n                                changedEntry\n                            \n                            \n                                currentEntry\n                            \n                            \n                                currentUserName\n                            \n                            \n                                displayChanged\n                            \n                            \n                                displayCurrent\n                            \n                            \n                                edit\n                            \n                            \n                                editId\n                            \n                            \n                                errorEdit\n                            \n                            \n                                loadingEdit\n                            \n                            \n                                    Private\n                                projectConfig\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                approve\n                            \n                            \n                                deny\n                            \n                            \n                                    Private\n                                fetchCurrent\n                            \n                            \n                                getCollectionList\n                            \n                            \n                                getMuseumId\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                reviewEdit\n                            \n                            \n                                    Private\n                                updateCurrentUsername\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(activatedRoute: ActivatedRoute, editService: EditService, userInfoService: UserInfoService, getByCategoryService: GetByCategoryService, projectConfigService: ProjectConfigService, modalService: NgbModal)\n                    \n                \n                        \n                            \n                                Defined in src/app/view/view-edit/view-edit.component.ts:90\n                            \n                        \n\n                \n                    \n                            Constructor tracks user login information to track username of logged in user\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Url\n\n                                                        \n                                                \n                                                \n                                                        editService\n                                                  \n                                                        \n                                                                        EditService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provides edit info\n\n                                                        \n                                                \n                                                \n                                                        userInfoService\n                                                  \n                                                        \n                                                                        UserInfoService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provides user info\n\n                                                        \n                                                \n                                                \n                                                        getByCategoryService\n                                                  \n                                                        \n                                                                        GetByCategoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Get an entry by category and id\n\n                                                        \n                                                \n                                                \n                                                        projectConfigService\n                                                  \n                                                        \n                                                                        ProjectConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Logging configuration\n\n                                                        \n                                                \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                    NgbModal\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Opens a modal for user feedback\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            approve\n                        \n                        \n                    \n                \n            \n            \n                \napprove(entry: Edit)\n                \n            \n\n\n            \n                \n                    Defined in src/app/view/view-edit/view-edit.component.ts:202\n                \n            \n\n\n            \n                \n                    Approve an edit\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    entry\n                                    \n                                                Edit\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The edit to be approved\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deny\n                        \n                        \n                    \n                \n            \n            \n                \ndeny(entry: Edit)\n                \n            \n\n\n            \n                \n                    Defined in src/app/view/view-edit/view-edit.component.ts:193\n                \n            \n\n\n            \n                \n                    Deny an edit\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    entry\n                                    \n                                                Edit\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The edit to be denied\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            fetchCurrent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fetchCurrent()\n                \n            \n\n\n            \n                \n                    Defined in src/app/view/view-edit/view-edit.component.ts:131\n                \n            \n\n\n            \n                \n                    Fetch the current status of the edit\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCollectionList\n                        \n                        \n                    \n                \n            \n            \n                \ngetCollectionList(currentEntry: Museum | Collection | Artifact)\n                \n            \n\n\n            \n                \n                    Defined in src/app/view/view-edit/view-edit.component.ts:242\n                \n            \n\n\n            \n                \n                    Retrieve the collection list of the museum of an artifact\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    currentEntry\n                                    \n                                            Museum | Collection | Artifact\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The artifact\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         BasicEntry[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMuseumId\n                        \n                        \n                    \n                \n            \n            \n                \ngetMuseumId(entry: WikiEntry)\n                \n            \n\n\n            \n                \n                    Defined in src/app/view/view-edit/view-edit.component.ts:233\n                \n            \n\n\n            \n                \n                    Retrieve the id of the museum of an artifact\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    entry\n                                    \n                                                WikiEntry\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The artifact\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/view/view-edit/view-edit.component.ts:157\n                \n            \n\n\n            \n                \n                    Fetch the current edit by id\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            reviewEdit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    reviewEdit(entry: Edit, action: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/view/view-edit/view-edit.component.ts:212\n                \n            \n\n\n            \n                \n                    Send in the review of an edit\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    entry\n                                    \n                                                Edit\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Edit that is reviewed\n\n                                    \n                                \n                                \n                                    action\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        True for approve; false for deny\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            updateCurrentUsername\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateCurrentUsername(loggedIn: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/view/view-edit/view-edit.component.ts:120\n                \n            \n\n\n            \n                \n                    Update the current user name based on user info\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    loggedIn\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                    \n                                        Whether the user is logged in\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            capitalizeFirstLetter\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : capitalizeFirstLetter\n                        \n                    \n                        \n                            \n                                    Defined in src/app/view/view-edit/view-edit.component.ts:83\n                            \n                        \n\n                \n                    \n                        Function to capitalize the first letter in a word\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            category\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/view/view-edit/view-edit.component.ts:42\n                            \n                        \n\n                \n                    \n                        Category of the eit\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changedEntry\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Museum | Collection | Artifact\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/view/view-edit/view-edit.component.ts:60\n                            \n                        \n\n                \n                    \n                        The changed entry.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentEntry\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Museum | Collection | Artifact\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/view/view-edit/view-edit.component.ts:56\n                            \n                        \n\n                \n                    \n                        The current entry in the database\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentUserName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/view/view-edit/view-edit.component.ts:88\n                            \n                        \n\n                \n                    \n                        The current username of the logged in user\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayChanged\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/view/view-edit/view-edit.component.ts:78\n                            \n                        \n\n                \n                    \n                        Whether changed version of the edited entry should be displayed\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayCurrent\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/view/view-edit/view-edit.component.ts:74\n                            \n                        \n\n                \n                    \n                        Whether current version of the edited entry should be displayed\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            edit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Edit\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/view/view-edit/view-edit.component.ts:51\n                            \n                        \n\n                \n                    \n                        The complete edit object\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/view/view-edit/view-edit.component.ts:38\n                            \n                        \n\n                \n                    \n                        Id of the edit\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorEdit\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/view/view-edit/view-edit.component.ts:69\n                            \n                        \n\n                \n                    \n                        Whether server gives an error\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadingEdit\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/view/view-edit/view-edit.component.ts:65\n                            \n                        \n\n                \n                    \n                        Whether program is waiting for backend response\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            projectConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ProjectConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/view/view-edit/view-edit.component.ts:90\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/view/view-edit/view-edit.component.ts:46\n                            \n                        \n\n                \n                    \n                        Type of edit (addition/deletion/edit)\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute, ParamMap} from '@angular/router';\nimport {Museum} from '../../models/museum';\nimport {Collection} from '../../models/collection';\nimport {Artifact} from '../../models/artifact';\nimport {EditService} from '../../services/edit.service';\nimport {Edit} from '../../models/edit';\nimport {ProtoEdit} from '../../services/object-prototypes/proto-edit';\nimport {HttpErrorResponse} from '@angular/common/http';\nimport {capitalizeFirstLetter} from '../../helper/capitalize-first-letter';\nimport {UserInfoService} from '../../services/user/user-info.service';\nimport {GetByCategoryService} from '../../services/get-by-category.service';\nimport {ProtoMuseum} from '../../services/object-prototypes/proto-museum';\nimport {ProtoArtifact} from '../../services/object-prototypes/proto-artifact';\nimport {ProtoCollection} from '../../services/object-prototypes/proto-collection';\nimport {PrototypeBuilder} from '../../models/builders/prototype-builder';\nimport {ProjectConfigService} from '../../services/config/project-config.service';\nimport {ProjectConfig} from '../../config/ProjectConfig';\nimport {ModalMessageComponent} from '../../static/modal-message/modal-message.component';\nimport {ServerResponse} from '../../services/server-response';\nimport {NgbModal} from '@ng-bootstrap/ng-bootstrap';\nimport {WikiEntry} from '../../models/wiki-entry';\nimport {BasicEntry} from '../../models/basic-entry';\n\n/**\n * View for the details of an edit\n */\n@Component({\n  selector: 'app-view-edit',\n  templateUrl: './view-edit.component.html',\n  styleUrls: ['./view-edit.component.css']\n})\nexport class ViewEditComponent implements OnInit {\n\n  /**\n   * Id of the edit\n   */\n  editId: string;\n  /**\n   * Category of the eit\n   */\n  category: string;\n  /**\n   * Type of edit (addition/deletion/edit)\n   */\n  type: string;\n\n  /**\n   * The complete edit object\n   */\n  edit: Edit;\n\n  /**\n   * The current entry in the database\n   */\n  currentEntry: Museum | Collection | Artifact;\n  /**\n   * The changed entry.\n   */\n  changedEntry: Museum | Collection | Artifact;\n\n  /**\n   * Whether program is waiting for backend response\n   */\n  loadingEdit = true;\n  /**\n   * Whether server gives an error\n   */\n  errorEdit = false;\n\n  /**\n   * Whether current version of the edited entry should be displayed\n   */\n  displayCurrent = true;\n  /**\n   * Whether changed version of the edited entry should be displayed\n   */\n  displayChanged = true;\n\n  /**\n   * Function to capitalize the first letter in a word\n   */\n  capitalizeFirstLetter = capitalizeFirstLetter;\n\n  /**\n   * The current username of the logged in user\n   */\n  currentUserName: string;\n\n  private projectConfig: ProjectConfig;\n\n  /**\n   * Constructor tracks user login information to track username of logged in user\n   *\n   * @param activatedRoute Url\n   * @param editService Provides edit info\n   * @param userInfoService Provides user info\n   * @param getByCategoryService Get an entry by category and id\n   * @param projectConfigService Logging configuration\n   * @param modalService Opens a modal for user feedback\n   */\n  constructor(private activatedRoute: ActivatedRoute,\n              private editService: EditService,\n              private userInfoService: UserInfoService,\n              private getByCategoryService: GetByCategoryService,\n              private projectConfigService: ProjectConfigService,\n              private modalService: NgbModal) {\n    this.updateCurrentUsername(this.userInfoService.isLoggedIn);\n    this.userInfoService.trackLoginStatus().subscribe((loggedIn: boolean) => {\n      this.updateCurrentUsername(loggedIn);\n    });\n    this.projectConfig = projectConfigService.getProjectConfig();\n  }\n\n  /**\n   * Update the current user name based on user info\n   *\n   * @param loggedIn Whether the user is logged in\n   */\n  private updateCurrentUsername(loggedIn: boolean = false) {\n    if (loggedIn) {\n      this.currentUserName = this.userInfoService.basicUserInfo?.username;\n    } else {\n      this.currentUserName = '';\n    }\n  }\n\n  /**\n   * Fetch the current status of the edit\n   */\n  private fetchCurrent(): void {\n    this\n      .getByCategoryService\n      .getByCategoryAndId(this.category, this.changedEntry.id)\n      .subscribe((res: ProtoMuseum | ProtoArtifact | ProtoCollection) => {\n          if (this.projectConfig.isLogging()) {\n            console.log('Current ' + this.category + ':');\n            console.log(res);\n          }\n          if (this.category === 'museum') {\n            this.currentEntry = PrototypeBuilder.buildFromPrototype({museum: res as ProtoMuseum});\n          } else if (this.category === 'collection') {\n            this.currentEntry = PrototypeBuilder.buildFromPrototype({collection: res as ProtoCollection});\n          } else if (this.category === 'artifact') {\n            this.currentEntry = PrototypeBuilder.buildFromPrototype({artifact: res as ProtoArtifact});\n          }\n        },\n        (err: HttpErrorResponse) => {\n          console.log(err);\n        }\n      );\n  }\n\n  /**\n   * Fetch the current edit by id\n   */\n  ngOnInit(): void {\n    this.activatedRoute.paramMap.subscribe((params: ParamMap) => {\n      this.editId = params.get('editId');\n      this.editService.getEdit(this.editId).subscribe((res: ProtoEdit) => {\n        if (this.projectConfig.isLogging()) {\n          console.log('Received edit: ');\n          console.log(res);\n        }\n        this.edit = ProtoEdit.toEdit(res);\n        this.category = this.edit.category;\n        this.type = this.edit.type.toLowerCase();\n        this.changedEntry = this.edit[this.category];\n        switch (this.type) {\n          case 'addition':\n            this.displayCurrent = false;\n            break;\n          case 'deletion':\n            this.displayCurrent = false;\n            break;\n        }\n        if (this.displayCurrent) {\n          this.fetchCurrent();\n        }\n        this.loadingEdit = false;\n      }, (err: HttpErrorResponse) => {\n        this.errorEdit = true;\n        console.log(err);\n      });\n    });\n  }\n\n  /**\n   * Deny an edit\n   *\n   * @param entry The edit to be denied\n   */\n  deny(entry: Edit): void {\n    this.reviewEdit(entry, false);\n  }\n\n  /**\n   * Approve an edit\n   *\n   * @param entry The edit to be approved\n   */\n  approve(entry: Edit): void {\n    this.reviewEdit(entry, true);\n  }\n\n  /**\n   * Send in the review of an edit\n   *\n   * @param entry Edit that is reviewed\n   * @param action True for approve; false for deny\n   */\n  private reviewEdit(entry: Edit, action: boolean): void {\n    const modal = this.modalService.open(ModalMessageComponent);\n    const modalComponent: ModalMessageComponent = modal.componentInstance;\n    modalComponent.title = 'Review Edit';\n    modalComponent.modal = modal;\n    modalComponent.waitingForServerResponse();\n    this.editService.reviewEdit(entry, action).then(\n      (res: ServerResponse) => {\n        modalComponent.fromServerResponse(res);\n      },\n      (err: HttpErrorResponse) => {\n        modalComponent.fromNetworkError(err);\n      }\n    );\n  }\n\n  /**\n   * Retrieve the id of the museum of an artifact\n   *\n   * @param entry The artifact\n   */\n  getMuseumId(entry: WikiEntry): number {\n    return (entry as Artifact).museum.id;\n  }\n\n  /**\n   * Retrieve the collection list of the museum of an artifact\n   *\n   * @param currentEntry The artifact\n   */\n  getCollectionList(currentEntry: Museum | Collection | Artifact): BasicEntry[] {\n    return (currentEntry as Artifact).collectionList;\n  }\n}\n\n    \n\n    \n        \n\n\n\n  \n    Back to User Profile\n  \n  \n    {{capitalizeFirstLetter(category)}} {{capitalizeFirstLetter(type)}}\n    \n      Approve\n      Deny\n    \n  \n  \n  \n    \n      Current Version:\n      \n        \n        \n        \n        \n      \n      \n        Loading current version...\n      \n    \n\n    \n      Changed Version:\n      \n      \n      \n      \n    \n    \n  \n\n\n    \n\n    \n                \n                    ./view-edit.component.css\n                \n                div.left-divider {\n  /* border-left: 3px solid rebeccapurple; */\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Back to User Profile        {{capitalizeFirstLetter(category)}} {{capitalizeFirstLetter(type)}}          Approve      Deny                    Current Version:                                                          Loading current version...                    Changed Version:                                  '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollectionListComponent', 'selector': 'app-collection-list'},{'name': 'ConfirmationModalComponent', 'selector': 'app-confirmation-modal'},{'name': 'CreateComponent', 'selector': 'app-create'},{'name': 'EditComponent', 'selector': 'app-edit'},{'name': 'EditOrCreateComponent', 'selector': 'app-edit-or-create'},{'name': 'EntryListComponent', 'selector': 'app-entry-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownDisplayComponent', 'selector': 'app-markdown-display'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'ModalMessageComponent', 'selector': 'app-modal-message'},{'name': 'MuseumListComponent', 'selector': 'app-museum-list'},{'name': 'NavigationBarComponent', 'selector': 'app-navigation-bar'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'ResetPasswordModalComponent', 'selector': 'app-reset-password-modal'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SearchInCategoryComponent', 'selector': 'app-search-in-category'},{'name': 'TagSelectionComponent', 'selector': 'app-tag-selection'},{'name': 'UserEditListComponent', 'selector': 'app-user-edit-list'},{'name': 'UserMuseumListComponent', 'selector': 'app-user-museum-list'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'ViewComponent', 'selector': 'app-view'},{'name': 'ViewEditComponent', 'selector': 'app-view-edit'},{'name': 'WikiEntryEditorComponent', 'selector': 'app-wiki-entry-editor'},{'name': 'WikiEntryViewComponent', 'selector': 'app-wiki-entry-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ViewEditComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/WikiEntry.html":{"url":"classes/WikiEntry.html","title":"class - WikiEntry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  WikiEntry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/wiki-entry.ts\n        \n\n            \n                Description\n            \n            \n                An entry in Museum Wiki.\nCan be either museum, collection, or artifact.\n\n            \n\n            \n                Extends\n            \n            \n                        BasicEntry\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                image\n                            \n                            \n                                introduction\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name?: string, introduction?: string, image?: string, description?: string, id?: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/wiki-entry.ts:22\n                            \n                        \n\n                \n                    \n                            Constructor that initializes all fields\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                                Name of entry\n\n                                                        \n                                                \n                                                \n                                                        introduction\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                                Introduction\n\n                                                        \n                                                \n                                                \n                                                        image\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                                Image url\n\n                                                        \n                                                \n                                                \n                                                        description\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                                Markdown description\n\n                                                        \n                                                \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                                Id of entry\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/wiki-entry.ts:18\n                            \n                        \n\n                \n                    \n                        Detailed description for the entry.\nMust be in Markdown\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            image\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/wiki-entry.ts:22\n                            \n                        \n\n                \n                    \n                        A url to the image that is displayed.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            introduction\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/wiki-entry.ts:13\n                            \n                        \n\n                \n                    \n                        The introductory text for the entry.\nMust be in plain text.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BasicEntry\n\n                                \n                            \n                        \n                            \n                                    Defined in         BasicEntry:12\n\n                            \n                        \n\n                \n                    \n                        Id of entry\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BasicEntry\n\n                                \n                            \n                        \n                            \n                                    Defined in         BasicEntry:8\n\n                            \n                        \n\n                \n                    \n                        Name of entry\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {BasicEntry} from './basic-entry';\nimport {WikiEntryBuilder} from './builders/wiki-entry-builder';\n\n/**\n * An entry in Museum Wiki.\n * Can be either museum, collection, or artifact.\n */\nexport class WikiEntry extends BasicEntry {\n  /**\n   * The introductory text for the entry.\n   * Must be in plain text.\n   */\n  introduction: string;\n  /**\n   * Detailed description for the entry.\n   * Must be in Markdown\n   */\n  description: string;\n  /**\n   * A url to the image that is displayed.\n   */\n  image: string;\n\n  /**\n   * Constructor that initializes all fields\n   *\n   * @param name Name of entry\n   * @param introduction Introduction\n   * @param image Image url\n   * @param description Markdown description\n   * @param id Id of entry\n   */\n  constructor(name?: string, introduction?: string, image?: string, description?: string, id?: number) {\n    super(name, id);\n    this.introduction = introduction;\n    this.image = image;\n    this.description = description;\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/WikiEntryBuilder.html":{"url":"classes/WikiEntryBuilder.html","title":"class - WikiEntryBuilder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  WikiEntryBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/builders/wiki-entry-builder.ts\n        \n\n            \n                Description\n            \n            \n                Builder for Wiki Entry\n\n            \n\n            \n                Extends\n            \n            \n                        BasicEntryBuilder\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                entry\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                build\n                            \n                            \n                                    Public\n                                description\n                            \n                            \n                                    Public\n                                image\n                            \n                            \n                                    Public\n                                introduction\n                            \n                            \n                                    Public\n                                self\n                            \n                            \n                                    Public\n                                wikiEntry\n                            \n                            \n                                    Public\n                                build\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                self\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(Type)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/builders/wiki-entry-builder.ts:8\n                            \n                        \n\n                \n                    \n                            Creates a new entry of a certain type\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        Type\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The type of object to build\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            entry\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     E\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BasicEntryBuilder\n\n                                \n                            \n                        \n                            \n                                    Defined in         BasicEntryBuilder:13\n\n                            \n                        \n\n                \n                    \n                        The entry that will be created.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            build\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    build()\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/builders/wiki-entry-builder.ts:66\n                \n            \n\n\n            \n                \n                    Build a custom object that extends Wiki Entry\n\n\n                    \n                        Returns :     E\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            description\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    description(description: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/builders/wiki-entry-builder.ts:44\n                \n            \n\n\n            \n                \n                    Builder method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    description\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Description in Markdown of entry\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            image\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    image(image: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/builders/wiki-entry-builder.ts:34\n                \n            \n\n\n            \n                \n                    Builder method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    image\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Url of image\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            introduction\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    introduction(introduction: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/builders/wiki-entry-builder.ts:24\n                \n            \n\n\n            \n                \n                    Builder method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    introduction\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Introduction of wiki entry\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            self\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    self()\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/builders/wiki-entry-builder.ts:73\n                \n            \n\n\n            \n                \n                    Returns a Builder that extends WikiEntryBuilder\n\n\n                    \n                        Returns :     T\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            wikiEntry\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    wikiEntry(entry: WikiEntry)\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/builders/wiki-entry-builder.ts:54\n                \n            \n\n\n            \n                \n                    Builder method from another Wiki Entry\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    entry\n                                    \n                                                WikiEntry\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        A wiki entry from which the builder will copy the info\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            build\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    build()\n                \n            \n\n\n            \n                \n                    Inherited from         BasicEntryBuilder\n\n                \n            \n            \n                \n                        Defined in         BasicEntryBuilder:51\n\n                \n            \n\n\n            \n                \n                    Build the entry\n\n\n                    \n                        Returns :     E\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            id\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    id(id: number | string)\n                \n            \n\n\n            \n                \n                    Inherited from         BasicEntryBuilder\n\n                \n            \n            \n                \n                        Defined in         BasicEntryBuilder:43\n\n                \n            \n\n\n            \n                \n                    Builder method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                            number | string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Set id of entry\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            name\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    name(name: string)\n                \n            \n\n\n            \n                \n                    Inherited from         BasicEntryBuilder\n\n                \n            \n            \n                \n                        Defined in         BasicEntryBuilder:33\n\n                \n            \n\n\n            \n                \n                    Builder method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Set name of entry\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            self\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    self()\n                \n            \n\n\n            \n                \n                    Inherited from         BasicEntryBuilder\n\n                \n            \n            \n                \n                        Defined in         BasicEntryBuilder:58\n\n                \n            \n\n\n            \n                \n                    Return this builder as a T, which is another builder that extends BasicEntryBuilder\n\n\n                    \n                        Returns :     T\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {WikiEntry} from '../wiki-entry';\nimport {BasicEntryBuilder} from './basic-entry-builder';\n\n/**\n * Builder for Wiki Entry\n */\nexport class WikiEntryBuilder, E extends WikiEntry>\n  extends BasicEntryBuilder {\n\n  /**\n   * Creates a new entry of a certain type\n   *\n   * @param Type The type of object to build\n   */\n  constructor(Type) {\n    super(Type);\n  }\n\n  /**\n   * Builder method\n   *\n   * @param introduction Introduction of wiki entry\n   */\n  public introduction(introduction: string): T {\n    this.entry.introduction = introduction;\n    return this.self();\n  }\n\n  /**\n   * Builder method\n   *\n   * @param image Url of image\n   */\n  public image(image: string): T {\n    this.entry.image = image;\n    return this.self();\n  }\n\n  /**\n   * Builder method\n   *\n   * @param description Description in Markdown of entry\n   */\n  public description(description: string): T {\n    this.entry.description = description;\n    return this.self();\n  }\n\n  /**\n   * Builder method from another Wiki Entry\n   *\n   * @param entry A wiki entry from which the builder will copy the info\n   */\n  public wikiEntry(entry: WikiEntry): T {\n    for (const property in entry) {\n      if (entry.hasOwnProperty(property)) {\n        this.entry[property] = entry[property];\n      }\n    }\n    return this.self();\n  }\n\n  /**\n   * Build a custom object that extends Wiki Entry\n   */\n  public build(): E {\n    return this.entry;\n  }\n\n  /**\n   * Returns a Builder that extends WikiEntryBuilder\n   */\n  public self(): T {\n    return this as unknown as T;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WikiEntryEditorComponent.html":{"url":"components/WikiEntryEditorComponent.html","title":"component - WikiEntryEditorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WikiEntryEditorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/edit/wiki-entry-editor/wiki-entry-editor.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-wiki-entry-editor\n            \n\n            \n                styleUrls\n                ./wiki-entry-editor.component.css\n            \n\n\n\n            \n                templateUrl\n                ./wiki-entry-editor.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                URL_VALIDATION_REGEX\n                            \n                            \n                                    Public\n                                wikiEntryFormGroup\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getWikiEntry\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                previousWikiEntry\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/edit/wiki-entry-editor/wiki-entry-editor.component.ts:29\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        previousWikiEntry\n                    \n                \n                \n                    \n                        Type :         WikiEntry\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/edit/wiki-entry-editor/wiki-entry-editor.component.ts:24\n                            \n                        \n                \n                    \n                        The previous version of the wiki entry, if there is any\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getWikiEntry\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getWikiEntry()\n                \n            \n\n\n            \n                \n                    Defined in src/app/edit/wiki-entry-editor/wiki-entry-editor.component.ts:63\n                \n            \n\n\n            \n                \n                    Return the new wiki entry created by user input\n\n\n                    \n                        Returns :         WikiEntry\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/edit/wiki-entry-editor/wiki-entry-editor.component.ts:40\n                \n            \n\n\n            \n                \n                    Initialize form group\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                                Readonly\n                            URL_VALIDATION_REGEX\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '(https?://)?([\\\\da-z.-]+)\\\\.([a-z.]{2,6})[/\\\\w .-]*/?'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit/wiki-entry-editor/wiki-entry-editor.component.ts:19\n                            \n                        \n\n                \n                    \n                        credits: @stephenhay\nCurrently unused because it overkills sometimes\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            wikiEntryFormGroup\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/edit/wiki-entry-editor/wiki-entry-editor.component.ts:29\n                            \n                        \n\n                \n                    \n                        A form group containing all fields for a new wiki entry\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {Component, Input, OnInit,} from '@angular/core';\nimport {WikiEntry} from '../../models/wiki-entry';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {EXAMPLE_DESCRIPTION} from '../../user/registration/ExampleDescription';\nimport {WikiEntryBuilder} from '../../models/builders/wiki-entry-builder';\nimport {MuseumBuilder} from '../../models/builders/museum-builder';\n\n@Component({\n  selector: 'app-wiki-entry-editor',\n  templateUrl: './wiki-entry-editor.component.html',\n  styleUrls: ['./wiki-entry-editor.component.css']\n})\nexport class WikiEntryEditorComponent implements OnInit {\n\n  /**\n   * credits: @stephenhay\n   * Currently unused because it overkills sometimes\n   */\n  private static readonly URL_VALIDATION_REGEX = '(https?://)?([\\\\da-z.-]+)\\\\.([a-z.]{2,6})[/\\\\w .-]*/?';\n\n  /**\n   * The previous version of the wiki entry, if there is any\n   */\n  @Input() previousWikiEntry: WikiEntry;\n\n  /**\n   * A form group containing all fields for a new wiki entry\n   */\n  public wikiEntryFormGroup: FormGroup;\n\n  /**\n   * Constructor\n   */\n  constructor() {\n  }\n\n  /**\n   * Initialize form group\n   */\n  ngOnInit(): void {\n    let prevName = '';\n    let prevIntroduction = '';\n    let prevImage = '';\n    let prevDescription = '';\n    if (this.previousWikiEntry) {\n      prevName = this.previousWikiEntry.name;\n      prevIntroduction = this.previousWikiEntry.introduction;\n      prevImage = this.previousWikiEntry.image;\n      prevDescription = this.previousWikiEntry.description;\n    }\n    this.wikiEntryFormGroup = new FormGroup(\n      {\n        name: new FormControl(prevName, Validators.required),\n        introduction: new FormControl(prevIntroduction, Validators.required),\n        image: new FormControl(prevImage,), // Validators.pattern(WikiEntryEditorComponent.URL_VALIDATION_REGEX)),\n        description: new FormControl(prevDescription)\n      });\n  }\n\n  /**\n   * Return the new wiki entry created by user input\n   */\n  public getWikiEntry(): WikiEntry {\n    const form = this.wikiEntryFormGroup;\n    return new WikiEntryBuilder(WikiEntry)\n      .name(form.get('name').value)\n      .introduction(form.get('introduction').value)\n      .description(form.get('description').value)\n      .image(form.get('image').value)\n      .id(this.previousWikiEntry?.id)\n      .build();\n  }\n\n}\n\n    \n\n    \n        \n  Name (required): \n  \n\n  Introduction (required): \n  \n\n  Image URL (optional):\n  \n\n  \n\n\n    \n\n    \n                \n                    ./wiki-entry-editor.component.css\n                \n                .ng-valid {\n  border-color: green;\n}\n\n.ng-invalid {\n  border-color: red;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Name (required):     Introduction (required):     Image URL (optional):    '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollectionListComponent', 'selector': 'app-collection-list'},{'name': 'ConfirmationModalComponent', 'selector': 'app-confirmation-modal'},{'name': 'CreateComponent', 'selector': 'app-create'},{'name': 'EditComponent', 'selector': 'app-edit'},{'name': 'EditOrCreateComponent', 'selector': 'app-edit-or-create'},{'name': 'EntryListComponent', 'selector': 'app-entry-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownDisplayComponent', 'selector': 'app-markdown-display'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'ModalMessageComponent', 'selector': 'app-modal-message'},{'name': 'MuseumListComponent', 'selector': 'app-museum-list'},{'name': 'NavigationBarComponent', 'selector': 'app-navigation-bar'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'ResetPasswordModalComponent', 'selector': 'app-reset-password-modal'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SearchInCategoryComponent', 'selector': 'app-search-in-category'},{'name': 'TagSelectionComponent', 'selector': 'app-tag-selection'},{'name': 'UserEditListComponent', 'selector': 'app-user-edit-list'},{'name': 'UserMuseumListComponent', 'selector': 'app-user-museum-list'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'ViewComponent', 'selector': 'app-view'},{'name': 'ViewEditComponent', 'selector': 'app-view-edit'},{'name': 'WikiEntryEditorComponent', 'selector': 'app-wiki-entry-editor'},{'name': 'WikiEntryViewComponent', 'selector': 'app-wiki-entry-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WikiEntryEditorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WikiEntryViewComponent.html":{"url":"components/WikiEntryViewComponent.html","title":"component - WikiEntryViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WikiEntryViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/view/wiki-entry-view/wiki-entry-view.component.ts\n\n\n    \n        Description\n    \n    \n        View a wiki-entry containing only name, intro, image, and description\nThis view is mostly category agnostic, meaning that despite the category,\nthe displayed content will be similar.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-wiki-entry-view\n            \n\n            \n                styleUrls\n                ./wiki-entry-view.component.css\n            \n\n\n\n            \n                templateUrl\n                ./wiki-entry-view.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                delete\n                            \n                            \n                                edit\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                canDelete\n                            \n                            \n                                canEdit\n                            \n                            \n                                category\n                            \n                            \n                                wikiEntry\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, userInfoService: UserInfoService, modalService: NgbModal, artifactService: ArtifactService)\n                    \n                \n                        \n                            \n                                Defined in src/app/view/wiki-entry-view/wiki-entry-view.component.ts:40\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Routes back to user profile\n\n                                                        \n                                                \n                                                \n                                                        userInfoService\n                                                  \n                                                        \n                                                                        UserInfoService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Deletion allowed only when user is logged in\n\n                                                        \n                                                \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                    NgbModal\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Opens a modal\n\n                                                        \n                                                \n                                                \n                                                        artifactService\n                                                  \n                                                        \n                                                                        ArtifactService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Help with artifact deletion\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        canDelete\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/view/wiki-entry-view/wiki-entry-view.component.ts:40\n                            \n                        \n                \n                    \n                        Whether a delete button can appear for this entry.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        canEdit\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/view/wiki-entry-view/wiki-entry-view.component.ts:30\n                            \n                        \n                \n                    \n                        Whether an edit button should appear for this entry\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        category\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/view/wiki-entry-view/wiki-entry-view.component.ts:36\n                            \n                        \n                \n                    \n                        Category of entry.\nOnly purpose is to help router and to determine whether a delete button should be displayed\nfor an entry. Only artifacts can be deleted by anyone.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        wikiEntry\n                    \n                \n                \n                    \n                        Type :         WikiEntry\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/view/wiki-entry-view/wiki-entry-view.component.ts:26\n                            \n                        \n                \n                    \n                        The entry to be displayed\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete()\n                \n            \n\n\n            \n                \n                    Defined in src/app/view/wiki-entry-view/wiki-entry-view.component.ts:76\n                \n            \n\n\n            \n                \n                    Delete the current entry.\nDeletion available only for artifacts.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            edit\n                        \n                        \n                    \n                \n            \n            \n                \nedit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/view/wiki-entry-view/wiki-entry-view.component.ts:68\n                \n            \n\n\n            \n                \n                    Route to edit page of the current entry\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/view/wiki-entry-view/wiki-entry-view.component.ts:59\n                \n            \n\n\n            \n                \n                    Determines whether the current entry can be deleted\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, Input, OnInit} from '@angular/core';\nimport {WikiEntry} from '../../models/wiki-entry';\nimport {Router} from '@angular/router';\nimport {UserInfoService} from '../../services/user/user-info.service';\nimport {NgbModal} from '@ng-bootstrap/ng-bootstrap';\nimport {ArtifactService} from '../../services/wiki-entry/artifact.service';\nimport {ModalMessageComponent} from '../../static/modal-message/modal-message.component';\nimport {ServerResponse} from '../../services/server-response';\nimport {HttpErrorResponse} from '@angular/common/http';\n\n/**\n * View a wiki-entry containing only name, intro, image, and description\n * This view is mostly category agnostic, meaning that despite the category,\n * the displayed content will be similar.\n */\n@Component({\n  selector: 'app-wiki-entry-view',\n  templateUrl: './wiki-entry-view.component.html',\n  styleUrls: ['./wiki-entry-view.component.css']\n})\nexport class WikiEntryViewComponent implements OnInit {\n\n  /**\n   * The entry to be displayed\n   */\n  @Input() wikiEntry: WikiEntry;\n  /**\n   * Whether an edit button should appear for this entry\n   */\n  @Input() canEdit: boolean;\n  /**\n   * Category of entry.\n   * Only purpose is to help router and to determine whether a delete button should be displayed\n   * for an entry. Only artifacts can be deleted by anyone.\n   */\n  @Input() category: string;\n  /**\n   * Whether a delete button can appear for this entry.\n   */\n  @Input() canDelete: boolean;\n\n  /**\n   * Constructor\n   *\n   * @param router Routes back to user profile\n   * @param userInfoService Deletion allowed only when user is logged in\n   * @param modalService Opens a modal\n   * @param artifactService Help with artifact deletion\n   */\n  constructor(private router: Router,\n              private userInfoService: UserInfoService,\n              private modalService: NgbModal,\n              private artifactService: ArtifactService) {\n  }\n\n  /**\n   * Determines whether the current entry can be deleted\n   */\n  ngOnInit(): void {\n    if (this.canDelete === undefined || this.canDelete === null) {\n      this.canDelete = this.userInfoService.isLoggedIn && this.category === 'artifact';\n    }\n  }\n\n  /**\n   * Route to edit page of the current entry\n   */\n  edit(): void {\n    this.router.navigateByUrl('/edit/' + this.category + '/' + this.wikiEntry.id);\n  }\n\n  /**\n   * Delete the current entry.\n   * Deletion available only for artifacts.\n   */\n  delete(): void {\n    const modal = this.modalService.open(ModalMessageComponent);\n    const modalComponent: ModalMessageComponent = modal.componentInstance;\n    modalComponent.title = 'Delete Artifact';\n    modalComponent.modal = modal;\n    modalComponent.waitingForServerResponse();\n    this.artifactService\n      .deleteArtifact(this.wikiEntry.id)\n      .then((res: ServerResponse) => {\n        modalComponent.fromServerResponse(res);\n      }, (err: HttpErrorResponse) => {\n        modalComponent.fromNetworkError(err);\n      });\n  }\n}\n\n    \n\n    \n        {{wikiEntry.name}}\n\nEdit\n\nDelete\n\n\n\n\n  \n\n\n{{wikiEntry.introduction}}\n\n\n\n    \n\n    \n                \n                    ./wiki-entry-view.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{wikiEntry.name}}EditDelete  {{wikiEntry.introduction}}'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollectionListComponent', 'selector': 'app-collection-list'},{'name': 'ConfirmationModalComponent', 'selector': 'app-confirmation-modal'},{'name': 'CreateComponent', 'selector': 'app-create'},{'name': 'EditComponent', 'selector': 'app-edit'},{'name': 'EditOrCreateComponent', 'selector': 'app-edit-or-create'},{'name': 'EntryListComponent', 'selector': 'app-entry-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownDisplayComponent', 'selector': 'app-markdown-display'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'ModalMessageComponent', 'selector': 'app-modal-message'},{'name': 'MuseumListComponent', 'selector': 'app-museum-list'},{'name': 'NavigationBarComponent', 'selector': 'app-navigation-bar'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'ResetPasswordModalComponent', 'selector': 'app-reset-password-modal'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SearchInCategoryComponent', 'selector': 'app-search-in-category'},{'name': 'TagSelectionComponent', 'selector': 'app-tag-selection'},{'name': 'UserEditListComponent', 'selector': 'app-user-edit-list'},{'name': 'UserMuseumListComponent', 'selector': 'app-user-museum-list'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'ViewComponent', 'selector': 'app-view'},{'name': 'ViewEditComponent', 'selector': 'app-view-edit'},{'name': 'WikiEntryEditorComponent', 'selector': 'app-wiki-entry-editor'},{'name': 'WikiEntryViewComponent', 'selector': 'app-wiki-entry-view'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WikiEntryViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Wrapper.html":{"url":"classes/Wrapper.html","title":"class - Wrapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Wrapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/Wrapper.ts\n        \n\n            \n                Description\n            \n            \n                Wraps around a certain value.\nResembles the Java Optional, except a Wrapper has no method for checking whether a value exists.\nCreated for an ad hoc purpose for reset password modal because\nthe Promise returned is mixed with Promise returned by closing the modal.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(value?: T)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/Wrapper.ts:11\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                  \n                                                        \n                                                                    T\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                                The value to be stored in this wrapper\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Wrapper.ts:11\n                            \n                        \n\n                \n                    \n                        The value stored by this wrapper\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Wrapper {\n  /**\n   * The value stored by this wrapper\n   */\n  value: T;\n\n  /**\n   * Constructor\n   *\n   * @param value The value to be stored in this wrapper\n   */\n  constructor(value?: T) {\n    this.value = value;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                e2e/src/app.po.ts\n            \n            class\n            AppPage\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/config/ProjectConfig.ts\n            \n            class\n            ProjectConfig\n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                src/app/config/ServerCannotConnect.ts\n            \n            class\n            ServerCannotConnect\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/config/ServerConfig.ts\n            \n            class\n            ServerConfig\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/edit/create/create.component.ts\n            \n            component\n            CreateComponent\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/edit/edit-or-create/edit-or-create.component.ts\n            \n            component\n            EditOrCreateComponent\n            \n                93 %\n                (14/15)\n            \n        \n        \n            \n                \n                src/app/edit/edit/edit.component.ts\n            \n            component\n            EditComponent\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/app/edit/markdown-display/markdown-display.component.ts\n            \n            component\n            MarkdownDisplayComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/edit/markdown-editor/markdown-editor.component.ts\n            \n            component\n            MarkdownEditorComponent\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/edit/tag-selection/tag-selection.component.ts\n            \n            component\n            TagSelectionComponent\n            \n                100 %\n                (16/16)\n            \n        \n        \n            \n                \n                src/app/edit/tag-selection/tag.ts\n            \n            class\n            Tag\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/edit/wiki-entry-editor/wiki-entry-editor.component.ts\n            \n            component\n            WikiEntryEditorComponent\n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                src/app/helper/capitalize-first-letter.ts\n            \n            function\n            capitalizeFirstLetter\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/helper/hash-helper.ts\n            \n            class\n            HashHelper\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/helper/marked.pipe.ts\n            \n            pipe\n            MarkedPipe\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/helper/text-limit.pipe.ts\n            \n            pipe\n            TextLimitPipe\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/models/Wrapper.ts\n            \n            class\n            Wrapper\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/models/artifact.ts\n            \n            class\n            Artifact\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/models/basic-entry.ts\n            \n            class\n            BasicEntry\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/models/basic-user-info.ts\n            \n            class\n            BasicUserInfo\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/models/builders/artifact-builder.ts\n            \n            class\n            ArtifactBuilder\n            \n                100 %\n                (16/16)\n            \n        \n        \n            \n                \n                src/app/models/builders/basic-entry-builder.ts\n            \n            class\n            BasicEntryBuilder\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/models/builders/collection-builder.ts\n            \n            class\n            CollectionBuilder\n            \n                100 %\n                (15/15)\n            \n        \n        \n            \n                \n                src/app/models/builders/edit-builder.ts\n            \n            class\n            EditBuilder\n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                src/app/models/builders/museum-builder.ts\n            \n            class\n            MuseumBuilder\n            \n                100 %\n                (15/15)\n            \n        \n        \n            \n                \n                src/app/models/builders/prototype-builder.ts\n            \n            class\n            PrototypeBuilder\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/models/builders/wiki-entry-builder.ts\n            \n            class\n            WikiEntryBuilder\n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                src/app/models/collection.ts\n            \n            class\n            Collection\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/models/edit.ts\n            \n            class\n            Edit\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/app/models/museum.ts\n            \n            class\n            Museum\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/models/user.ts\n            \n            class\n            User\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/models/wiki-entry.ts\n            \n            class\n            WikiEntry\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/services/config/project-config.service.ts\n            \n            injectable\n            ProjectConfigService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/services/config/server-config.service.ts\n            \n            injectable\n            ServerConfigService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/services/edit.service.ts\n            \n            injectable\n            EditService\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/services/get-by-category.service.ts\n            \n            injectable\n            GetByCategoryService\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/services/mocker.ts\n            \n            class\n            Mocker\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/services/object-prototypes/proto-artifact.ts\n            \n            class\n            ProtoArtifact\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/services/object-prototypes/proto-collection.ts\n            \n            class\n            ProtoCollection\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/services/object-prototypes/proto-edit.ts\n            \n            class\n            ProtoEdit\n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                src/app/services/object-prototypes/proto-museum.ts\n            \n            class\n            ProtoMuseum\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/services/object-prototypes/proto-user.ts\n            \n            class\n            ProtoUser\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/services/previous-route.service.ts\n            \n            injectable\n            PreviousRouteService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/services/server-response.ts\n            \n            class\n            ServerResponse\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/services/user/login-guard.service.ts\n            \n            guard\n            LoginGuardService\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/services/user/login.service.ts\n            \n            injectable\n            LoginService\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/services/user/user-info.service.ts\n            \n            injectable\n            UserInfoService\n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                src/app/services/wiki-entry/artifact.service.ts\n            \n            injectable\n            ArtifactService\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/services/wiki-entry/collection.service.ts\n            \n            injectable\n            CollectionService\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/services/wiki-entry/museum.service.ts\n            \n            injectable\n            MuseumService\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/static/about/about.component.ts\n            \n            component\n            AboutComponent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/static/confirmation-modal/confirmation-modal.component.ts\n            \n            component\n            ConfirmationModalComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/static/footer/footer.component.ts\n            \n            component\n            FooterComponent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/static/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/static/loading/loading.component.ts\n            \n            component\n            LoadingComponent\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/static/modal-message/modal-message.component.ts\n            \n            component\n            ModalMessageComponent\n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                src/app/static/navigation-bar/navigation-bar.component.ts\n            \n            component\n            NavigationBarComponent\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/static/page-not-found/page-not-found.component.ts\n            \n            component\n            PageNotFoundComponent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/static/reset-password-modal/reset-password-modal.component.ts\n            \n            component\n            ResetPasswordModalComponent\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/static/search/search-in-category/search-in-category.component.ts\n            \n            component\n            SearchInCategoryComponent\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/static/search/search/search.component.ts\n            \n            component\n            SearchComponent\n            \n                90 %\n                (10/11)\n            \n        \n        \n            \n                \n                src/app/user/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/app/user/registration/ExampleDescription.ts\n            \n            variable\n            EXAMPLE_DESCRIPTION\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/user/registration/registration.component.ts\n            \n            component\n            RegistrationComponent\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/app/user/user-profile/user-edit-list/user-edit-list.component.ts\n            \n            component\n            UserEditListComponent\n            \n                95 %\n                (19/20)\n            \n        \n        \n            \n                \n                src/app/user/user-profile/user-museum-list/user-museum-list.component.ts\n            \n            component\n            UserMuseumListComponent\n            \n                100 %\n                (17/17)\n            \n        \n        \n            \n                \n                src/app/user/user-profile/user-profile.component.ts\n            \n            component\n            UserProfileComponent\n            \n                90 %\n                (9/10)\n            \n        \n        \n            \n                \n                src/app/view/collection-list/collection-list.component.ts\n            \n            component\n            CollectionListComponent\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/view/entry-list/entry-list.component.ts\n            \n            component\n            EntryListComponent\n            \n                100 %\n                (16/16)\n            \n        \n        \n            \n                \n                src/app/view/museum-list/museum-list.component.ts\n            \n            component\n            MuseumListComponent\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/view/view-edit/view-edit.component.ts\n            \n            component\n            ViewEditComponent\n            \n                95 %\n                (22/23)\n            \n        \n        \n            \n                \n                src/app/view/view/view.component.ts\n            \n            component\n            ViewComponent\n            \n                100 %\n                (20/20)\n            \n        \n        \n            \n                \n                src/app/view/wiki-entry-view/wiki-entry-view.component.ts\n            \n            component\n            WikiEntryViewComponent\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~9.0.7\n        \n            @angular/cdk : ^9.2.2\n        \n            @angular/common : ~9.0.7\n        \n            @angular/compiler : ~9.0.7\n        \n            @angular/core : ~9.0.7\n        \n            @angular/forms : ~9.0.7\n        \n            @angular/localize : ^9.1.4\n        \n            @angular/material : ^9.2.2\n        \n            @angular/platform-browser : ~9.0.7\n        \n            @angular/platform-browser-dynamic : ~9.0.7\n        \n            @angular/router : ~9.0.7\n        \n            @fortawesome/angular-fontawesome : ^0.6.1\n        \n            @fortawesome/fontawesome-svg-core : ^1.2.28\n        \n            @fortawesome/free-solid-svg-icons : ^5.13.0\n        \n            @ng-bootstrap/ng-bootstrap : ^6.1.0\n        \n            bootstrap : ^4.4.1\n        \n            electron-packager : ^14.2.1\n        \n            jquery : ^3.5.1\n        \n            js-sha512 : ^0.8.0\n        \n            marked : ^0.8.2\n        \n            ngx-cookie-service : ^3.0.4\n        \n            popper : ^1.0.1\n        \n            popper.js : ^1.16.1\n        \n            rxjs : ^6.5.5\n        \n            tslib : ^1.11.2\n        \n            zone.js : ~0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Mode   (src/.../mode.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/edit/mode.ts\n    \n        \n            \n                \n                    \n                        \n                        Mode\n                    \n                \n                        \n                            \n                                 CREATE\n                            \n                        \n                        \n                            \n                                Value : create\n                            \n                        \n                        \n                            \n                                 EDIT\n                            \n                        \n                        \n                            \n                                Value : edit\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            capitalizeFirstLetter   (src/.../capitalize-first-letter.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/helper/capitalize-first-letter.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            capitalizeFirstLetter\n                        \n                        \n                    \n                \n            \n            \n                \ncapitalizeFirstLetter(str)\n                \n            \n\n\n\n\n            \n                \n                    Capitalizes the first letter of a string\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    str\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The string to be processed\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nMuseum Wiki Frontend\nThis project was written by Peter Li. It is the frontend of the Museum Wiki project for CS205 Spring 2020. \nSetup\nFirst, clone this project using \n$ git clone https://github.com/syccxcc/museum-wiki-frontend\nNode.js is required for this project. Please install the latest stable version of node.js and then run npm install in the project root directory to install all dependencies. Because they amount to over 700MB, this process may take a while. \nAfter the installation of all dependencies are complete. The program will be able to run. \nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. Because the frontend relies on a server for data, there should be some error messages about the internet connection. To see the full picture of the project, please run the backend instead. \nBuild\nRun ng build prod=true to build the project in production mode. The build artifacts will be stored in ../frontend, which is in the folder Lafayette53 in the parent project. \nElectron\nRun npm run electron to run the frontend with electron. Note that this will execute the last frontend build stored in electron/dist, so it does not reflect the current progress of the project. \nTo see how the current project looks like in electron, run npm run electron-build to build the project into electron/dist and then run the program with electron. \nTo distribute the frontend app using electron, navigate to museum-wiki-frontend/electron and run npm install. Then, run electron-packager .. This will package the build in electron/dist into an electron app that run on the operating system of the host computer. For more information, please read about the documentation of electron-packager. \nDocumentation\nTo generate the documentation for this project, simply run npm run compodoc, and a new folder called documentation will appear. Open documentation/index.html to see the documentation. \nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAboutComponent\n\nAboutComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAboutComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCollectionListComponent\n\nCollectionListComponent\n\nAppModule -->\n\nCollectionListComponent->AppModule\n\n\n\n\n\nConfirmationModalComponent\n\nConfirmationModalComponent\n\nAppModule -->\n\nConfirmationModalComponent->AppModule\n\n\n\n\n\nCreateComponent\n\nCreateComponent\n\nAppModule -->\n\nCreateComponent->AppModule\n\n\n\nAppModule -->\n\nCreateComponent->AppModule\n\n\n\n\n\nEditComponent\n\nEditComponent\n\nAppModule -->\n\nEditComponent->AppModule\n\n\n\n\n\nEditOrCreateComponent\n\nEditOrCreateComponent\n\nAppModule -->\n\nEditOrCreateComponent->AppModule\n\n\n\n\n\nEntryListComponent\n\nEntryListComponent\n\nAppModule -->\n\nEntryListComponent->AppModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nAppModule -->\n\nFooterComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nLoadingComponent\n\nLoadingComponent\n\nAppModule -->\n\nLoadingComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nMarkdownDisplayComponent\n\nMarkdownDisplayComponent\n\nAppModule -->\n\nMarkdownDisplayComponent->AppModule\n\n\n\n\n\nMarkdownEditorComponent\n\nMarkdownEditorComponent\n\nAppModule -->\n\nMarkdownEditorComponent->AppModule\n\n\n\n\n\nMarkedPipe\n\nMarkedPipe\n\nAppModule -->\n\nMarkedPipe->AppModule\n\n\n\n\n\nModalMessageComponent\n\nModalMessageComponent\n\nAppModule -->\n\nModalMessageComponent->AppModule\n\n\n\n\n\nMuseumListComponent\n\nMuseumListComponent\n\nAppModule -->\n\nMuseumListComponent->AppModule\n\n\n\n\n\nNavigationBarComponent\n\nNavigationBarComponent\n\nAppModule -->\n\nNavigationBarComponent->AppModule\n\n\n\n\n\nPageNotFoundComponent\n\nPageNotFoundComponent\n\nAppModule -->\n\nPageNotFoundComponent->AppModule\n\n\n\n\n\nRegistrationComponent\n\nRegistrationComponent\n\nAppModule -->\n\nRegistrationComponent->AppModule\n\n\n\n\n\nResetPasswordModalComponent\n\nResetPasswordModalComponent\n\nAppModule -->\n\nResetPasswordModalComponent->AppModule\n\n\n\n\n\nSearchComponent\n\nSearchComponent\n\nAppModule -->\n\nSearchComponent->AppModule\n\n\n\n\n\nSearchInCategoryComponent\n\nSearchInCategoryComponent\n\nAppModule -->\n\nSearchInCategoryComponent->AppModule\n\n\n\n\n\nTagSelectionComponent\n\nTagSelectionComponent\n\nAppModule -->\n\nTagSelectionComponent->AppModule\n\n\n\n\n\nTextLimitPipe\n\nTextLimitPipe\n\nAppModule -->\n\nTextLimitPipe->AppModule\n\n\n\n\n\nUserEditListComponent\n\nUserEditListComponent\n\nAppModule -->\n\nUserEditListComponent->AppModule\n\n\n\n\n\nUserMuseumListComponent\n\nUserMuseumListComponent\n\nAppModule -->\n\nUserMuseumListComponent->AppModule\n\n\n\n\n\nUserProfileComponent\n\nUserProfileComponent\n\nAppModule -->\n\nUserProfileComponent->AppModule\n\n\n\n\n\nViewComponent\n\nViewComponent\n\nAppModule -->\n\nViewComponent->AppModule\n\n\n\n\n\nViewEditComponent\n\nViewEditComponent\n\nAppModule -->\n\nViewEditComponent->AppModule\n\n\n\n\n\nWikiEntryEditorComponent\n\nWikiEntryEditorComponent\n\nAppModule -->\n\nWikiEntryEditorComponent->AppModule\n\n\n\n\n\nWikiEntryViewComponent\n\nWikiEntryViewComponent\n\nAppModule -->\n\nWikiEntryViewComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    30 Components\n                \n            \n        \n        \n            \n                \n                    \n                    10 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    29 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        15 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            EXAMPLE_DESCRIPTION   (src/.../ExampleDescription.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n                \n                    \n                        Then we find all the tests.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n\n                \n                    \n                        Required context for testing\n\n                    \n                \n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n                \n                    \n                        Production environment for Angular\n\n                    \n                \n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n                \n                    \n                        This file can be replaced during build by using the fileReplacements array.\nng build --prod replaces environment.ts with environment.prod.ts.\nThe list of file replacements can be found in angular.json.\n\n                    \n                \n\n            \n        \n\n    src/app/user/registration/ExampleDescription.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            EXAMPLE_DESCRIPTION\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `# Example Markdown Description\n\nMarkdown is a simple markup language that allows easy formatting. In Museum Wiki,\nwe allow users to format the description section using Markdown. Here is a brief\nexample of how it works. If you are experienced with Markdown, feel free to delete\neverything here and start writing your own Markdown text.\n\n## Heading\n\nUse hashtags for article headings.\n\n## Text\n\nExample formatting options are: italics with an *asterisk* or _underscores_,\nbold with **two asterisks** or __two underscores__.\n\n## Cheatsheet\n\nIf you need more help, use [this link](https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet)\nfor a Markdown cheatsheet.\n`\n                        \n                    \n\n                \n                    \n                        an example Markdown Description, currently not in use\n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
